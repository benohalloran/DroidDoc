{"methods":["void closeExpiredConnections()","void closeIdleConnections(long idletime, TimeUnit tunit) Closes idle connections.","abstract void deleteClosedConnections() Deletes all entries for closed connections.","void enableConnectionGC() Enables connection garbage collection (GC).","abstract void freeEntry(BasicPoolEntry entry, boolean reusable, long validDuration, TimeUnit timeUnit) Returns an entry into the pool.","final BasicPoolEntry getEntry(HttpRoute route, Object state, long timeout, TimeUnit tunit) Obtains a pool entry with a connection within the given timeout.","void handleReference(Reference ref)","abstract PoolEntryRequest requestPoolEntry(HttpRoute route, Object state) Returns a new PoolEntryRequest, from which a BasicPoolEntry can be obtained, or the request can be aborted.","void shutdown() Shuts down this pool and all associated resources.","void closeConnection(OperatedClientConnection conn) Closes a connection from this pool.","abstract void handleLostEntry(HttpRoute route) Handles cleaning up for a lost pool entry with the given route.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.impl.conn.tsccm.RefQueueHandler abstract void handleReference(Reference<?> ref) Invoked when a reference is found on the queue.","abstract void handleReference(Reference<?> ref) Invoked when a reference is found on the queue."],"package":"org.apache.http.impl.conn.tsccm","constants":[],"class":"AbstractConnPool","constructors":[],"fields":["protected IdleConnectionHandler idleConnHandler The handler for idle connections.","protected boolean isShutDown Indicates whether this pool is shut down.","protected Set<BasicPoolEntryRef> issuedConnections References to issued connections.","protected int numConnections The current total number of connections.","protected final Lock poolLock The global lock for this pool.","protected ReferenceQueue<Object> refQueue A reference queue to track loss of pool entries to GC."]}