{"methods":["void flush() Writes out all pending buffered data over the open connection.","HttpConnectionMetrics getMetrics() Returns a collection of connection metrcis","boolean isResponseAvailable(int timeout) Checks if response data is available from the connection.","boolean isStale() Checks whether this connection has gone down.","void receiveResponseEntity(HttpResponse response) Receives the next response entity available from this connection and attaches it to an existing HttpResponse object.","HttpResponse receiveResponseHeader() Receives the request line and headers of the next response available from this connection.","void sendRequestEntity(HttpEntityEnclosingRequest request) Sends the request entity over the connection.","void sendRequestHeader(HttpRequest request) Sends the request line and all headers over the connection.","abstract void assertOpen()","EntityDeserializer createEntityDeserializer()","EntitySerializer createEntitySerializer()","HttpResponseFactory createHttpResponseFactory()","HttpMessageWriter createRequestWriter(SessionOutputBuffer buffer, HttpParams params)","HttpMessageParser createResponseParser(SessionInputBuffer buffer, HttpResponseFactory responseFactory, HttpParams params)","void doFlush()","void init(SessionInputBuffer inbuffer, SessionOutputBuffer outbuffer, HttpParams params)","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.HttpClientConnection abstract void flush() Writes out all pending buffered data over the open connection. abstract boolean isResponseAvailable(int timeout) Checks if response data is available from the connection. abstract void receiveResponseEntity(HttpResponse response) Receives the next response entity available from this connection and attaches it to an existing HttpResponse object. abstract HttpResponse receiveResponseHeader() Receives the request line and headers of the next response available from this connection. abstract void sendRequestEntity(HttpEntityEnclosingRequest request) Sends the request entity over the connection. abstract void sendRequestHeader(HttpRequest request) Sends the request line and all headers over the connection.","abstract void flush() Writes out all pending buffered data over the open connection.","abstract boolean isResponseAvailable(int timeout) Checks if response data is available from the connection.","abstract void receiveResponseEntity(HttpResponse response) Receives the next response entity available from this connection and attaches it to an existing HttpResponse object.","abstract HttpResponse receiveResponseHeader() Receives the request line and headers of the next response available from this connection.","abstract void sendRequestEntity(HttpEntityEnclosingRequest request) Sends the request entity over the connection.","abstract void sendRequestHeader(HttpRequest request) Sends the request line and all headers over the connection.","From interface org.apache.http.HttpConnection abstract void close() Closes this connection gracefully. abstract HttpConnectionMetrics getMetrics() Returns a collection of connection metrcis abstract int getSocketTimeout() Returns the socket timeout value. abstract boolean isOpen() Checks if this connection is open. abstract boolean isStale() Checks whether this connection has gone down. abstract void setSocketTimeout(int timeout) Sets the socket timeout value. abstract void shutdown() Force-closes this connection.","abstract void close() Closes this connection gracefully.","abstract HttpConnectionMetrics getMetrics() Returns a collection of connection metrcis","abstract int getSocketTimeout() Returns the socket timeout value.","abstract boolean isOpen() Checks if this connection is open.","abstract boolean isStale() Checks whether this connection has gone down.","abstract void setSocketTimeout(int timeout) Sets the socket timeout value.","abstract void shutdown() Force-closes this connection."],"package":"org.apache.http.impl","constants":[],"class":"AbstractHttpClientConnection","constructors":[],"fields":[]}