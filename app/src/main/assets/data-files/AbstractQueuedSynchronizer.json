{"methods":["final void acquire(int arg) Acquires in exclusive mode, ignoring interrupts.","final void acquireInterruptibly(int arg) Acquires in exclusive mode, aborting if interrupted.","final void acquireShared(int arg) Acquires in shared mode, ignoring interrupts.","final void acquireSharedInterruptibly(int arg) Acquires in shared mode, aborting if interrupted.","final Collection<Thread> getExclusiveQueuedThreads() Returns a collection containing threads that may be waiting to acquire in exclusive mode.","final Thread getFirstQueuedThread() Returns the first (longest-waiting) thread in the queue, or null if no threads are currently queued.","final int getQueueLength() Returns an estimate of the number of threads waiting to acquire.","final Collection<Thread> getQueuedThreads() Returns a collection containing threads that may be waiting to acquire.","final Collection<Thread> getSharedQueuedThreads() Returns a collection containing threads that may be waiting to acquire in shared mode.","final int getWaitQueueLength(AbstractQueuedSynchronizer.ConditionObject condition) Returns an estimate of the number of threads waiting on the given condition associated with this synchronizer.","final Collection<Thread> getWaitingThreads(AbstractQueuedSynchronizer.ConditionObject condition) Returns a collection containing those threads that may be waiting on the given condition associated with this synchronizer.","final boolean hasContended() Queries whether any threads have ever contended to acquire this synchronizer; that is if an acquire method has ever blocked.","final boolean hasQueuedPredecessors() Queries whether any threads have been waiting to acquire longer than the current thread.","final boolean hasQueuedThreads() Queries whether any threads are waiting to acquire.","final boolean hasWaiters(AbstractQueuedSynchronizer.ConditionObject condition) Queries whether any threads are waiting on the given condition associated with this synchronizer.","final boolean isQueued(Thread thread) Returns true if the given thread is currently queued.","final boolean owns(AbstractQueuedSynchronizer.ConditionObject condition) Queries whether the given ConditionObject uses this synchronizer as its lock.","final boolean release(int arg) Releases in exclusive mode.","final boolean releaseShared(int arg) Releases in shared mode.","String toString() Returns a string identifying this synchronizer, as well as its state.","final boolean tryAcquireNanos(int arg, long nanosTimeout) Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses.","final boolean tryAcquireSharedNanos(int arg, long nanosTimeout) Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses.","final boolean compareAndSetState(int expect, int update) Atomically sets synchronization state to the given updated value if the current state value equals the expected value.","final int getState() Returns the current value of synchronization state.","boolean isHeldExclusively() Returns true if synchronization is held exclusively with respect to the current (calling) thread.","final void setState(int newState) Sets the value of synchronization state.","boolean tryAcquire(int arg) Attempts to acquire in exclusive mode.","int tryAcquireShared(int arg) Attempts to acquire in shared mode.","boolean tryRelease(int arg) Attempts to set the state to reflect a release in exclusive mode.","boolean tryReleaseShared(int arg) Attempts to set the state to reflect a release in shared mode.","[Expand] Inherited Methods","From class java.util.concurrent.locks.AbstractOwnableSynchronizer final Thread getExclusiveOwnerThread() Returns the thread last set by setExclusiveOwnerThread, or null if never set. final void setExclusiveOwnerThread(Thread t) Sets the thread that currently owns exclusive access.","final Thread getExclusiveOwnerThread() Returns the thread last set by setExclusiveOwnerThread, or null if never set.","final void setExclusiveOwnerThread(Thread t) Sets the thread that currently owns exclusive access.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.util.concurrent.locks","constants":[],"class":"AbstractQueuedSynchronizer","constructors":[],"fields":[]}