{"methods":["boolean equals(Object obj) Compares this instance with the specified object and indicates if they are equal.","int getAddedCount() Gets the number of added characters.","CharSequence getBeforeText() Sets the text before a change.","CharSequence getClassName() Gets the class name of the source.","CharSequence getContentDescription() Gets the description of the source.","int getCurrentItemIndex() Gets the index of the source in the list of items the can be visited.","int getFromIndex() Gets the index of the first character of the changed sequence, or the beginning of a text selection or the index of the first visible item when scrolling.","Object getImpl() This method is deprecated. This method will be removed in a subsequent release of the support library.","int getItemCount() Gets the number of items that can be visited.","int getMaxScrollX() Gets the max scroll offset of the source left edge in pixels.","int getMaxScrollY() Gets the max scroll offset of the source top edge in pixels.","Parcelable getParcelableData() Gets the Parcelable data.","int getRemovedCount() Gets the number of removed characters.","int getScrollX() Gets the scroll offset of the source left edge in pixels.","int getScrollY() Gets the scroll offset of the source top edge in pixels.","AccessibilityNodeInfoCompat getSource() Gets the AccessibilityNodeInfo of the event source.","List<CharSequence> getText() Gets the text of the event.","int getToIndex() Gets the index of text selection end or the index of the last visible item when scrolling.","int getWindowId() Gets the id of the window from which the event comes from.","int hashCode() Returns an integer hash code for this object.","boolean isChecked() Gets if the source is checked.","boolean isEnabled() Gets if the source is enabled.","boolean isFullScreen() Gets if the source is taking the entire screen.","boolean isPassword() Gets if the source is a password field.","boolean isScrollable() Gets if the source is scrollable.","static AccessibilityRecordCompat obtain() Returns a cached instance if such is available or a new one is instantiated.","static AccessibilityRecordCompat obtain(AccessibilityRecordCompat record) Returns a cached instance if such is available or a new one is instantiated.","void recycle() Return an instance back to be reused.","void setAddedCount(int addedCount) Sets the number of added characters.","void setBeforeText(CharSequence beforeText) Sets the text before a change.","void setChecked(boolean isChecked) Sets if the source is checked.","void setClassName(CharSequence className) Sets the class name of the source.","void setContentDescription(CharSequence contentDescription) Sets the description of the source.","void setCurrentItemIndex(int currentItemIndex) Sets the index of the source in the list of items that can be visited.","void setEnabled(boolean isEnabled) Sets if the source is enabled.","void setFromIndex(int fromIndex) Sets the index of the first character of the changed sequence or the beginning of a text selection or the index of the first visible item when scrolling.","void setFullScreen(boolean isFullScreen) Sets if the source is taking the entire screen.","void setItemCount(int itemCount) Sets the number of items that can be visited.","void setMaxScrollX(int maxScrollX) Sets the max scroll offset of the source left edge in pixels.","void setMaxScrollY(int maxScrollY) Sets the max scroll offset of the source top edge in pixels.","void setParcelableData(Parcelable parcelableData) Sets the Parcelable data of the event.","void setPassword(boolean isPassword) Sets if the source is a password field.","void setRemovedCount(int removedCount) Sets the number of removed characters.","void setScrollX(int scrollX) Sets the scroll offset of the source left edge in pixels.","void setScrollY(int scrollY) Sets the scroll offset of the source top edge in pixels.","void setScrollable(boolean scrollable) Sets if the source is scrollable.","void setSource(View root, int virtualDescendantId) Sets the source to be a virtual descendant of the given root.","void setSource(View source) Sets the event source.","void setToIndex(int toIndex) Sets the index of text selection end or the index of the last visible item when scrolling.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v4.view.accessibility","constants":[],"class":"AccessibilityRecordCompat","constructors":[],"fields":[]}