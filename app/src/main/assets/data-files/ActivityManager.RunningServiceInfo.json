{"methods":["int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","void readFromParcel(Parcel source)","void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.app","constants":["int FLAG_FOREGROUND Bit for flags: set if the service has asked to run as a foreground process.","int FLAG_PERSISTENT_PROCESS Bit for {@link #flags): set if the service is running in a persistent process.","int FLAG_STARTED Bit for flags: set if this service has been explicitly started.","int FLAG_SYSTEM_PROCESS Bit for {@link #flags): set if the service is running in a core system process.","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"ActivityManager.RunningServiceInfo","constructors":[],"fields":["public static final Creator<ActivityManager.RunningServiceInfo> CREATOR","public long activeSince The time when the service was first made active, either by someone starting or binding to it.","public int clientCount Number of clients connected to the service.","public int clientLabel For special services that are bound to by system code, this is a string resource providing a user-visible label for who the client is.","public String clientPackage For special services that are bound to by system code, this is the package that holds the binding.","public int crashCount Number of times the service's process has crashed while the service is running.","public int flags Running flags.","public boolean foreground Set to true if the service has asked to run as a foreground process.","public long lastActivityTime The time when there was last activity in the service (either explicit requests to start it or clients binding to it).","public int pid If non-zero, this is the process the service is running in.","public String process The name of the process this service runs in.","public long restarting If non-zero, this service is not currently running, but scheduled to restart at the given time.","public ComponentName service The service component.","public boolean started Set to true if this service has been explicitly started.","public int uid The UID that owns this service."]}