{"methods":["int addAppTask(Activity activity, Intent intent, ActivityManager.TaskDescription description, Bitmap thumbnail) Add a new ActivityManager.AppTask for the calling application.","boolean clearApplicationUserData() Permits an application to erase its own data from disk.","void dumpPackageState(FileDescriptor fd, String packageName) Perform a system dump of various state associated with the given application package name.","Size getAppTaskThumbnailSize() Return the current design dimensions for ActivityManager.AppTask thumbnails, for use with addAppTask(Activity, Intent, ActivityManager.TaskDescription, Bitmap).","List<ActivityManager.AppTask> getAppTasks() Get the list of tasks associated with the calling application.","ConfigurationInfo getDeviceConfigurationInfo() Get the device configuration attributes.","int getLargeMemoryClass() Return the approximate per-application memory class of the current device when an application is running with a large heap.","int getLauncherLargeIconDensity() Get the preferred density of icons for the launcher.","int getLauncherLargeIconSize() Get the preferred launcher icon size.","int getMemoryClass() Return the approximate per-application memory class of the current device.","void getMemoryInfo(ActivityManager.MemoryInfo outInfo) Return general information about the memory state of the system.","static void getMyMemoryState(ActivityManager.RunningAppProcessInfo outState) Return global memory state information for the calling process.","MemoryInfo[] getProcessMemoryInfo(int[] pids) Return information about the memory usage of one or more processes.","List<ActivityManager.ProcessErrorStateInfo> getProcessesInErrorState() Returns a list of any processes that are currently in an error condition.","List<ActivityManager.RecentTaskInfo> getRecentTasks(int maxNum, int flags) This method was deprecated in API level 21. As of LOLLIPOP, this method is no longer available to third party applications: the introduction of document-centric recents means it can leak personal information to the caller. For backwards compatibility, it will still return a small subset of its data: at least the caller's own tasks (though see getAppTasks() for the correct supported way to retrieve that information), and possibly some other tasks such as home that are known to not be sensitive.","List<ActivityManager.RunningAppProcessInfo> getRunningAppProcesses() Returns a list of application processes that are running on the device.","PendingIntent getRunningServiceControlPanel(ComponentName service) Returns a PendingIntent you can start to show a control panel for the given running service.","List<ActivityManager.RunningServiceInfo> getRunningServices(int maxNum) Return a list of the services that are currently running.","List<ActivityManager.RunningTaskInfo> getRunningTasks(int maxNum) This method was deprecated in API level 21. As of LOLLIPOP, this method is no longer available to third party applications: the introduction of document-centric recents means it can leak person information to the caller. For backwards compatibility, it will still retu rn a small subset of its data: at least the caller's own tasks, and possibly some other tasks such as home that are known to not be sensitive.","boolean isInLockTaskMode() Return whether currently in lock task mode.","boolean isLowRamDevice() Returns true if this is a low-RAM device.","static boolean isRunningInTestHarness() Returns \"true\" if device is running in a test harness.","static boolean isUserAMonkey() Returns \"true\" if the user interface is currently being messed with by a monkey.","void killBackgroundProcesses(String packageName) Have the system immediately kill all background processes associated with the given package.","void moveTaskToFront(int taskId, int flags, Bundle options) Ask that the task associated with a given task ID be moved to the front of the stack, so it is now visible to the user.","void moveTaskToFront(int taskId, int flags) Equivalent to calling moveTaskToFront(int, int, Bundle) with a null options argument.","void restartPackage(String packageName) This method was deprecated in API level 8. This is now just a wrapper for killBackgroundProcesses(String); the previous behavior here is no longer available to applications because it allows them to break other applications by removing their alarms, stopping their services, etc.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.app","constants":["String META_HOME_ALTERNATE <meta-data> name for a 'home' Activity that declares a package that is to be uninstalled in lieu of the declaring one.","int MOVE_TASK_NO_USER_ACTION Flag for moveTaskToFront(int, int): don't count this as a user-instigated action, so the current activity will not receive a hint that the user is leaving.","int MOVE_TASK_WITH_HOME Flag for moveTaskToFront(int, int): also move the \"home\" activity along with the task, so it is positioned immediately behind the task.","int RECENT_IGNORE_UNAVAILABLE Provides a list that does not contain any recent tasks that currently are not available to the user.","int RECENT_WITH_EXCLUDED Flag for use with getRecentTasks(int, int): return all tasks, even those that have set their FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS flag."],"class":"ActivityManager","constructors":[],"fields":[]}