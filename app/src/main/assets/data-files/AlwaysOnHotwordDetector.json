{"methods":["Intent createEnrollIntent() Creates an intent to start the enrollment for the associated keyphrase.","Intent createReEnrollIntent() Creates an intent to start the re-enrollment for the associated keyphrase.","Intent createUnEnrollIntent() Creates an intent to start the un-enrollment for the associated keyphrase.","int getSupportedRecognitionModes() Gets the recognition modes supported by the associated keyphrase.","boolean startRecognition(int recognitionFlags) Starts recognition for the associated keyphrase.","boolean stopRecognition() Stops recognition for the associated keyphrase.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.service.voice","constants":["int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS Recognition flag for startRecognition(int) that indicates whether the recognition should keep going on even after the keyphrase triggers.","int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO Recognition flag for startRecognition(int) that indicates whether the trigger audio for hotword needs to be captured.","int RECOGNITION_MODE_USER_IDENTIFICATION User identification performed with the keyphrase recognition.","int RECOGNITION_MODE_VOICE_TRIGGER Simple recognition of the key phrase.","int STATE_HARDWARE_UNAVAILABLE Indicates that recognition for the given keyphrase is not available on the system because of the hardware configuration.","int STATE_KEYPHRASE_ENROLLED Indicates that the given keyphrase is currently enrolled and it's possible to start recognition for it.","int STATE_KEYPHRASE_UNENROLLED Indicates that the given keyphrase is not enrolled.","int STATE_KEYPHRASE_UNSUPPORTED Indicates that recognition for the given keyphrase is not supported."],"class":"AlwaysOnHotwordDetector","constructors":[],"fields":[]}