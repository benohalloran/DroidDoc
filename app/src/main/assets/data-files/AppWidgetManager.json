{"methods":["boolean bindAppWidgetIdIfAllowed(int appWidgetId, UserHandle user, ComponentName provider, Bundle options) Set the provider for a given appWidgetId if the caller has a permission.","boolean bindAppWidgetIdIfAllowed(int appWidgetId, ComponentName provider) Set the component for a given appWidgetId.","boolean bindAppWidgetIdIfAllowed(int appWidgetId, ComponentName provider, Bundle options) Set the component for a given appWidgetId.","int[] getAppWidgetIds(ComponentName provider) Get the list of appWidgetIds that have been bound to the given AppWidget provider.","AppWidgetProviderInfo getAppWidgetInfo(int appWidgetId) Get the available info about the AppWidget.","Bundle getAppWidgetOptions(int appWidgetId) Get the extras associated with a given widget instance.","List<AppWidgetProviderInfo> getInstalledProviders() Return a list of the AppWidget providers that are currently installed.","List<AppWidgetProviderInfo> getInstalledProvidersForProfile(UserHandle profile) Gets the AppWidget providers for the given user profile.","static AppWidgetManager getInstance(Context context) Get the AppWidgetManager instance to use for the supplied Context object.","void notifyAppWidgetViewDataChanged(int[] appWidgetIds, int viewId) Notifies the specified collection view in all the specified AppWidget instances to invalidate their data.","void notifyAppWidgetViewDataChanged(int appWidgetId, int viewId) Notifies the specified collection view in the specified AppWidget instance to invalidate its data.","void partiallyUpdateAppWidget(int appWidgetId, RemoteViews views) Perform an incremental update or command on the widget specified by appWidgetId.","void partiallyUpdateAppWidget(int[] appWidgetIds, RemoteViews views) Perform an incremental update or command on the widget(s) specified by appWidgetIds.","void updateAppWidget(int[] appWidgetIds, RemoteViews views) Set the RemoteViews to use for the specified appWidgetIds.","void updateAppWidget(ComponentName provider, RemoteViews views) Set the RemoteViews to use for all AppWidget instances for the supplied AppWidget provider.","void updateAppWidget(int appWidgetId, RemoteViews views) Set the RemoteViews to use for the specified appWidgetId.","void updateAppWidgetOptions(int appWidgetId, Bundle options) Update the extras for a given widget instance.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.appwidget","constants":["String ACTION_APPWIDGET_BIND Activity action to launch from your AppWidgetHost activity when you want to bind an AppWidget to display and bindAppWidgetIdIfAllowed returns false.","String ACTION_APPWIDGET_CONFIGURE Sent when it is time to configure your AppWidget while it is being added to a host.","String ACTION_APPWIDGET_DELETED Sent when an instance of an AppWidget is deleted from its host.","String ACTION_APPWIDGET_DISABLED Sent when the last AppWidget of this provider is removed from the last host.","String ACTION_APPWIDGET_ENABLED Sent when an instance of an AppWidget is added to a host for the first time.","String ACTION_APPWIDGET_HOST_RESTORED Sent to widget hosts after AppWidget state related to the host has been restored from backup.","String ACTION_APPWIDGET_OPTIONS_CHANGED Sent when the custom extras for an AppWidget change.","String ACTION_APPWIDGET_PICK Activity action to launch from your AppWidgetHost activity when you want to pick an AppWidget to display.","String ACTION_APPWIDGET_RESTORED Sent to an AppWidgetProvider after AppWidget state related to that provider has been restored from backup.","String ACTION_APPWIDGET_UPDATE Sent when it is time to update your AppWidget.","String EXTRA_APPWIDGET_ID An intent extra that contains one appWidgetId.","String EXTRA_APPWIDGET_IDS An intent extra that contains multiple appWidgetIds.","String EXTRA_APPWIDGET_OLD_IDS An intent extra that contains multiple appWidgetIds.","String EXTRA_APPWIDGET_OPTIONS An intent extra which points to a bundle of extra information for a particular widget id.","String EXTRA_APPWIDGET_PROVIDER An intent extra that contains the component name of a AppWidget provider.","String EXTRA_APPWIDGET_PROVIDER_PROFILE An intent extra that contains the user handle of the profile under which an AppWidget provider is registered.","String EXTRA_CUSTOM_EXTRAS An intent extra to pass to the AppWidget picker containing a List of Bundle objects to mix in to the list of AppWidgets that are installed. It will be added to the extras object on the Intent that is returned from the picker activity.","String EXTRA_CUSTOM_INFO An intent extra to pass to the AppWidget picker containing a List of AppWidgetProviderInfo objects to mix in to the list of AppWidgets that are installed.","String EXTRA_HOST_ID An intent extra attached to the ACTION_APPWIDGET_HOST_RESTORED broadcast, indicating the integer ID of the host whose widgets have just been restored.","int INVALID_APPWIDGET_ID A sentinel value that the AppWidget manager will never return as a appWidgetId.","String META_DATA_APPWIDGET_PROVIDER Field for the manifest meta-data tag.","String OPTION_APPWIDGET_HOST_CATEGORY A bundle extra that hints to the AppWidgetProvider the category of host that owns this this widget.","String OPTION_APPWIDGET_MAX_HEIGHT A bundle extra that contains the upper bound on the current width, in dips, of a widget instance.","String OPTION_APPWIDGET_MAX_WIDTH A bundle extra that contains the upper bound on the current width, in dips, of a widget instance.","String OPTION_APPWIDGET_MIN_HEIGHT A bundle extra that contains the lower bound on the current height, in dips, of a widget instance.","String OPTION_APPWIDGET_MIN_WIDTH A bundle extra that contains the lower bound on the current width, in dips, of a widget instance."],"class":"AppWidgetManager","constructors":[],"fields":[]}