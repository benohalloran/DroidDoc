{"methods":["static <T> List<T> asList(T... array) Returns a List of the objects in the specified array.","static <T> int binarySearch(T[] array, int startIndex, int endIndex, T value, Comparator<? super T> comparator) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive), using comparator to compare elements.","static int binarySearch(byte[] array, int startIndex, int endIndex, byte value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static int binarySearch(long[] array, int startIndex, int endIndex, long value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static int binarySearch(long[] array, long value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(char[] array, char value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(short[] array, int startIndex, int endIndex, short value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static <T> int binarySearch(T[] array, T value, Comparator<? super T> comparator) Performs a binary search for value in the ascending sorted array array, using comparator to compare elements.","static int binarySearch(char[] array, int startIndex, int endIndex, char value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static int binarySearch(short[] array, short value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(Object[] array, int startIndex, int endIndex, Object value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static int binarySearch(byte[] array, byte value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(double[] array, double value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(double[] array, int startIndex, int endIndex, double value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static int binarySearch(float[] array, float value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(int[] array, int value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(float[] array, int startIndex, int endIndex, float value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static int binarySearch(Object[] array, Object value) Performs a binary search for value in the ascending sorted array array.","static int binarySearch(int[] array, int startIndex, int endIndex, int value) Performs a binary search for value in the ascending sorted array array, in the range specified by fromIndex (inclusive) and toIndex (exclusive).","static <T, U> T[] copyOf(U[] original, int newLength, Class<? extends T[]> newType) Copies newLength elements from original into a new array.","static short[] copyOf(short[] original, int newLength) Copies newLength elements from original into a new array.","static long[] copyOf(long[] original, int newLength) Copies newLength elements from original into a new array.","static double[] copyOf(double[] original, int newLength) Copies newLength elements from original into a new array.","static boolean[] copyOf(boolean[] original, int newLength) Copies newLength elements from original into a new array.","static char[] copyOf(char[] original, int newLength) Copies newLength elements from original into a new array.","static int[] copyOf(int[] original, int newLength) Copies newLength elements from original into a new array.","static float[] copyOf(float[] original, int newLength) Copies newLength elements from original into a new array.","static byte[] copyOf(byte[] original, int newLength) Copies newLength elements from original into a new array.","static <T> T[] copyOf(T[] original, int newLength) Copies newLength elements from original into a new array.","static byte[] copyOfRange(byte[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static <T> T[] copyOfRange(T[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static <T, U> T[] copyOfRange(U[] original, int start, int end, Class<? extends T[]> newType) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static double[] copyOfRange(double[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static int[] copyOfRange(int[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static long[] copyOfRange(long[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static boolean[] copyOfRange(boolean[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static char[] copyOfRange(char[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static short[] copyOfRange(short[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static float[] copyOfRange(float[] original, int start, int end) Copies elements from original into a new array, from indexes start (inclusive) to end (exclusive).","static boolean deepEquals(Object[] array1, Object[] array2) Returns true if the two given arrays are deeply equal to one another.","static int deepHashCode(Object[] array) Returns a hash code based on the \"deep contents\" of the given array.","static String deepToString(Object[] array) Creates a \"deep\" String representation of the Object[] passed, such that if the array contains other arrays, the String representation of those arrays is generated as well.","static boolean equals(char[] array1, char[] array2) Compares the two arrays.","static boolean equals(Object[] array1, Object[] array2) Compares the two arrays.","static boolean equals(int[] array1, int[] array2) Compares the two arrays.","static boolean equals(float[] array1, float[] array2) Compares the two arrays.","static boolean equals(double[] array1, double[] array2) Compares the two arrays.","static boolean equals(short[] array1, short[] array2) Compares the two arrays.","static boolean equals(byte[] array1, byte[] array2) Compares the two arrays.","static boolean equals(long[] array1, long[] array2) Compares the two arrays.","static boolean equals(boolean[] array1, boolean[] array2) Compares the two arrays.","static void fill(boolean[] array, int start, int end, boolean value) Fills the specified range in the array with the specified element.","static void fill(int[] array, int value) Fills the specified array with the specified element.","static void fill(int[] array, int start, int end, int value) Fills the specified range in the array with the specified element.","static void fill(double[] array, int start, int end, double value) Fills the specified range in the array with the specified element.","static void fill(char[] array, char value) Fills the specified array with the specified element.","static void fill(float[] array, float value) Fills the specified array with the specified element.","static void fill(char[] array, int start, int end, char value) Fills the specified range in the array with the specified element.","static void fill(long[] array, long value) Fills the specified array with the specified element.","static void fill(float[] array, int start, int end, float value) Fills the specified range in the array with the specified element.","static void fill(Object[] array, int start, int end, Object value) Fills the specified range in the array with the specified element.","static void fill(byte[] array, byte value) Fills the specified array with the specified element.","static void fill(short[] array, int start, int end, short value) Fills the specified range in the array with the specified element.","static void fill(byte[] array, int start, int end, byte value) Fills the specified range in the array with the specified element.","static void fill(double[] array, double value) Fills the specified array with the specified element.","static void fill(long[] array, int start, int end, long value) Fills the specified range in the array with the specified element.","static void fill(boolean[] array, boolean value) Fills the specified array with the specified element.","static void fill(short[] array, short value) Fills the specified array with the specified element.","static void fill(Object[] array, Object value) Fills the specified array with the specified element.","static int hashCode(boolean[] array) Returns a hash code based on the contents of the given array.","static int hashCode(int[] array) Returns a hash code based on the contents of the given array.","static int hashCode(Object[] array) Returns a hash code based on the contents of the given array.","static int hashCode(double[] array) Returns a hash code based on the contents of the given array.","static int hashCode(short[] array) Returns a hash code based on the contents of the given array.","static int hashCode(byte[] array) Returns a hash code based on the contents of the given array.","static int hashCode(char[] array) Returns a hash code based on the contents of the given array.","static int hashCode(float[] array) Returns a hash code based on the contents of the given array.","static int hashCode(long[] array) Returns a hash code based on the contents of the given array.","static void sort(long[] array, int start, int end) Sorts the specified range in the array in ascending numerical order.","static void sort(char[] array) Sorts the specified array in ascending numerical order.","static void sort(int[] array, int start, int end) Sorts the specified range in the array in ascending numerical order.","static <T> void sort(T[] array, Comparator<? super T> comparator) Sorts the specified array using the specified Comparator.","static void sort(int[] array) Sorts the specified array in ascending numerical order.","static void sort(Object[] array) Sorts the specified array in ascending natural order.","static void sort(char[] array, int start, int end) Sorts the specified range in the array in ascending numerical order.","static void sort(double[] array, int start, int end) Sorts the specified range in the array in ascending numerical order.","static void sort(float[] array) Sorts the specified array in ascending numerical order.","static <T> void sort(T[] array, int start, int end, Comparator<? super T> comparator) Sorts the specified range in the array using the specified Comparator.","static void sort(byte[] array, int start, int end) Sorts the specified range in the array in ascending numerical order.","static void sort(long[] array) Sorts the specified array in ascending numerical order.","static void sort(float[] array, int start, int end) Sorts the specified range in the array in ascending numerical order.","static void sort(short[] array, int start, int end) Sorts the specified range in the array in ascending numerical order.","static void sort(byte[] array) Sorts the specified array in ascending numerical order.","static void sort(short[] array) Sorts the specified array in ascending numerical order.","static void sort(Object[] array, int start, int end) Sorts the specified range in the array in ascending natural order.","static void sort(double[] array) Sorts the specified array in ascending numerical order.","static String toString(long[] array) Creates a String representation of the long[] passed.","static String toString(int[] array) Creates a String representation of the int[] passed.","static String toString(char[] array) Creates a String representation of the char[] passed.","static String toString(boolean[] array) Creates a String representation of the boolean[] passed.","static String toString(byte[] array) Creates a String representation of the byte[] passed.","static String toString(float[] array) Creates a String representation of the float[] passed.","static String toString(short[] array) Creates a String representation of the short[] passed.","static String toString(Object[] array) Creates a String representation of the Object[] passed.","static String toString(double[] array) Creates a String representation of the double[] passed.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.util","constants":[],"class":"Arrays","constructors":[],"fields":[]}