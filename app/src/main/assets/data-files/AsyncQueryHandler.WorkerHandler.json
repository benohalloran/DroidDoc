{"methods":["void handleMessage(Message msg) Subclasses must implement this to receive messages.","[Expand] Inherited Methods","From class android.os.Handler void dispatchMessage(Message msg) Handle system messages here. final void dump(Printer pw, String prefix) final Looper getLooper() String getMessageName(Message message) Returns a string representing the name of the specified message. void handleMessage(Message msg) Subclasses must implement this to receive messages. final boolean hasMessages(int what, Object object) Check if there are any pending posts of messages with code 'what' and whose obj is 'object' in the message queue. final boolean hasMessages(int what) Check if there are any pending posts of messages with code 'what' in the message queue. final Message obtainMessage(int what, int arg1, int arg2) Same as obtainMessage(), except that it also sets the what, arg1 and arg2 members of the returned Message. final Message obtainMessage() Returns a new Message from the global message pool. final Message obtainMessage(int what, int arg1, int arg2, Object obj) Same as obtainMessage(), except that it also sets the what, obj, arg1,and arg2 values on the returned Message. final Message obtainMessage(int what) Same as obtainMessage(), except that it also sets the what member of the returned Message. final Message obtainMessage(int what, Object obj) Same as obtainMessage(), except that it also sets the what and obj members of the returned Message. final boolean post(Runnable r) Causes the Runnable r to be added to the message queue. final boolean postAtFrontOfQueue(Runnable r) Posts a message to an object that implements Runnable. final boolean postAtTime(Runnable r, Object token, long uptimeMillis) Causes the Runnable r to be added to the message queue, to be run at a specific time given by uptimeMillis. final boolean postAtTime(Runnable r, long uptimeMillis) Causes the Runnable r to be added to the message queue, to be run at a specific time given by uptimeMillis. final boolean postDelayed(Runnable r, long delayMillis) Causes the Runnable r to be added to the message queue, to be run after the specified amount of time elapses. final void removeCallbacks(Runnable r) Remove any pending posts of Runnable r that are in the message queue. final void removeCallbacks(Runnable r, Object token) Remove any pending posts of Runnable r with Object token that are in the message queue. final void removeCallbacksAndMessages(Object token) Remove any pending posts of callbacks and sent messages whose obj is token. final void removeMessages(int what) Remove any pending posts of messages with code 'what' that are in the message queue. final void removeMessages(int what, Object object) Remove any pending posts of messages with code 'what' and whose obj is 'object' that are in the message queue. final boolean sendEmptyMessage(int what) Sends a Message containing only the what value. final boolean sendEmptyMessageAtTime(int what, long uptimeMillis) Sends a Message containing only the what value, to be delivered at a specific time. final boolean sendEmptyMessageDelayed(int what, long delayMillis) Sends a Message containing only the what value, to be delivered after the specified amount of time elapses. final boolean sendMessage(Message msg) Pushes a message onto the end of the message queue after all pending messages before the current time. final boolean sendMessageAtFrontOfQueue(Message msg) Enqueue a message at the front of the message queue, to be processed on the next iteration of the message loop. boolean sendMessageAtTime(Message msg, long uptimeMillis) Enqueue a message into the message queue after all pending messages before the absolute time (in milliseconds) uptimeMillis. final boolean sendMessageDelayed(Message msg, long delayMillis) Enqueue a message into the message queue after all pending messages before (current time + delayMillis). String toString() Returns a string containing a concise, human-readable description of this object.","void dispatchMessage(Message msg) Handle system messages here.","final void dump(Printer pw, String prefix)","final Looper getLooper()","String getMessageName(Message message) Returns a string representing the name of the specified message.","void handleMessage(Message msg) Subclasses must implement this to receive messages.","final boolean hasMessages(int what, Object object) Check if there are any pending posts of messages with code 'what' and whose obj is 'object' in the message queue.","final boolean hasMessages(int what) Check if there are any pending posts of messages with code 'what' in the message queue.","final Message obtainMessage(int what, int arg1, int arg2) Same as obtainMessage(), except that it also sets the what, arg1 and arg2 members of the returned Message.","final Message obtainMessage() Returns a new Message from the global message pool.","final Message obtainMessage(int what, int arg1, int arg2, Object obj) Same as obtainMessage(), except that it also sets the what, obj, arg1,and arg2 values on the returned Message.","final Message obtainMessage(int what) Same as obtainMessage(), except that it also sets the what member of the returned Message.","final Message obtainMessage(int what, Object obj) Same as obtainMessage(), except that it also sets the what and obj members of the returned Message.","final boolean post(Runnable r) Causes the Runnable r to be added to the message queue.","final boolean postAtFrontOfQueue(Runnable r) Posts a message to an object that implements Runnable.","final boolean postAtTime(Runnable r, Object token, long uptimeMillis) Causes the Runnable r to be added to the message queue, to be run at a specific time given by uptimeMillis.","final boolean postAtTime(Runnable r, long uptimeMillis) Causes the Runnable r to be added to the message queue, to be run at a specific time given by uptimeMillis.","final boolean postDelayed(Runnable r, long delayMillis) Causes the Runnable r to be added to the message queue, to be run after the specified amount of time elapses.","final void removeCallbacks(Runnable r) Remove any pending posts of Runnable r that are in the message queue.","final void removeCallbacks(Runnable r, Object token) Remove any pending posts of Runnable r with Object token that are in the message queue.","final void removeCallbacksAndMessages(Object token) Remove any pending posts of callbacks and sent messages whose obj is token.","final void removeMessages(int what) Remove any pending posts of messages with code 'what' that are in the message queue.","final void removeMessages(int what, Object object) Remove any pending posts of messages with code 'what' and whose obj is 'object' that are in the message queue.","final boolean sendEmptyMessage(int what) Sends a Message containing only the what value.","final boolean sendEmptyMessageAtTime(int what, long uptimeMillis) Sends a Message containing only the what value, to be delivered at a specific time.","final boolean sendEmptyMessageDelayed(int what, long delayMillis) Sends a Message containing only the what value, to be delivered after the specified amount of time elapses.","final boolean sendMessage(Message msg) Pushes a message onto the end of the message queue after all pending messages before the current time.","final boolean sendMessageAtFrontOfQueue(Message msg) Enqueue a message at the front of the message queue, to be processed on the next iteration of the message loop.","boolean sendMessageAtTime(Message msg, long uptimeMillis) Enqueue a message into the message queue after all pending messages before the absolute time (in milliseconds) uptimeMillis.","final boolean sendMessageDelayed(Message msg, long delayMillis) Enqueue a message into the message queue after all pending messages before (current time + delayMillis).","String toString() Returns a string containing a concise, human-readable description of this object.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.content","constants":[],"class":"AsyncQueryHandler.WorkerHandler","constructors":[],"fields":[]}