{"methods":["int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","int getContentType() Return the content type.","int getFlags() Return the flags.","int getUsage() Return the usage.","int hashCode() Returns an integer hash code for this object.","String toString() Returns a string containing a concise, human-readable description of this object.","void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.media","constants":["int CONTENT_TYPE_MOVIE Content type value to use when the content type is a soundtrack, typically accompanying a movie or TV program.","int CONTENT_TYPE_MUSIC Content type value to use when the content type is music.","int CONTENT_TYPE_SONIFICATION Content type value to use when the content type is a sound used to accompany a user action, such as a beep or sound effect expressing a key click, or event, such as the type of a sound for a bonus being received in a game.","int CONTENT_TYPE_SPEECH Content type value to use when the content type is speech.","int CONTENT_TYPE_UNKNOWN Content type value to use when the content type is unknown, or other than the ones defined.","int FLAG_AUDIBILITY_ENFORCED Flag defining a behavior where the audibility of the sound will be ensured by the system.","int FLAG_HW_AV_SYNC Flag requesting the use of an output stream supporting hardware A/V synchronization.","int USAGE_ALARM Usage value to use when the usage is an alarm (e.g.","int USAGE_ASSISTANCE_ACCESSIBILITY Usage value to use when the usage is for accessibility, such as with a screen reader.","int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE Usage value to use when the usage is driving or navigation directions.","int USAGE_ASSISTANCE_SONIFICATION Usage value to use when the usage is sonification, such as with user interface sounds.","int USAGE_GAME Usage value to use when the usage is for game audio.","int USAGE_MEDIA Usage value to use when the usage is media, such as music, or movie soundtracks.","int USAGE_NOTIFICATION Usage value to use when the usage is notification.","int USAGE_NOTIFICATION_COMMUNICATION_DELAYED Usage value to use when the usage is notification for a non-immediate type of communication such as e-mail.","int USAGE_NOTIFICATION_COMMUNICATION_INSTANT Usage value to use when the usage is notification for an \"instant\" communication such as a chat, or SMS.","int USAGE_NOTIFICATION_COMMUNICATION_REQUEST Usage value to use when the usage is a request to enter/end a communication, such as a VoIP communication or video-conference.","int USAGE_NOTIFICATION_EVENT Usage value to use when the usage is to attract the user's attention, such as a reminder or low battery warning.","int USAGE_NOTIFICATION_RINGTONE Usage value to use when the usage is telephony ringtone.","int USAGE_UNKNOWN Usage value to use when the usage is unknown.","int USAGE_VOICE_COMMUNICATION Usage value to use when the usage is voice communications, such as telephony or VoIP.","int USAGE_VOICE_COMMUNICATION_SIGNALLING Usage value to use when the usage is in-call signalling, such as with a \"busy\" beep, or DTMF tones.","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"AudioAttributes","constructors":[],"fields":["public static final Creator<AudioAttributes> CREATOR"]}