{"methods":["int getChannelMask() Return the channel mask.","int getEncoding() Return the encoding.","int getSampleRate() Return the sample rate.","String toString() Returns a string containing a concise, human-readable description of this object.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.media","constants":["int CHANNEL_CONFIGURATION_DEFAULT This constant was deprecated in API level 5. use CHANNEL_OUT_DEFAULT or CHANNEL_IN_DEFAULT instead","int CHANNEL_CONFIGURATION_INVALID This constant was deprecated in API level 5. use CHANNEL_INVALID instead","int CHANNEL_CONFIGURATION_MONO This constant was deprecated in API level 5. use CHANNEL_OUT_MONO or CHANNEL_IN_MONO instead","int CHANNEL_CONFIGURATION_STEREO This constant was deprecated in API level 5. use CHANNEL_OUT_STEREO or CHANNEL_IN_STEREO instead","int CHANNEL_INVALID Invalid audio channel mask","int CHANNEL_IN_BACK","int CHANNEL_IN_BACK_PROCESSED","int CHANNEL_IN_DEFAULT","int CHANNEL_IN_FRONT","int CHANNEL_IN_FRONT_PROCESSED","int CHANNEL_IN_LEFT","int CHANNEL_IN_LEFT_PROCESSED","int CHANNEL_IN_MONO","int CHANNEL_IN_PRESSURE","int CHANNEL_IN_RIGHT","int CHANNEL_IN_RIGHT_PROCESSED","int CHANNEL_IN_STEREO","int CHANNEL_IN_VOICE_DNLINK","int CHANNEL_IN_VOICE_UPLINK","int CHANNEL_IN_X_AXIS","int CHANNEL_IN_Y_AXIS","int CHANNEL_IN_Z_AXIS","int CHANNEL_OUT_5POINT1","int CHANNEL_OUT_7POINT1","int CHANNEL_OUT_BACK_CENTER","int CHANNEL_OUT_BACK_LEFT","int CHANNEL_OUT_BACK_RIGHT","int CHANNEL_OUT_DEFAULT Default audio channel mask","int CHANNEL_OUT_FRONT_CENTER","int CHANNEL_OUT_FRONT_LEFT","int CHANNEL_OUT_FRONT_LEFT_OF_CENTER","int CHANNEL_OUT_FRONT_RIGHT","int CHANNEL_OUT_FRONT_RIGHT_OF_CENTER","int CHANNEL_OUT_LOW_FREQUENCY","int CHANNEL_OUT_MONO","int CHANNEL_OUT_QUAD","int CHANNEL_OUT_SIDE_LEFT","int CHANNEL_OUT_SIDE_RIGHT","int CHANNEL_OUT_STEREO","int CHANNEL_OUT_SURROUND","int ENCODING_AC3 Audio data format: AC-3 compressed","int ENCODING_DEFAULT Default audio data format","int ENCODING_E_AC3 Audio data format: E-AC-3 compressed","int ENCODING_INVALID Invalid audio data format","int ENCODING_PCM_16BIT Audio data format: PCM 16 bit per sample.","int ENCODING_PCM_8BIT Audio data format: PCM 8 bit per sample.","int ENCODING_PCM_FLOAT Audio data format: single-precision floating-point per sample"],"class":"AudioFormat","constructors":[],"fields":[]}