{"methods":["boolean isProxy() Returns true if authenticating against a proxy, false otherwise.","void processChallenge(Header header) Processes the given challenge token.","abstract void parseChallenge(CharArrayBuffer buffer, int pos, int len)","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.auth.AuthScheme abstract Header authenticate(Credentials credentials, HttpRequest request) Produces an authorization string for the given set of Credentials. abstract String getParameter(String name) Returns authentication parameter with the given name, if available. abstract String getRealm() Returns authentication realm. abstract String getSchemeName() Returns textual designation of the given authentication scheme. abstract boolean isComplete() Authentication process may involve a series of challenge-response exchanges. abstract boolean isConnectionBased() Tests if the authentication scheme is provides authorization on a per connection basis instead of usual per request basis abstract void processChallenge(Header header) Processes the given challenge token.","abstract Header authenticate(Credentials credentials, HttpRequest request) Produces an authorization string for the given set of Credentials.","abstract String getParameter(String name) Returns authentication parameter with the given name, if available.","abstract String getRealm() Returns authentication realm.","abstract String getSchemeName() Returns textual designation of the given authentication scheme.","abstract boolean isComplete() Authentication process may involve a series of challenge-response exchanges.","abstract boolean isConnectionBased() Tests if the authentication scheme is provides authorization on a per connection basis instead of usual per request basis","abstract void processChallenge(Header header) Processes the given challenge token."],"package":"org.apache.http.impl.auth","constants":[],"class":"AuthSchemeBase","constructors":[],"fields":[]}