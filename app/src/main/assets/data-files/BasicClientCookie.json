{"methods":["Object clone() Creates and returns a copy of this Object.","boolean containsAttribute(String name)","String getAttribute(String name)","String getComment() Returns the comment describing the purpose of this cookie, or null if no such comment has been defined.","String getCommentURL() Returns null.","String getDomain() Returns domain attribute of the cookie.","Date getExpiryDate() Returns the expiration Date of the cookie, or null if none exists.","String getName() Returns the name.","String getPath() Returns the path attribute of the cookie","int[] getPorts() Returns null.","String getValue() Returns the value.","int getVersion() Returns the version of the cookie specification to which this cookie conforms.","boolean isExpired(Date date) Returns true if this cookie has expired.","boolean isPersistent() Returns false if the cookie should be discarded at the end of the \"session\"; true otherwise.","boolean isSecure() Indicates whether this cookie requires a secure connection.","void setAttribute(String name, String value)","void setComment(String comment) If a user agent (web browser) presents this cookie to a user, the cookie's purpose will be described using this comment.","void setDomain(String domain) Sets the domain attribute.","void setExpiryDate(Date expiryDate) Sets expiration date.","void setPath(String path) Sets the path attribute.","void setSecure(boolean secure) Sets the secure attribute of the cookie.","void setValue(String value) Sets the value","void setVersion(int version) Sets the version of the cookie specification to which this cookie conforms.","String toString() Returns a string containing a concise, human-readable description of this object.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.cookie.ClientCookie abstract boolean containsAttribute(String name) abstract String getAttribute(String name)","abstract boolean containsAttribute(String name)","abstract String getAttribute(String name)","From interface org.apache.http.cookie.Cookie abstract String getComment() Returns the comment describing the purpose of this cookie, or null if no such comment has been defined. abstract String getCommentURL() If a user agent (web browser) presents this cookie to a user, the cookie's purpose will be described by the information at this URL. abstract String getDomain() Returns domain attribute of the cookie. abstract Date getExpiryDate() Returns the expiration Date of the cookie, or null if none exists. abstract String getName() Returns the name. abstract String getPath() Returns the path attribute of the cookie abstract int[] getPorts() Get the Port attribute. abstract String getValue() Returns the value. abstract int getVersion() Returns the version of the cookie specification to which this cookie conforms. abstract boolean isExpired(Date date) Returns true if this cookie has expired. abstract boolean isPersistent() Returns false if the cookie should be discarded at the end of the \"session\"; true otherwise. abstract boolean isSecure() Indicates whether this cookie requires a secure connection.","abstract String getComment() Returns the comment describing the purpose of this cookie, or null if no such comment has been defined.","abstract String getCommentURL() If a user agent (web browser) presents this cookie to a user, the cookie's purpose will be described by the information at this URL.","abstract String getDomain() Returns domain attribute of the cookie.","abstract Date getExpiryDate() Returns the expiration Date of the cookie, or null if none exists.","abstract String getName() Returns the name.","abstract String getPath() Returns the path attribute of the cookie","abstract int[] getPorts() Get the Port attribute.","abstract String getValue() Returns the value.","abstract int getVersion() Returns the version of the cookie specification to which this cookie conforms.","abstract boolean isExpired(Date date) Returns true if this cookie has expired.","abstract boolean isPersistent() Returns false if the cookie should be discarded at the end of the \"session\"; true otherwise.","abstract boolean isSecure() Indicates whether this cookie requires a secure connection.","From interface org.apache.http.cookie.SetCookie abstract void setComment(String comment) If a user agent (web browser) presents this cookie to a user, the cookie's purpose will be described using this comment. abstract void setDomain(String domain) Sets the domain attribute. abstract void setExpiryDate(Date expiryDate) Sets expiration date. abstract void setPath(String path) Sets the path attribute. abstract void setSecure(boolean secure) Sets the secure attribute of the cookie. abstract void setValue(String value) abstract void setVersion(int version) Sets the version of the cookie specification to which this cookie conforms.","abstract void setComment(String comment) If a user agent (web browser) presents this cookie to a user, the cookie's purpose will be described using this comment.","abstract void setDomain(String domain) Sets the domain attribute.","abstract void setExpiryDate(Date expiryDate) Sets expiration date.","abstract void setPath(String path) Sets the path attribute.","abstract void setSecure(boolean secure) Sets the secure attribute of the cookie.","abstract void setValue(String value)","abstract void setVersion(int version) Sets the version of the cookie specification to which this cookie conforms."],"package":"org.apache.http.impl.cookie","constants":["[Expand] Inherited Constants","From interface org.apache.http.cookie.ClientCookie String COMMENTURL_ATTR String COMMENT_ATTR String DISCARD_ATTR String DOMAIN_ATTR String EXPIRES_ATTR String MAX_AGE_ATTR String PATH_ATTR String PORT_ATTR String SECURE_ATTR String VERSION_ATTR","String COMMENTURL_ATTR","String COMMENT_ATTR","String DISCARD_ATTR","String DOMAIN_ATTR","String EXPIRES_ATTR","String MAX_AGE_ATTR","String PATH_ATTR","String PORT_ATTR","String SECURE_ATTR","String VERSION_ATTR"],"class":"BasicClientCookie","constructors":[],"fields":[]}