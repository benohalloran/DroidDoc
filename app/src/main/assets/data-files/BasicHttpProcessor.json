{"methods":["final void addInterceptor(HttpRequestInterceptor interceptor, int index)","final void addInterceptor(HttpResponseInterceptor interceptor, int index)","final void addInterceptor(HttpRequestInterceptor interceptor) Same as addRequestInterceptor.","final void addInterceptor(HttpResponseInterceptor interceptor) Same as addResponseInterceptor.","void addRequestInterceptor(HttpRequestInterceptor itcp, int index) Inserts a request interceptor at the specified index.","void addRequestInterceptor(HttpRequestInterceptor itcp) Appends a request interceptor to this list.","void addResponseInterceptor(HttpResponseInterceptor itcp, int index) Inserts a response interceptor at the specified index.","void addResponseInterceptor(HttpResponseInterceptor itcp) Appends a response interceptor to this list.","void clearInterceptors() Clears both interceptor lists maintained by this processor.","void clearRequestInterceptors() Removes all request interceptors from this list.","void clearResponseInterceptors() Removes all response interceptors from this list.","Object clone() Creates and returns a copy of this Object.","BasicHttpProcessor copy() Creates a copy of this instance","HttpRequestInterceptor getRequestInterceptor(int index) Obtains a request interceptor from this list.","int getRequestInterceptorCount() Obtains the current size of this list.","HttpResponseInterceptor getResponseInterceptor(int index) Obtains a response interceptor from this list.","int getResponseInterceptorCount() Obtains the current size of this list.","void process(HttpResponse response, HttpContext context) Processes a response.","void process(HttpRequest request, HttpContext context) Processes a request.","void removeRequestInterceptorByClass(Class clazz) Removes all request interceptor of the specified class","void removeResponseInterceptorByClass(Class clazz) Removes all response interceptor of the specified class","void setInterceptors(List list) Sets the interceptor lists.","void copyInterceptors(BasicHttpProcessor target)","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.HttpRequestInterceptor abstract void process(HttpRequest request, HttpContext context) Processes a request.","abstract void process(HttpRequest request, HttpContext context) Processes a request.","From interface org.apache.http.HttpResponseInterceptor abstract void process(HttpResponse response, HttpContext context) Processes a response.","abstract void process(HttpResponse response, HttpContext context) Processes a response.","From interface org.apache.http.protocol.HttpRequestInterceptorList abstract void addRequestInterceptor(HttpRequestInterceptor itcp, int index) Inserts a request interceptor at the specified index. abstract void addRequestInterceptor(HttpRequestInterceptor itcp) Appends a request interceptor to this list. abstract void clearRequestInterceptors() Removes all request interceptors from this list. abstract HttpRequestInterceptor getRequestInterceptor(int index) Obtains a request interceptor from this list. abstract int getRequestInterceptorCount() Obtains the current size of this list. abstract void removeRequestInterceptorByClass(Class clazz) Removes all request interceptor of the specified class abstract void setInterceptors(List itcps) Sets the request interceptors in this list.","abstract void addRequestInterceptor(HttpRequestInterceptor itcp, int index) Inserts a request interceptor at the specified index.","abstract void addRequestInterceptor(HttpRequestInterceptor itcp) Appends a request interceptor to this list.","abstract void clearRequestInterceptors() Removes all request interceptors from this list.","abstract HttpRequestInterceptor getRequestInterceptor(int index) Obtains a request interceptor from this list.","abstract int getRequestInterceptorCount() Obtains the current size of this list.","abstract void removeRequestInterceptorByClass(Class clazz) Removes all request interceptor of the specified class","abstract void setInterceptors(List itcps) Sets the request interceptors in this list.","From interface org.apache.http.protocol.HttpResponseInterceptorList abstract void addResponseInterceptor(HttpResponseInterceptor itcp, int index) Inserts a response interceptor at the specified index. abstract void addResponseInterceptor(HttpResponseInterceptor itcp) Appends a response interceptor to this list. abstract void clearResponseInterceptors() Removes all response interceptors from this list. abstract HttpResponseInterceptor getResponseInterceptor(int index) Obtains a response interceptor from this list. abstract int getResponseInterceptorCount() Obtains the current size of this list. abstract void removeResponseInterceptorByClass(Class clazz) Removes all response interceptor of the specified class abstract void setInterceptors(List itcps) Sets the response interceptors in this list.","abstract void addResponseInterceptor(HttpResponseInterceptor itcp, int index) Inserts a response interceptor at the specified index.","abstract void addResponseInterceptor(HttpResponseInterceptor itcp) Appends a response interceptor to this list.","abstract void clearResponseInterceptors() Removes all response interceptors from this list.","abstract HttpResponseInterceptor getResponseInterceptor(int index) Obtains a response interceptor from this list.","abstract int getResponseInterceptorCount() Obtains the current size of this list.","abstract void removeResponseInterceptorByClass(Class clazz) Removes all response interceptor of the specified class","abstract void setInterceptors(List itcps) Sets the response interceptors in this list."],"package":"org.apache.http.protocol","constants":[],"class":"BasicHttpProcessor","constructors":[],"fields":["protected List requestInterceptors","protected List responseInterceptors"]}