{"methods":["ProtocolVersion getProtocolVersion() Returns the protocol version this message is compatible with.","RequestLine getRequestLine() Returns the request line of this request.","[Expand] Inherited Methods","From class org.apache.http.message.AbstractHttpMessage void addHeader(Header header) Adds a header to this message. void addHeader(String name, String value) Adds a header to this message. boolean containsHeader(String name) Checks if a certain header is present in this message. Header[] getAllHeaders() Returns all the headers of this message. Header getFirstHeader(String name) Returns the first header with a specified name of this message. Header[] getHeaders(String name) Returns all the headers with a specified name of this message. Header getLastHeader(String name) Returns the last header with a specified name of this message. HttpParams getParams() Returns the parameters effective for this message as set by setParams(HttpParams). HeaderIterator headerIterator(String name) Returns an iterator of the headers with a given name. HeaderIterator headerIterator() Returns an iterator of all the headers. void removeHeader(Header header) Removes a header from this message. void removeHeaders(String name) Removes all headers with a certain name from this message. void setHeader(Header header) Overwrites the first header with the same name. void setHeader(String name, String value) Overwrites the first header with the same name. void setHeaders(Header[] headers) Overwrites all the headers in the message. void setParams(HttpParams params) Provides parameters to be used for the processing of this message.","void addHeader(Header header) Adds a header to this message.","void addHeader(String name, String value) Adds a header to this message.","boolean containsHeader(String name) Checks if a certain header is present in this message.","Header[] getAllHeaders() Returns all the headers of this message.","Header getFirstHeader(String name) Returns the first header with a specified name of this message.","Header[] getHeaders(String name) Returns all the headers with a specified name of this message.","Header getLastHeader(String name) Returns the last header with a specified name of this message.","HttpParams getParams() Returns the parameters effective for this message as set by setParams(HttpParams).","HeaderIterator headerIterator(String name) Returns an iterator of the headers with a given name.","HeaderIterator headerIterator() Returns an iterator of all the headers.","void removeHeader(Header header) Removes a header from this message.","void removeHeaders(String name) Removes all headers with a certain name from this message.","void setHeader(Header header) Overwrites the first header with the same name.","void setHeader(String name, String value) Overwrites the first header with the same name.","void setHeaders(Header[] headers) Overwrites all the headers in the message.","void setParams(HttpParams params) Provides parameters to be used for the processing of this message.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.HttpMessage abstract void addHeader(Header header) Adds a header to this message. abstract void addHeader(String name, String value) Adds a header to this message. abstract boolean containsHeader(String name) Checks if a certain header is present in this message. abstract Header[] getAllHeaders() Returns all the headers of this message. abstract Header getFirstHeader(String name) Returns the first header with a specified name of this message. abstract Header[] getHeaders(String name) Returns all the headers with a specified name of this message. abstract Header getLastHeader(String name) Returns the last header with a specified name of this message. abstract HttpParams getParams() Returns the parameters effective for this message as set by setParams(HttpParams). abstract ProtocolVersion getProtocolVersion() Returns the protocol version this message is compatible with. abstract HeaderIterator headerIterator(String name) Returns an iterator of the headers with a given name. abstract HeaderIterator headerIterator() Returns an iterator of all the headers. abstract void removeHeader(Header header) Removes a header from this message. abstract void removeHeaders(String name) Removes all headers with a certain name from this message. abstract void setHeader(Header header) Overwrites the first header with the same name. abstract void setHeader(String name, String value) Overwrites the first header with the same name. abstract void setHeaders(Header[] headers) Overwrites all the headers in the message. abstract void setParams(HttpParams params) Provides parameters to be used for the processing of this message.","abstract void addHeader(Header header) Adds a header to this message.","abstract void addHeader(String name, String value) Adds a header to this message.","abstract boolean containsHeader(String name) Checks if a certain header is present in this message.","abstract Header[] getAllHeaders() Returns all the headers of this message.","abstract Header getFirstHeader(String name) Returns the first header with a specified name of this message.","abstract Header[] getHeaders(String name) Returns all the headers with a specified name of this message.","abstract Header getLastHeader(String name) Returns the last header with a specified name of this message.","abstract HttpParams getParams() Returns the parameters effective for this message as set by setParams(HttpParams).","abstract ProtocolVersion getProtocolVersion() Returns the protocol version this message is compatible with.","abstract HeaderIterator headerIterator(String name) Returns an iterator of the headers with a given name.","abstract HeaderIterator headerIterator() Returns an iterator of all the headers.","abstract void removeHeader(Header header) Removes a header from this message.","abstract void removeHeaders(String name) Removes all headers with a certain name from this message.","abstract void setHeader(Header header) Overwrites the first header with the same name.","abstract void setHeader(String name, String value) Overwrites the first header with the same name.","abstract void setHeaders(Header[] headers) Overwrites all the headers in the message.","abstract void setParams(HttpParams params) Provides parameters to be used for the processing of this message.","From interface org.apache.http.HttpRequest abstract RequestLine getRequestLine() Returns the request line of this request.","abstract RequestLine getRequestLine() Returns the request line of this request."],"package":"org.apache.http.message","constants":[],"class":"BasicHttpRequest","constructors":[],"fields":[]}