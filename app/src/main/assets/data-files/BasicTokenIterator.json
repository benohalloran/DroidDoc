{"methods":["boolean hasNext() Indicates whether there is another token in this iteration.","final Object next() Returns the next token.","String nextToken() Obtains the next token from this iteration.","final void remove() Removing tokens is not supported.","String createToken(String value, int start, int end) Creates a new token to be returned.","int findNext(int from) Determines the next token.","int findTokenEnd(int from) Determines the ending position of the current token.","int findTokenSeparator(int from) Determines the position of the next token separator.","int findTokenStart(int from) Determines the starting position of the next token.","boolean isHttpSeparator(char ch) Checks whether a character is an HTTP separator.","boolean isTokenChar(char ch) Checks whether a character is a valid token character.","boolean isTokenSeparator(char ch) Checks whether a character is a token separator.","boolean isWhitespace(char ch) Checks whether a character is a whitespace character.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.util.Iterator abstract boolean hasNext() Returns true if there is at least one more element, false otherwise. abstract E next() Returns the next object and advances the iterator. abstract void remove() Removes the last object returned by next from the collection.","abstract boolean hasNext() Returns true if there is at least one more element, false otherwise.","abstract E next() Returns the next object and advances the iterator.","abstract void remove() Removes the last object returned by next from the collection.","From interface org.apache.http.TokenIterator abstract boolean hasNext() Indicates whether there is another token in this iteration. abstract String nextToken() Obtains the next token from this iteration.","abstract boolean hasNext() Indicates whether there is another token in this iteration.","abstract String nextToken() Obtains the next token from this iteration."],"package":"org.apache.http.message","constants":["String HTTP_SEPARATORS The HTTP separator characters."],"class":"BasicTokenIterator","constructors":[],"fields":["protected String currentHeader The value of the current header.","protected String currentToken The token to be returned by the next call to currentToken.","protected final HeaderIterator headerIt The iterator from which to obtain the next header.","protected int searchPos The position after currentToken in currentHeader."]}