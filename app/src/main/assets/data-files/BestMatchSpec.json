{"methods":["List<Header> formatCookies(List<Cookie> cookies) Create \"Cookie\" headers for an array of Cookies.","int getVersion() Returns version of the state management this cookie specification conforms to.","Header getVersionHeader() Returns a request header identifying what version of the state management specification is understood.","boolean match(Cookie cookie, CookieOrigin origin) Determines if a Cookie matches the target location.","List<Cookie> parse(Header header, CookieOrigin origin) Parse the \"Set-Cookie\" Header into an array of Cookies.","void validate(Cookie cookie, CookieOrigin origin) Validate the cookie according to validation rules defined by the cookie specification.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.cookie.CookieSpec abstract List<Header> formatCookies(List<Cookie> cookies) Create \"Cookie\" headers for an array of Cookies. abstract int getVersion() Returns version of the state management this cookie specification conforms to. abstract Header getVersionHeader() Returns a request header identifying what version of the state management specification is understood. abstract boolean match(Cookie cookie, CookieOrigin origin) Determines if a Cookie matches the target location. abstract List<Cookie> parse(Header header, CookieOrigin origin) Parse the \"Set-Cookie\" Header into an array of Cookies. abstract void validate(Cookie cookie, CookieOrigin origin) Validate the cookie according to validation rules defined by the cookie specification.","abstract List<Header> formatCookies(List<Cookie> cookies) Create \"Cookie\" headers for an array of Cookies.","abstract int getVersion() Returns version of the state management this cookie specification conforms to.","abstract Header getVersionHeader() Returns a request header identifying what version of the state management specification is understood.","abstract boolean match(Cookie cookie, CookieOrigin origin) Determines if a Cookie matches the target location.","abstract List<Cookie> parse(Header header, CookieOrigin origin) Parse the \"Set-Cookie\" Header into an array of Cookies.","abstract void validate(Cookie cookie, CookieOrigin origin) Validate the cookie according to validation rules defined by the cookie specification."],"package":"org.apache.http.impl.cookie","constants":[],"class":"BestMatchSpec","constructors":[],"fields":[]}