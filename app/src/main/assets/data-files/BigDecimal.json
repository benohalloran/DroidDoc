{"methods":["BigDecimal abs(MathContext mc) Returns a BigDecimal whose value is the absolute value of this.","BigDecimal abs() Returns a BigDecimal whose value is the absolute value of this.","BigDecimal add(BigDecimal augend) Returns a new BigDecimal whose value is this + augend.","BigDecimal add(BigDecimal augend, MathContext mc) Returns a new BigDecimal whose value is this + augend.","byte byteValueExact() Returns this BigDecimal as a byte value if it has no fractional part and if its value fits to the byte range ([-128..127]).","int compareTo(BigDecimal val) Compares this BigDecimal with val.","BigDecimal divide(BigDecimal divisor) Returns a new BigDecimal whose value is this / divisor.","BigDecimal divide(BigDecimal divisor, MathContext mc) Returns a new BigDecimal whose value is this / divisor.","BigDecimal divide(BigDecimal divisor, int scale, RoundingMode roundingMode) Returns a new BigDecimal whose value is this / divisor.","BigDecimal divide(BigDecimal divisor, int scale, int roundingMode) Returns a new BigDecimal whose value is this / divisor.","BigDecimal divide(BigDecimal divisor, RoundingMode roundingMode) Returns a new BigDecimal whose value is this / divisor.","BigDecimal divide(BigDecimal divisor, int roundingMode) Returns a new BigDecimal whose value is this / divisor.","BigDecimal[] divideAndRemainder(BigDecimal divisor, MathContext mc) Returns a BigDecimal array which contains the integral part of this / divisor at index 0 and the remainder this % divisor at index 1.","BigDecimal[] divideAndRemainder(BigDecimal divisor) Returns a BigDecimal array which contains the integral part of this / divisor at index 0 and the remainder this % divisor at index 1.","BigDecimal divideToIntegralValue(BigDecimal divisor, MathContext mc) Returns a new BigDecimal whose value is the integral part of this / divisor.","BigDecimal divideToIntegralValue(BigDecimal divisor) Returns a new BigDecimal whose value is the integral part of this / divisor.","double doubleValue() Returns this BigDecimal as a double value.","boolean equals(Object x) Returns true if x is a BigDecimal instance and if this instance is equal to this big decimal.","float floatValue() Returns this BigDecimal as a float value.","int hashCode() Returns a hash code for this BigDecimal.","int intValue() Returns this BigDecimal as an int value.","int intValueExact() Returns this BigDecimal as a int value if it has no fractional part and if its value fits to the int range ([-231..231-1]).","long longValue() Returns this BigDecimal as an long value.","long longValueExact() Returns this BigDecimal as a long value if it has no fractional part and if its value fits to the int range ([-263..263-1]).","BigDecimal max(BigDecimal val) Returns the maximum of this BigDecimal and val.","BigDecimal min(BigDecimal val) Returns the minimum of this BigDecimal and val.","BigDecimal movePointLeft(int n) Returns a new BigDecimal instance where the decimal point has been moved n places to the left.","BigDecimal movePointRight(int n) Returns a new BigDecimal instance where the decimal point has been moved n places to the right.","BigDecimal multiply(BigDecimal multiplicand) Returns a new BigDecimal whose value is this * multiplicand.","BigDecimal multiply(BigDecimal multiplicand, MathContext mc) Returns a new BigDecimal whose value is this * multiplicand.","BigDecimal negate(MathContext mc) Returns a new BigDecimal whose value is the -this.","BigDecimal negate() Returns a new BigDecimal whose value is the -this.","BigDecimal plus(MathContext mc) Returns a new BigDecimal whose value is +this.","BigDecimal plus() Returns a new BigDecimal whose value is +this.","BigDecimal pow(int n, MathContext mc) Returns a new BigDecimal whose value is thisn.","BigDecimal pow(int n) Returns a new BigDecimal whose value is thisn.","int precision() Returns the precision of this BigDecimal.","BigDecimal remainder(BigDecimal divisor) Returns a new BigDecimal whose value is this % divisor.","BigDecimal remainder(BigDecimal divisor, MathContext mc) Returns a new BigDecimal whose value is this % divisor.","BigDecimal round(MathContext mc) Returns a new BigDecimal whose value is this, rounded according to the passed context mc.","int scale() Returns the scale of this BigDecimal.","BigDecimal scaleByPowerOfTen(int n) Returns a new BigDecimal whose value is this * 10n.","BigDecimal setScale(int newScale) Returns a new BigDecimal instance with the specified scale.","BigDecimal setScale(int newScale, int roundingMode) Returns a new BigDecimal instance with the specified scale.","BigDecimal setScale(int newScale, RoundingMode roundingMode) Returns a new BigDecimal instance with the specified scale.","short shortValueExact() Returns this BigDecimal as a short value if it has no fractional part and if its value fits to the short range ([-215..215-1]).","int signum() Returns the sign of this BigDecimal.","BigDecimal stripTrailingZeros() Returns a new BigDecimal instance with the same value as this but with a unscaled value where the trailing zeros have been removed.","BigDecimal subtract(BigDecimal subtrahend, MathContext mc) Returns a new BigDecimal whose value is this - subtrahend.","BigDecimal subtract(BigDecimal subtrahend) Returns a new BigDecimal whose value is this - subtrahend.","BigInteger toBigInteger() Returns this BigDecimal as a big integer instance.","BigInteger toBigIntegerExact() Returns this BigDecimal as a big integer instance if it has no fractional part.","String toEngineeringString() Returns a string representation of this BigDecimal.","String toPlainString() Returns a string representation of this BigDecimal.","String toString() Returns a canonical string representation of this BigDecimal.","BigDecimal ulp() Returns the unit in the last place (ULP) of this BigDecimal instance.","BigInteger unscaledValue() Returns the unscaled value (mantissa) of this BigDecimal instance as a BigInteger.","static BigDecimal valueOf(long unscaledVal) Returns a new BigDecimal instance whose value is equal to unscaledVal.","static BigDecimal valueOf(long unscaledVal, int scale) Returns a new BigDecimal instance whose value is equal to unscaledVal * 10-scale).","static BigDecimal valueOf(double val) Returns a new BigDecimal instance whose value is equal to val.","[Expand] Inherited Methods","From class java.lang.Number byte byteValue() Returns this object's value as a byte. abstract double doubleValue() Returns this object's value as a double. abstract float floatValue() Returns this object's value as a float. abstract int intValue() Returns this object's value as an int. abstract long longValue() Returns this object's value as a long. short shortValue() Returns this object's value as a short.","byte byteValue() Returns this object's value as a byte.","abstract double doubleValue() Returns this object's value as a double.","abstract float floatValue() Returns this object's value as a float.","abstract int intValue() Returns this object's value as an int.","abstract long longValue() Returns this object's value as a long.","short shortValue() Returns this object's value as a short.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order."],"package":"java.math","constants":["int ROUND_CEILING Rounding mode to round towards positive infinity.","int ROUND_DOWN Rounding mode where the values are rounded towards zero.","int ROUND_FLOOR Rounding mode to round towards negative infinity.","int ROUND_HALF_DOWN Rounding mode where values are rounded towards the nearest neighbor.","int ROUND_HALF_EVEN Rounding mode where values are rounded towards the nearest neighbor.","int ROUND_HALF_UP Rounding mode where values are rounded towards the nearest neighbor.","int ROUND_UNNECESSARY Rounding mode where the rounding operations throws an ArithmeticException for the case that rounding is necessary, i.e.","int ROUND_UP Rounding mode where positive values are rounded towards positive infinity and negative values towards negative infinity."],"class":"BigDecimal","constructors":[],"fields":["public static final BigDecimal ONE The constant one as a BigDecimal.","public static final BigDecimal TEN The constant ten as a BigDecimal.","public static final BigDecimal ZERO The constant zero as a BigDecimal."]}