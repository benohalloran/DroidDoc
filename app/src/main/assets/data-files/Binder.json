{"methods":["void attachInterface(IInterface owner, String descriptor) Convenience method for associating a specific interface with the Binder.","final static long clearCallingIdentity() Reset the identity of the incoming IPC on the current thread.","void dump(FileDescriptor fd, String[] args) Implemented to call the more convenient version dump(FileDescriptor, PrintWriter, String[]).","void dumpAsync(FileDescriptor fd, String[] args) Like dump(FileDescriptor, String[]), but ensures the target executes asynchronously.","final static void flushPendingCommands() Flush any Binder commands pending in the current thread to the kernel driver.","final static int getCallingPid() Return the ID of the process that sent you the current transaction that is being processed.","final static int getCallingUid() Return the Linux uid assigned to the process that sent you the current transaction that is being processed.","final static UserHandle getCallingUserHandle() Return the UserHandle assigned to the process that sent you the current transaction that is being processed.","String getInterfaceDescriptor() Default implementation returns an empty interface name.","boolean isBinderAlive() Check to see if the process that the binder is in is still alive. Note that if you're calling on a local binder, this always returns true because your process is alive if you're calling it.","final static void joinThreadPool() Add the calling thread to the IPC thread pool.","void linkToDeath(IBinder.DeathRecipient recipient, int flags) Local implementation is a no-op.","boolean pingBinder() Default implementation always returns true -- if you got here, the object is alive.","IInterface queryLocalInterface(String descriptor) Use information supplied to attachInterface() to return the associated IInterface if it matches the requested descriptor.","final static void restoreCallingIdentity(long token) Restore the identity of the incoming IPC on the current thread back to a previously identity that was returned by clearCallingIdentity().","final boolean transact(int code, Parcel data, Parcel reply, int flags) Default implementation rewinds the parcels and calls onTransact.","boolean unlinkToDeath(IBinder.DeathRecipient recipient, int flags) Local implementation is a no-op.","void dump(FileDescriptor fd, PrintWriter fout, String[] args) Print the object's state into the given stream.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","boolean onTransact(int code, Parcel data, Parcel reply, int flags) Default implementation is a stub that returns false.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.IBinder abstract void dump(FileDescriptor fd, String[] args) Print the object's state into the given stream. abstract void dumpAsync(FileDescriptor fd, String[] args) Like dump(FileDescriptor, String[]) but always executes asynchronously. abstract String getInterfaceDescriptor() Get the canonical name of the interface supported by this binder. abstract boolean isBinderAlive() Check to see if the process that the binder is in is still alive. abstract void linkToDeath(IBinder.DeathRecipient recipient, int flags) Register the recipient for a notification if this binder goes away. abstract boolean pingBinder() Check to see if the object still exists. abstract IInterface queryLocalInterface(String descriptor) Attempt to retrieve a local implementation of an interface for this Binder object. abstract boolean transact(int code, Parcel data, Parcel reply, int flags) Perform a generic operation with the object. abstract boolean unlinkToDeath(IBinder.DeathRecipient recipient, int flags) Remove a previously registered death notification.","abstract void dump(FileDescriptor fd, String[] args) Print the object's state into the given stream.","abstract void dumpAsync(FileDescriptor fd, String[] args) Like dump(FileDescriptor, String[]) but always executes asynchronously.","abstract String getInterfaceDescriptor() Get the canonical name of the interface supported by this binder.","abstract boolean isBinderAlive() Check to see if the process that the binder is in is still alive.","abstract void linkToDeath(IBinder.DeathRecipient recipient, int flags) Register the recipient for a notification if this binder goes away.","abstract boolean pingBinder() Check to see if the object still exists.","abstract IInterface queryLocalInterface(String descriptor) Attempt to retrieve a local implementation of an interface for this Binder object.","abstract boolean transact(int code, Parcel data, Parcel reply, int flags) Perform a generic operation with the object.","abstract boolean unlinkToDeath(IBinder.DeathRecipient recipient, int flags) Remove a previously registered death notification."],"package":"android.os","constants":["[Expand] Inherited Constants","From interface android.os.IBinder int DUMP_TRANSACTION IBinder protocol transaction code: dump internal state. int FIRST_CALL_TRANSACTION The first transaction code available for user commands. int FLAG_ONEWAY Flag to transact(int, Parcel, Parcel, int): this is a one-way call, meaning that the caller returns immediately, without waiting for a result from the callee. int INTERFACE_TRANSACTION IBinder protocol transaction code: interrogate the recipient side of the transaction for its canonical interface descriptor. int LAST_CALL_TRANSACTION The last transaction code available for user commands. int LIKE_TRANSACTION IBinder protocol transaction code: tell an app asynchronously that the caller likes it. int PING_TRANSACTION IBinder protocol transaction code: pingBinder(). int TWEET_TRANSACTION IBinder protocol transaction code: send a tweet to the target object.","int DUMP_TRANSACTION IBinder protocol transaction code: dump internal state.","int FIRST_CALL_TRANSACTION The first transaction code available for user commands.","int FLAG_ONEWAY Flag to transact(int, Parcel, Parcel, int): this is a one-way call, meaning that the caller returns immediately, without waiting for a result from the callee.","int INTERFACE_TRANSACTION IBinder protocol transaction code: interrogate the recipient side of the transaction for its canonical interface descriptor.","int LAST_CALL_TRANSACTION The last transaction code available for user commands.","int LIKE_TRANSACTION IBinder protocol transaction code: tell an app asynchronously that the caller likes it.","int PING_TRANSACTION IBinder protocol transaction code: pingBinder().","int TWEET_TRANSACTION IBinder protocol transaction code: send a tweet to the target object."],"class":"Binder","constructors":[],"fields":[]}