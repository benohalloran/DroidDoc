{"methods":["BluetoothGatt connectGatt(Context context, boolean autoConnect, BluetoothGattCallback callback) Connect to GATT Server hosted by this device.","boolean createBond() Start the bonding (pairing) process with the remote device.","BluetoothSocket createInsecureRfcommSocketToServiceRecord(UUID uuid) Create an RFCOMM BluetoothSocket socket ready to start an insecure outgoing connection to this remote device using SDP lookup of uuid.","BluetoothSocket createRfcommSocketToServiceRecord(UUID uuid) Create an RFCOMM BluetoothSocket ready to start a secure outgoing connection to this remote device using SDP lookup of uuid.","int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","boolean fetchUuidsWithSdp() Perform a service discovery on the remote device to get the UUIDs supported.","String getAddress() Returns the hardware address of this BluetoothDevice.","BluetoothClass getBluetoothClass() Get the Bluetooth class of the remote device.","int getBondState() Get the bond state of the remote device.","String getName() Get the friendly Bluetooth name of the remote device.","int getType() Get the Bluetooth device type of the remote device.","ParcelUuid[] getUuids() Returns the supported features (UUIDs) of the remote device.","int hashCode() Returns an integer hash code for this object.","boolean setPairingConfirmation(boolean confirm) Confirm passkey for PAIRING_VARIANT_PASSKEY_CONFIRMATION pairing.","boolean setPin(byte[] pin) Set the pin during pairing when the pairing method is PAIRING_VARIANT_PIN Requires BLUETOOTH_ADMIN.","String toString() Returns a string representation of this BluetoothDevice.","void writeToParcel(Parcel out, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.bluetooth","constants":["String ACTION_ACL_CONNECTED Broadcast Action: Indicates a low level (ACL) connection has been established with a remote device.","String ACTION_ACL_DISCONNECTED Broadcast Action: Indicates a low level (ACL) disconnection from a remote device.","String ACTION_ACL_DISCONNECT_REQUESTED Broadcast Action: Indicates that a low level (ACL) disconnection has been requested for a remote device, and it will soon be disconnected.","String ACTION_BOND_STATE_CHANGED Broadcast Action: Indicates a change in the bond state of a remote device.","String ACTION_CLASS_CHANGED Broadcast Action: Bluetooth class of a remote device has changed.","String ACTION_FOUND Broadcast Action: Remote device discovered.","String ACTION_NAME_CHANGED Broadcast Action: Indicates the friendly name of a remote device has been retrieved for the first time, or changed since the last retrieval.","String ACTION_PAIRING_REQUEST Broadcast Action: This intent is used to broadcast PAIRING REQUEST Requires BLUETOOTH_ADMIN to receive.","String ACTION_UUID Broadcast Action: This intent is used to broadcast the UUID wrapped as a ParcelUuid of the remote device after it has been fetched.","int BOND_BONDED Indicates the remote device is bonded (paired).","int BOND_BONDING Indicates bonding (pairing) is in progress with the remote device.","int BOND_NONE Indicates the remote device is not bonded (paired).","int DEVICE_TYPE_CLASSIC Bluetooth device type, Classic - BR/EDR devices","int DEVICE_TYPE_DUAL Bluetooth device type, Dual Mode - BR/EDR/LE","int DEVICE_TYPE_LE Bluetooth device type, Low Energy - LE-only","int DEVICE_TYPE_UNKNOWN Bluetooth device type, Unknown","int ERROR Sentinel error value for this class.","String EXTRA_BOND_STATE Used as an int extra field in ACTION_BOND_STATE_CHANGED intents.","String EXTRA_CLASS Used as a Parcelable BluetoothClass extra field in ACTION_FOUND and ACTION_CLASS_CHANGED intents.","String EXTRA_DEVICE Used as a Parcelable BluetoothDevice extra field in every intent broadcast by this class.","String EXTRA_NAME Used as a String extra field in ACTION_NAME_CHANGED and ACTION_FOUND intents.","String EXTRA_PAIRING_KEY Used as an int extra field in ACTION_PAIRING_REQUEST intents as the value of passkey.","String EXTRA_PAIRING_VARIANT Used as an int extra field in ACTION_PAIRING_REQUEST intents to indicate pairing method used.","String EXTRA_PREVIOUS_BOND_STATE Used as an int extra field in ACTION_BOND_STATE_CHANGED intents.","String EXTRA_RSSI Used as an optional short extra field in ACTION_FOUND intents.","String EXTRA_UUID Used as an extra field in ACTION_UUID intents, Contains the ParcelUuids of the remote device which is a parcelable version of UUID.","int PAIRING_VARIANT_PASSKEY_CONFIRMATION The user will be prompted to confirm the passkey displayed on the screen or an app will confirm the passkey for the user.","int PAIRING_VARIANT_PIN The user will be prompted to enter a pin or an app will enter a pin for user.","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"BluetoothDevice","constructors":[],"fields":["public static final Creator<BluetoothDevice> CREATOR"]}