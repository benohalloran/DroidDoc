{"methods":["boolean addDescriptor(BluetoothGattDescriptor descriptor) Adds a descriptor to this characteristic.","BluetoothGattDescriptor getDescriptor(UUID uuid) Returns a descriptor with a given UUID out of the list of descriptors for this characteristic.","List<BluetoothGattDescriptor> getDescriptors() Returns a list of descriptors for this characteristic.","Float getFloatValue(int formatType, int offset) Return the stored value of this characteristic.","int getInstanceId() Returns the instance ID for this characteristic.","Integer getIntValue(int formatType, int offset) Return the stored value of this characteristic.","int getPermissions() Returns the permissions for this characteristic.","int getProperties() Returns the properties of this characteristic.","BluetoothGattService getService() Returns the service this characteristic belongs to.","String getStringValue(int offset) Return the stored value of this characteristic.","UUID getUuid() Returns the UUID of this characteristic","byte[] getValue() Get the stored value for this characteristic.","int getWriteType() Gets the write type for this characteristic.","boolean setValue(int value, int formatType, int offset) Set the locally stored value of this characteristic.","boolean setValue(byte[] value) Updates the locally stored value of this characteristic.","boolean setValue(String value) Set the locally stored value of this characteristic.","boolean setValue(int mantissa, int exponent, int formatType, int offset) Set the locally stored value of this characteristic.","void setWriteType(int writeType) Set the write type for this characteristic Setting the write type of a characteristic determines how the writeCharacteristic(BluetoothGattCharacteristic) function write this characteristic.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.bluetooth","constants":["int FORMAT_FLOAT Characteristic value format type float (32-bit float)","int FORMAT_SFLOAT Characteristic value format type sfloat (16-bit float)","int FORMAT_SINT16 Characteristic value format type sint16","int FORMAT_SINT32 Characteristic value format type sint32","int FORMAT_SINT8 Characteristic value format type sint8","int FORMAT_UINT16 Characteristic value format type uint16","int FORMAT_UINT32 Characteristic value format type uint32","int FORMAT_UINT8 Characteristic value format type uint8","int PERMISSION_READ Characteristic read permission","int PERMISSION_READ_ENCRYPTED Characteristic permission: Allow encrypted read operations","int PERMISSION_READ_ENCRYPTED_MITM Characteristic permission: Allow reading with man-in-the-middle protection","int PERMISSION_WRITE Characteristic write permission","int PERMISSION_WRITE_ENCRYPTED Characteristic permission: Allow encrypted writes","int PERMISSION_WRITE_ENCRYPTED_MITM Characteristic permission: Allow encrypted writes with man-in-the-middle protection","int PERMISSION_WRITE_SIGNED Characteristic permission: Allow signed write operations","int PERMISSION_WRITE_SIGNED_MITM Characteristic permission: Allow signed write operations with man-in-the-middle protection","int PROPERTY_BROADCAST Characteristic proprty: Characteristic is broadcastable.","int PROPERTY_EXTENDED_PROPS Characteristic property: Characteristic has extended properties","int PROPERTY_INDICATE Characteristic property: Characteristic supports indication","int PROPERTY_NOTIFY Characteristic property: Characteristic supports notification","int PROPERTY_READ Characteristic property: Characteristic is readable.","int PROPERTY_SIGNED_WRITE Characteristic property: Characteristic supports write with signature","int PROPERTY_WRITE Characteristic property: Characteristic can be written.","int PROPERTY_WRITE_NO_RESPONSE Characteristic property: Characteristic can be written without response.","int WRITE_TYPE_DEFAULT Write characteristic, requesting acknoledgement by the remote device","int WRITE_TYPE_NO_RESPONSE Wrtite characteristic without requiring a response by the remote device","int WRITE_TYPE_SIGNED Write characteristic including authentication signature"],"class":"BluetoothGattCharacteristic","constructors":[],"fields":["protected List<BluetoothGattDescriptor> mDescriptors List of descriptors included in this characteristic."]}