{"methods":["boolean connectChannelToSource(BluetoothDevice device, BluetoothHealthAppConfiguration config) Connect to a health device which has the SOURCE_ROLE.","boolean disconnectChannel(BluetoothDevice device, BluetoothHealthAppConfiguration config, int channelId) Disconnect a connected health channel.","List<BluetoothDevice> getConnectedDevices() Get connected devices for the health profile.","int getConnectionState(BluetoothDevice device) Get the current connection state of the profile.","List<BluetoothDevice> getDevicesMatchingConnectionStates(int[] states) Get a list of devices that match any of the given connection states.","ParcelFileDescriptor getMainChannelFd(BluetoothDevice device, BluetoothHealthAppConfiguration config) Get the file descriptor of the main channel associated with the remote device and application configuration.","boolean registerSinkAppConfiguration(String name, int dataType, BluetoothHealthCallback callback) Register an application configuration that acts as a Health SINK.","boolean unregisterAppConfiguration(BluetoothHealthAppConfiguration config) Unregister an application configuration that has been registered using registerSinkAppConfiguration(String, int, BluetoothHealthCallback) Requires BLUETOOTH permission.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.bluetooth.BluetoothProfile abstract List<BluetoothDevice> getConnectedDevices() Get connected devices for this specific profile. abstract int getConnectionState(BluetoothDevice device) Get the current connection state of the profile Requires BLUETOOTH permission. abstract List<BluetoothDevice> getDevicesMatchingConnectionStates(int[] states) Get a list of devices that match any of the given connection states.","abstract List<BluetoothDevice> getConnectedDevices() Get connected devices for this specific profile.","abstract int getConnectionState(BluetoothDevice device) Get the current connection state of the profile Requires BLUETOOTH permission.","abstract List<BluetoothDevice> getDevicesMatchingConnectionStates(int[] states) Get a list of devices that match any of the given connection states."],"package":"android.bluetooth","constants":["int APP_CONFIG_REGISTRATION_FAILURE Health App Configuration registration failure","int APP_CONFIG_REGISTRATION_SUCCESS Health App Configuration registration success","int APP_CONFIG_UNREGISTRATION_FAILURE Health App Configuration un-registration failure","int APP_CONFIG_UNREGISTRATION_SUCCESS Health App Configuration un-registration success","int CHANNEL_TYPE_RELIABLE Health Profile - Channel Type used - Reliable","int CHANNEL_TYPE_STREAMING Health Profile - Channel Type used - Streaming","int SINK_ROLE Health Profile Sink Role the device talking to the health device.","int SOURCE_ROLE Health Profile Source Role - the health device.","int STATE_CHANNEL_CONNECTED Health Channel Connection State - Connected","int STATE_CHANNEL_CONNECTING Health Channel Connection State - Connecting","int STATE_CHANNEL_DISCONNECTED Health Channel Connection State - Disconnected","int STATE_CHANNEL_DISCONNECTING Health Channel Connection State - Disconnecting","[Expand] Inherited Constants","From interface android.bluetooth.BluetoothProfile int A2DP A2DP profile. String EXTRA_PREVIOUS_STATE Extra for the connection state intents of the individual profiles. String EXTRA_STATE Extra for the connection state intents of the individual profiles. int GATT GATT int GATT_SERVER GATT_SERVER int HEADSET Headset and Handsfree profile int HEALTH Health Profile int STATE_CONNECTED The profile is in connected state int STATE_CONNECTING The profile is in connecting state int STATE_DISCONNECTED The profile is in disconnected state int STATE_DISCONNECTING The profile is in disconnecting state","int A2DP A2DP profile.","String EXTRA_PREVIOUS_STATE Extra for the connection state intents of the individual profiles.","String EXTRA_STATE Extra for the connection state intents of the individual profiles.","int GATT GATT","int GATT_SERVER GATT_SERVER","int HEADSET Headset and Handsfree profile","int HEALTH Health Profile","int STATE_CONNECTED The profile is in connected state","int STATE_CONNECTING The profile is in connecting state","int STATE_DISCONNECTED The profile is in disconnected state","int STATE_DISCONNECTING The profile is in disconnecting state"],"class":"BluetoothHealth","constructors":[],"fields":[]}