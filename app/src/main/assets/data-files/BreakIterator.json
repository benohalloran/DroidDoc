{"methods":["Object clone() Returns a copy of this iterator.","abstract int current() Returns this iterator's current position.","abstract int first() Sets this iterator's current position to the first boundary and returns that position.","abstract int following(int offset) Sets the position of the first boundary to the one following the given offset and returns this position.","static Locale[] getAvailableLocales() Returns an array of locales for which custom BreakIterator instances are available.","static BreakIterator getCharacterInstance(Locale locale) Returns a new instance of BreakIterator to iterate over characters using the given locale.","static BreakIterator getCharacterInstance() Returns a new instance of BreakIterator to iterate over characters using the user's default locale.","static BreakIterator getLineInstance(Locale locale) Returns a new instance of BreakIterator to iterate over line breaks using the given locale.","static BreakIterator getLineInstance() Returns a new instance of {BreakIterator to iterate over line breaks using the user's default locale.","static BreakIterator getSentenceInstance(Locale locale) Returns a new instance of BreakIterator to iterate over sentence-breaks using the given locale.","static BreakIterator getSentenceInstance() Returns a new instance of BreakIterator to iterate over sentence-breaks using the default locale.","abstract CharacterIterator getText() Returns a CharacterIterator which represents the text being analyzed.","static BreakIterator getWordInstance() Returns a new instance of BreakIterator to iterate over word-breaks using the default locale.","static BreakIterator getWordInstance(Locale locale) Returns a new instance of BreakIterator to iterate over word-breaks using the given locale.","boolean isBoundary(int offset) Indicates whether the given offset is a boundary position.","abstract int last() Sets this iterator's current position to the last boundary and returns that position.","abstract int next(int n) Sets this iterator's current position to the next boundary after the given position, and returns that position.","abstract int next() Sets this iterator's current position to the next boundary after the current position, and returns this position.","int preceding(int offset) Returns the position of last boundary preceding the given offset, and sets the current position to the returned value, or DONE if the given offset specifies the starting position.","abstract int previous() Sets this iterator's current position to the previous boundary before the current position and returns that position.","void setText(String newText) Sets the new text string to be analyzed, the current position will be reset to the beginning of this new string, and the old string will be lost.","abstract void setText(CharacterIterator newText) Sets the new text to be analyzed by the given CharacterIterator.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.text","constants":["int DONE This constant is returned by iterate methods like previous() or next() if they have returned all valid boundaries."],"class":"BreakIterator","constructors":[],"fields":[]}