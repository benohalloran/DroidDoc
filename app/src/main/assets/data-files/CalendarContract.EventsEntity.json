{"methods":["static EntityIterator newEntityIterator(Cursor cursor, ContentResolver resolver) Creates a new iterator for events","static EntityIterator newEntityIterator(Cursor cursor, ContentProviderClient provider) Creates a new iterator for events","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.provider","constants":["[Expand] Inherited Constants","From interface android.provider.BaseColumns String _COUNT The count of rows in a directory. String _ID The unique ID for a row.","String _COUNT The count of rows in a directory.","String _ID The unique ID for a row.","From interface android.provider.CalendarContract.CalendarSyncColumns String CAL_SYNC1 Generic column for use by sync adapters. String CAL_SYNC10 Generic column for use by sync adapters. String CAL_SYNC2 Generic column for use by sync adapters. String CAL_SYNC3 Generic column for use by sync adapters. String CAL_SYNC4 Generic column for use by sync adapters. String CAL_SYNC5 Generic column for use by sync adapters. String CAL_SYNC6 Generic column for use by sync adapters. String CAL_SYNC7 Generic column for use by sync adapters. String CAL_SYNC8 Generic column for use by sync adapters. String CAL_SYNC9 Generic column for use by sync adapters.","String CAL_SYNC1 Generic column for use by sync adapters.","String CAL_SYNC10 Generic column for use by sync adapters.","String CAL_SYNC2 Generic column for use by sync adapters.","String CAL_SYNC3 Generic column for use by sync adapters.","String CAL_SYNC4 Generic column for use by sync adapters.","String CAL_SYNC5 Generic column for use by sync adapters.","String CAL_SYNC6 Generic column for use by sync adapters.","String CAL_SYNC7 Generic column for use by sync adapters.","String CAL_SYNC8 Generic column for use by sync adapters.","String CAL_SYNC9 Generic column for use by sync adapters.","From interface android.provider.CalendarContract.EventsColumns int ACCESS_CONFIDENTIAL Confidential is not used by the app. int ACCESS_DEFAULT Default access is controlled by the server and will be treated as public on the device. String ACCESS_LEVEL Defines how the event shows up for others when the calendar is shared. int ACCESS_PRIVATE Private shares the event as a free/busy slot with no details. int ACCESS_PUBLIC Public makes the contents visible to anyone with access to the calendar. String ALL_DAY Is the event all day (time zone independent). String AVAILABILITY If this event counts as busy time or is still free time that can be scheduled over. int AVAILABILITY_BUSY Indicates that this event takes up time and will conflict with other events. int AVAILABILITY_FREE Indicates that this event is free time and will not conflict with other events. int AVAILABILITY_TENTATIVE Indicates that the owner's availability may change, but should be considered busy time that will conflict. String CALENDAR_ID The _ID of the calendar the event belongs to. String CAN_INVITE_OTHERS Whether the user can invite others to the event. String CUSTOM_APP_PACKAGE The package name of the custom app that can provide a richer experience for the event. String CUSTOM_APP_URI The URI used by the custom app for the event. String DESCRIPTION The description of the event. String DISPLAY_COLOR This will be EVENT_COLOR if it is not null; otherwise, this will be CALENDAR_COLOR. String DTEND The time the event ends in UTC millis since epoch. String DTSTART The time the event starts in UTC millis since epoch. String DURATION The duration of the event in RFC2445 format. String EVENT_COLOR A secondary color for the individual event. String EVENT_COLOR_KEY A secondary color key for the individual event. String EVENT_END_TIMEZONE The timezone for the end time of the event. String EVENT_LOCATION Where the event takes place. String EVENT_TIMEZONE The timezone for the event. String EXDATE The recurrence exception dates for the event. String EXRULE The recurrence exception rule for the event. String GUESTS_CAN_INVITE_OTHERS Whether guests can invite other guests. String GUESTS_CAN_MODIFY Whether guests can modify the event. String GUESTS_CAN_SEE_GUESTS Whether guests can see the list of attendees. String HAS_ALARM Whether the event has an alarm or not. String HAS_ATTENDEE_DATA Whether the event has attendee information. String HAS_EXTENDED_PROPERTIES Whether the event has extended properties or not. String IS_ORGANIZER Are we the organizer of this event. String LAST_DATE The last date this event repeats on, or NULL if it never ends. String LAST_SYNCED Used to indicate that a row is not a real event but an original copy of a locally modified event. String ORGANIZER Email of the organizer (owner) of the event. String ORIGINAL_ALL_DAY The allDay status (true or false) of the original recurring event for which this event is an exception. String ORIGINAL_ID The _ID of the original recurring event for which this event is an exception. String ORIGINAL_INSTANCE_TIME The original instance time of the recurring event for which this event is an exception. String ORIGINAL_SYNC_ID The _sync_id of the original recurring event for which this event is an exception. String RDATE The recurrence dates for the event. String RRULE The recurrence rule for the event. String SELF_ATTENDEE_STATUS This is a copy of the attendee status for the owner of this event. String STATUS The event status. int STATUS_CANCELED int STATUS_CONFIRMED int STATUS_TENTATIVE String SYNC_DATA1 This column is available for use by sync adapters. String SYNC_DATA10 This column is available for use by sync adapters. String SYNC_DATA2 This column is available for use by sync adapters. String SYNC_DATA3 This column is available for use by sync adapters. String SYNC_DATA4 This column is available for use by sync adapters. String SYNC_DATA5 This column is available for use by sync adapters. String SYNC_DATA6 This column is available for use by sync adapters. String SYNC_DATA7 This column is available for use by sync adapters. String SYNC_DATA8 This column is available for use by sync adapters. String SYNC_DATA9 This column is available for use by sync adapters. String TITLE The title of the event. String UID_2445 The UID for events added from the RFC 2445 iCalendar format.","int ACCESS_CONFIDENTIAL Confidential is not used by the app.","int ACCESS_DEFAULT Default access is controlled by the server and will be treated as public on the device.","String ACCESS_LEVEL Defines how the event shows up for others when the calendar is shared.","int ACCESS_PRIVATE Private shares the event as a free/busy slot with no details.","int ACCESS_PUBLIC Public makes the contents visible to anyone with access to the calendar.","String ALL_DAY Is the event all day (time zone independent).","String AVAILABILITY If this event counts as busy time or is still free time that can be scheduled over.","int AVAILABILITY_BUSY Indicates that this event takes up time and will conflict with other events.","int AVAILABILITY_FREE Indicates that this event is free time and will not conflict with other events.","int AVAILABILITY_TENTATIVE Indicates that the owner's availability may change, but should be considered busy time that will conflict.","String CALENDAR_ID The _ID of the calendar the event belongs to.","String CAN_INVITE_OTHERS Whether the user can invite others to the event.","String CUSTOM_APP_PACKAGE The package name of the custom app that can provide a richer experience for the event.","String CUSTOM_APP_URI The URI used by the custom app for the event.","String DESCRIPTION The description of the event.","String DISPLAY_COLOR This will be EVENT_COLOR if it is not null; otherwise, this will be CALENDAR_COLOR.","String DTEND The time the event ends in UTC millis since epoch.","String DTSTART The time the event starts in UTC millis since epoch.","String DURATION The duration of the event in RFC2445 format.","String EVENT_COLOR A secondary color for the individual event.","String EVENT_COLOR_KEY A secondary color key for the individual event.","String EVENT_END_TIMEZONE The timezone for the end time of the event.","String EVENT_LOCATION Where the event takes place.","String EVENT_TIMEZONE The timezone for the event.","String EXDATE The recurrence exception dates for the event.","String EXRULE The recurrence exception rule for the event.","String GUESTS_CAN_INVITE_OTHERS Whether guests can invite other guests.","String GUESTS_CAN_MODIFY Whether guests can modify the event.","String GUESTS_CAN_SEE_GUESTS Whether guests can see the list of attendees.","String HAS_ALARM Whether the event has an alarm or not.","String HAS_ATTENDEE_DATA Whether the event has attendee information.","String HAS_EXTENDED_PROPERTIES Whether the event has extended properties or not.","String IS_ORGANIZER Are we the organizer of this event.","String LAST_DATE The last date this event repeats on, or NULL if it never ends.","String LAST_SYNCED Used to indicate that a row is not a real event but an original copy of a locally modified event.","String ORGANIZER Email of the organizer (owner) of the event.","String ORIGINAL_ALL_DAY The allDay status (true or false) of the original recurring event for which this event is an exception.","String ORIGINAL_ID The _ID of the original recurring event for which this event is an exception.","String ORIGINAL_INSTANCE_TIME The original instance time of the recurring event for which this event is an exception.","String ORIGINAL_SYNC_ID The _sync_id of the original recurring event for which this event is an exception.","String RDATE The recurrence dates for the event.","String RRULE The recurrence rule for the event.","String SELF_ATTENDEE_STATUS This is a copy of the attendee status for the owner of this event.","String STATUS The event status.","int STATUS_CANCELED","int STATUS_CONFIRMED","int STATUS_TENTATIVE","String SYNC_DATA1 This column is available for use by sync adapters.","String SYNC_DATA10 This column is available for use by sync adapters.","String SYNC_DATA2 This column is available for use by sync adapters.","String SYNC_DATA3 This column is available for use by sync adapters.","String SYNC_DATA4 This column is available for use by sync adapters.","String SYNC_DATA5 This column is available for use by sync adapters.","String SYNC_DATA6 This column is available for use by sync adapters.","String SYNC_DATA7 This column is available for use by sync adapters.","String SYNC_DATA8 This column is available for use by sync adapters.","String SYNC_DATA9 This column is available for use by sync adapters.","String TITLE The title of the event.","String UID_2445 The UID for events added from the RFC 2445 iCalendar format.","From interface android.provider.CalendarContract.SyncColumns String ACCOUNT_NAME The account that was used to sync the entry to the device. String ACCOUNT_TYPE The type of the account that was used to sync the entry to the device. String CAN_PARTIALLY_UPDATE If set to 1 this causes events on this calendar to be duplicated with LAST_SYNCED set to 1 whenever the event transitions from non-dirty to dirty. String DELETED Whether the row has been deleted but not synced to the server. String DIRTY Used to indicate that local, unsynced, changes are present. String MUTATORS Used in conjunction with DIRTY to indicate what packages wrote local changes. String _SYNC_ID The unique ID for a row assigned by the sync source.","String ACCOUNT_NAME The account that was used to sync the entry to the device.","String ACCOUNT_TYPE The type of the account that was used to sync the entry to the device.","String CAN_PARTIALLY_UPDATE If set to 1 this causes events on this calendar to be duplicated with LAST_SYNCED set to 1 whenever the event transitions from non-dirty to dirty.","String DELETED Whether the row has been deleted but not synced to the server.","String DIRTY Used to indicate that local, unsynced, changes are present.","String MUTATORS Used in conjunction with DIRTY to indicate what packages wrote local changes.","String _SYNC_ID The unique ID for a row assigned by the sync source."],"class":"CalendarContract.EventsEntity","constructors":[],"fields":["public static final Uri CONTENT_URI The content:// style URL for this table"]}