{"methods":["static CamcorderProfile get(int quality) Returns the camcorder profile for the first back-facing camera on the device at the given quality level.","static CamcorderProfile get(int cameraId, int quality) Returns the camcorder profile for the given camera at the given quality level.","static boolean hasProfile(int quality) Returns true if camcorder profile exists for the first back-facing camera at the given quality level.","static boolean hasProfile(int cameraId, int quality) Returns true if camcorder profile exists for the given camera at the given quality level.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.media","constants":["int QUALITY_1080P Quality level corresponding to the 1080p (1920 x 1080) resolution.","int QUALITY_2160P Quality level corresponding to the 2160p (3840x2160) resolution.","int QUALITY_480P Quality level corresponding to the 480p (720 x 480) resolution.","int QUALITY_720P Quality level corresponding to the 720p (1280 x 720) resolution.","int QUALITY_CIF Quality level corresponding to the cif (352 x 288) resolution.","int QUALITY_HIGH Quality level corresponding to the highest available resolution.","int QUALITY_HIGH_SPEED_1080P High speed ( >= 100fps) quality level corresponding to the 1080p (1920 x 1080 or 1920x1088) resolution.","int QUALITY_HIGH_SPEED_2160P High speed ( >= 100fps) quality level corresponding to the 2160p (3840 x 2160) resolution.","int QUALITY_HIGH_SPEED_480P High speed ( >= 100fps) quality level corresponding to the 480p (720 x 480) resolution.","int QUALITY_HIGH_SPEED_720P High speed ( >= 100fps) quality level corresponding to the 720p (1280 x 720) resolution.","int QUALITY_HIGH_SPEED_HIGH High speed ( >= 100fps) quality level corresponding to the highest available resolution.","int QUALITY_HIGH_SPEED_LOW High speed ( >= 100fps) quality level corresponding to the lowest available resolution.","int QUALITY_LOW Quality level corresponding to the lowest available resolution.","int QUALITY_QCIF Quality level corresponding to the qcif (176 x 144) resolution.","int QUALITY_QVGA Quality level corresponding to the QVGA (320x240) resolution.","int QUALITY_TIME_LAPSE_1080P Time lapse quality level corresponding to the 1080p (1920 x 1088) resolution.","int QUALITY_TIME_LAPSE_2160P Time lapse quality level corresponding to the 2160p (3840 x 2160) resolution.","int QUALITY_TIME_LAPSE_480P Time lapse quality level corresponding to the 480p (720 x 480) resolution.","int QUALITY_TIME_LAPSE_720P Time lapse quality level corresponding to the 720p (1280 x 720) resolution.","int QUALITY_TIME_LAPSE_CIF Time lapse quality level corresponding to the cif (352 x 288) resolution.","int QUALITY_TIME_LAPSE_HIGH Time lapse quality level corresponding to the highest available resolution.","int QUALITY_TIME_LAPSE_LOW Time lapse quality level corresponding to the lowest available resolution.","int QUALITY_TIME_LAPSE_QCIF Time lapse quality level corresponding to the qcif (176 x 144) resolution.","int QUALITY_TIME_LAPSE_QVGA Time lapse quality level corresponding to the QVGA (320 x 240) resolution."],"class":"CamcorderProfile","constructors":[],"fields":["public int audioBitRate The target audio output bit rate in bits per second","public int audioChannels The number of audio channels used for the audio track","public int audioCodec The audio encoder being used for the audio track.","public int audioSampleRate The audio sampling rate used for the audio track","public int duration Default recording duration in seconds before the session is terminated.","public int fileFormat The file output format of the camcorder profile","public int quality The quality level of the camcorder profile","public int videoBitRate The target video output bit rate in bits per second","public int videoCodec The video encoder being used for the video track","public int videoFrameHeight The target video frame height in pixels","public int videoFrameRate The target video frame rate in frames per second","public int videoFrameWidth The target video frame width in pixels"]}