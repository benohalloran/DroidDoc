{"methods":["List<TKey> getKeys() Returns a list of the keys contained in this map.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.hardware.camera2","constants":["int COLOR_CORRECTION_ABERRATION_MODE_FAST Aberration correction will not slow down capture rate relative to sensor raw output.","int COLOR_CORRECTION_ABERRATION_MODE_HIGH_QUALITY Aberration correction operates at improved quality but reduced capture rate (relative to sensor raw output).","int COLOR_CORRECTION_ABERRATION_MODE_OFF No aberration correction is applied.","int COLOR_CORRECTION_MODE_FAST Color correction processing must not slow down capture rate relative to sensor raw output.","int COLOR_CORRECTION_MODE_HIGH_QUALITY Color correction processing operates at improved quality but reduced capture rate (relative to sensor raw output).","int COLOR_CORRECTION_MODE_TRANSFORM_MATRIX Use the android.colorCorrection.transform matrix and android.colorCorrection.gains to do color conversion.","int CONTROL_AE_ANTIBANDING_MODE_50HZ The camera device will adjust exposure duration to avoid banding problems with 50Hz illumination sources.","int CONTROL_AE_ANTIBANDING_MODE_60HZ The camera device will adjust exposure duration to avoid banding problems with 60Hz illumination sources.","int CONTROL_AE_ANTIBANDING_MODE_AUTO The camera device will automatically adapt its antibanding routine to the current illumination conditions.","int CONTROL_AE_ANTIBANDING_MODE_OFF The camera device will not adjust exposure duration to avoid banding problems.","int CONTROL_AE_MODE_OFF The camera device's autoexposure routine is disabled.","int CONTROL_AE_MODE_ON The camera device's autoexposure routine is active, with no flash control.","int CONTROL_AE_MODE_ON_ALWAYS_FLASH Like ON, except that the camera device also controls the camera's flash unit, always firing it for still captures.","int CONTROL_AE_MODE_ON_AUTO_FLASH Like ON, except that the camera device also controls the camera's flash unit, firing it in low-light conditions.","int CONTROL_AE_MODE_ON_AUTO_FLASH_REDEYE Like ON_AUTO_FLASH, but with automatic red eye reduction.","int CONTROL_AE_PRECAPTURE_TRIGGER_IDLE The trigger is idle.","int CONTROL_AE_PRECAPTURE_TRIGGER_START The precapture metering sequence will be started by the camera device.","int CONTROL_AE_STATE_CONVERGED AE has a good set of control values for the current scene.","int CONTROL_AE_STATE_FLASH_REQUIRED AE has a good set of control values, but flash needs to be fired for good quality still capture.","int CONTROL_AE_STATE_INACTIVE AE is off or recently reset.","int CONTROL_AE_STATE_LOCKED AE has been locked.","int CONTROL_AE_STATE_PRECAPTURE AE has been asked to do a precapture sequence and is currently executing it.","int CONTROL_AE_STATE_SEARCHING AE doesn't yet have a good set of control values for the current scene.","int CONTROL_AF_MODE_AUTO Basic automatic focus mode.","int CONTROL_AF_MODE_CONTINUOUS_PICTURE In this mode, the AF algorithm modifies the lens position continually to attempt to provide a constantly-in-focus image stream.","int CONTROL_AF_MODE_CONTINUOUS_VIDEO In this mode, the AF algorithm modifies the lens position continually to attempt to provide a constantly-in-focus image stream.","int CONTROL_AF_MODE_EDOF Extended depth of field (digital focus) mode.","int CONTROL_AF_MODE_MACRO Close-up focusing mode.","int CONTROL_AF_MODE_OFF The auto-focus routine does not control the lens; android.lens.focusDistance is controlled by the application.","int CONTROL_AF_STATE_ACTIVE_SCAN AF is performing an AF scan because it was triggered by AF trigger.","int CONTROL_AF_STATE_FOCUSED_LOCKED AF believes it is focused correctly and has locked focus.","int CONTROL_AF_STATE_INACTIVE AF is off or has not yet tried to scan/been asked to scan.","int CONTROL_AF_STATE_NOT_FOCUSED_LOCKED AF has failed to focus successfully and has locked focus.","int CONTROL_AF_STATE_PASSIVE_FOCUSED AF currently believes it is in focus, but may restart scanning at any time.","int CONTROL_AF_STATE_PASSIVE_SCAN AF is currently performing an AF scan initiated the camera device in a continuous autofocus mode.","int CONTROL_AF_STATE_PASSIVE_UNFOCUSED AF finished a passive scan without finding focus, and may restart scanning at any time.","int CONTROL_AF_TRIGGER_CANCEL Autofocus will return to its initial state, and cancel any currently active trigger.","int CONTROL_AF_TRIGGER_IDLE The trigger is idle.","int CONTROL_AF_TRIGGER_START Autofocus will trigger now.","int CONTROL_AWB_MODE_AUTO The camera device's auto-white balance routine is active.","int CONTROL_AWB_MODE_CLOUDY_DAYLIGHT The camera device's auto-white balance routine is disabled; the camera device uses cloudy daylight light as the assumed scene illumination for white balance.","int CONTROL_AWB_MODE_DAYLIGHT The camera device's auto-white balance routine is disabled; the camera device uses daylight light as the assumed scene illumination for white balance.","int CONTROL_AWB_MODE_FLUORESCENT The camera device's auto-white balance routine is disabled; the camera device uses fluorescent light as the assumed scene illumination for white balance.","int CONTROL_AWB_MODE_INCANDESCENT The camera device's auto-white balance routine is disabled; the camera device uses incandescent light as the assumed scene illumination for white balance.","int CONTROL_AWB_MODE_OFF The camera device's auto-white balance routine is disabled.","int CONTROL_AWB_MODE_SHADE The camera device's auto-white balance routine is disabled; the camera device uses shade light as the assumed scene illumination for white balance.","int CONTROL_AWB_MODE_TWILIGHT The camera device's auto-white balance routine is disabled; the camera device uses twilight light as the assumed scene illumination for white balance.","int CONTROL_AWB_MODE_WARM_FLUORESCENT The camera device's auto-white balance routine is disabled; the camera device uses warm fluorescent light as the assumed scene illumination for white balance.","int CONTROL_AWB_STATE_CONVERGED AWB has a good set of control values for the current scene.","int CONTROL_AWB_STATE_INACTIVE AWB is not in auto mode, or has not yet started metering.","int CONTROL_AWB_STATE_LOCKED AWB has been locked.","int CONTROL_AWB_STATE_SEARCHING AWB doesn't yet have a good set of control values for the current scene.","int CONTROL_CAPTURE_INTENT_CUSTOM The goal of this request doesn't fall into the other categories.","int CONTROL_CAPTURE_INTENT_MANUAL This request is for manual capture use case where the applications want to directly control the capture parameters.","int CONTROL_CAPTURE_INTENT_PREVIEW This request is for a preview-like use case.","int CONTROL_CAPTURE_INTENT_STILL_CAPTURE This request is for a still capture-type use case.","int CONTROL_CAPTURE_INTENT_VIDEO_RECORD This request is for a video recording use case.","int CONTROL_CAPTURE_INTENT_VIDEO_SNAPSHOT This request is for a video snapshot (still image while recording video) use case.","int CONTROL_CAPTURE_INTENT_ZERO_SHUTTER_LAG This request is for a ZSL usecase; the application will stream full-resolution images and reprocess one or several later for a final capture.","int CONTROL_EFFECT_MODE_AQUA An \"aqua\" effect where a blue hue is added to the image.","int CONTROL_EFFECT_MODE_BLACKBOARD A \"blackboard\" effect where the image is typically displayed as regions of black, with white or grey details.","int CONTROL_EFFECT_MODE_MONO A \"monocolor\" effect where the image is mapped into a single color.","int CONTROL_EFFECT_MODE_NEGATIVE A \"photo-negative\" effect where the image's colors are inverted.","int CONTROL_EFFECT_MODE_OFF No color effect will be applied.","int CONTROL_EFFECT_MODE_POSTERIZE A \"posterization\" effect where the image uses discrete regions of tone rather than a continuous gradient of tones.","int CONTROL_EFFECT_MODE_SEPIA A \"sepia\" effect where the image is mapped into warm gray, red, and brown tones.","int CONTROL_EFFECT_MODE_SOLARIZE A \"solarisation\" effect (Sabattier effect) where the image is wholly or partially reversed in tone.","int CONTROL_EFFECT_MODE_WHITEBOARD A \"whiteboard\" effect where the image is typically displayed as regions of white, with black or grey details.","int CONTROL_MODE_AUTO Use settings for each individual 3A routine.","int CONTROL_MODE_OFF Full application control of pipeline.","int CONTROL_MODE_OFF_KEEP_STATE Same as OFF mode, except that this capture will not be used by camera device background auto-exposure, auto-white balance and auto-focus algorithms (3A) to update their statistics.","int CONTROL_MODE_USE_SCENE_MODE Use a specific scene mode.","int CONTROL_SCENE_MODE_ACTION Optimized for photos of quickly moving objects.","int CONTROL_SCENE_MODE_BARCODE Optimized for accurately capturing a photo of barcode for use by camera applications that wish to read the barcode value.","int CONTROL_SCENE_MODE_BEACH Optimized for bright, outdoor beach settings.","int CONTROL_SCENE_MODE_CANDLELIGHT Optimized for dim settings where the main light source is a flame.","int CONTROL_SCENE_MODE_DISABLED Indicates that no scene modes are set for a given capture request.","int CONTROL_SCENE_MODE_FACE_PRIORITY If face detection support exists, use face detection data for auto-focus, auto-white balance, and auto-exposure routines.","int CONTROL_SCENE_MODE_FIREWORKS Optimized for nighttime photos of fireworks.","int CONTROL_SCENE_MODE_HIGH_SPEED_VIDEO Optimized for high speed video recording (frame rate >=60fps) use case.","int CONTROL_SCENE_MODE_LANDSCAPE Optimized for photos of distant macroscopic objects.","int CONTROL_SCENE_MODE_NIGHT Optimized for low-light settings.","int CONTROL_SCENE_MODE_NIGHT_PORTRAIT Optimized for still photos of people in low-light settings.","int CONTROL_SCENE_MODE_PARTY Optimized for dim, indoor settings with multiple moving people.","int CONTROL_SCENE_MODE_PORTRAIT Optimized for still photos of people.","int CONTROL_SCENE_MODE_SNOW Optimized for bright, outdoor settings containing snow.","int CONTROL_SCENE_MODE_SPORTS Optimized for photos of quickly moving people.","int CONTROL_SCENE_MODE_STEADYPHOTO Optimized to avoid blurry photos due to small amounts of device motion (for example: due to hand shake).","int CONTROL_SCENE_MODE_SUNSET Optimized for scenes of the setting sun.","int CONTROL_SCENE_MODE_THEATRE Optimized for dim, indoor settings where flash must remain off.","int CONTROL_VIDEO_STABILIZATION_MODE_OFF Video stabilization is disabled.","int CONTROL_VIDEO_STABILIZATION_MODE_ON Video stabilization is enabled.","int EDGE_MODE_FAST Apply edge enhancement at a quality level that does not slow down frame rate relative to sensor output","int EDGE_MODE_HIGH_QUALITY Apply high-quality edge enhancement, at a cost of reducing output frame rate.","int EDGE_MODE_OFF No edge enhancement is applied.","int FLASH_MODE_OFF Do not fire the flash for this capture.","int FLASH_MODE_SINGLE If the flash is available and charged, fire flash for this capture.","int FLASH_MODE_TORCH Transition flash to continuously on.","int FLASH_STATE_CHARGING Flash is charging and cannot be fired.","int FLASH_STATE_FIRED Flash fired for this capture.","int FLASH_STATE_PARTIAL Flash partially illuminated this frame.","int FLASH_STATE_READY Flash is ready to fire.","int FLASH_STATE_UNAVAILABLE No flash on camera.","int HOT_PIXEL_MODE_FAST Hot pixel correction is applied, without reducing frame rate relative to sensor raw output.","int HOT_PIXEL_MODE_HIGH_QUALITY High-quality hot pixel correction is applied, at a cost of reducing frame rate relative to sensor raw output.","int HOT_PIXEL_MODE_OFF No hot pixel correction is applied.","int INFO_SUPPORTED_HARDWARE_LEVEL_FULL This camera device is capable of supporting advanced imaging applications.","int INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY This camera device is running in backward compatibility mode.","int INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED This camera device has only limited capabilities.","int LENS_FACING_BACK The camera device faces the opposite direction as the device's screen.","int LENS_FACING_FRONT The camera device faces the same direction as the device's screen.","int LENS_INFO_FOCUS_DISTANCE_CALIBRATION_APPROXIMATE The lens focus distance is measured in diopters.","int LENS_INFO_FOCUS_DISTANCE_CALIBRATION_CALIBRATED The lens focus distance is measured in diopters, and is calibrated.","int LENS_INFO_FOCUS_DISTANCE_CALIBRATION_UNCALIBRATED The lens focus distance is not accurate, and the units used for android.lens.focusDistance do not correspond to any physical units.","int LENS_OPTICAL_STABILIZATION_MODE_OFF Optical stabilization is unavailable.","int LENS_OPTICAL_STABILIZATION_MODE_ON Optical stabilization is enabled.","int LENS_STATE_MOVING One or several of the lens parameters (android.lens.focalLength, android.lens.focusDistance, android.lens.filterDensity or android.lens.aperture) is currently changing.","int LENS_STATE_STATIONARY The lens parameters (android.lens.focalLength, android.lens.focusDistance, android.lens.filterDensity and android.lens.aperture) are not changing.","int NOISE_REDUCTION_MODE_FAST Noise reduction is applied without reducing frame rate relative to sensor output.","int NOISE_REDUCTION_MODE_HIGH_QUALITY High-quality noise reduction is applied, at the cost of reducing frame rate relative to sensor output.","int NOISE_REDUCTION_MODE_OFF No noise reduction is applied.","int REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE The minimal set of capabilities that every camera device (regardless of android.info.supportedHardwareLevel) supports.","int REQUEST_AVAILABLE_CAPABILITIES_MANUAL_POST_PROCESSING The camera device post-processing stages can be manually controlled.","int REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR The camera device can be manually controlled (3A algorithms such as auto-exposure, and auto-focus can be bypassed).","int REQUEST_AVAILABLE_CAPABILITIES_RAW The camera device supports outputting RAW buffers and metadata for interpreting them.","int SCALER_CROPPING_TYPE_CENTER_ONLY The camera device only supports centered crop regions.","int SCALER_CROPPING_TYPE_FREEFORM The camera device supports arbitrarily chosen crop regions.","int SENSOR_INFO_COLOR_FILTER_ARRANGEMENT_BGGR","int SENSOR_INFO_COLOR_FILTER_ARRANGEMENT_GBRG","int SENSOR_INFO_COLOR_FILTER_ARRANGEMENT_GRBG","int SENSOR_INFO_COLOR_FILTER_ARRANGEMENT_RGB Sensor is not Bayer; output has 3 16-bit values for each pixel, instead of just 1 16-bit value per pixel.","int SENSOR_INFO_COLOR_FILTER_ARRANGEMENT_RGGB","int SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME Timestamps from android.sensor.timestamp are in the same timebase as android.os.SystemClock#elapsedRealtimeNanos(), and they can be compared to other timestamps using that base.","int SENSOR_INFO_TIMESTAMP_SOURCE_UNKNOWN Timestamps from android.sensor.timestamp are in nanoseconds and monotonic, but can not be compared to timestamps from other subsystems (e.g.","int SENSOR_REFERENCE_ILLUMINANT1_CLOUDY_WEATHER","int SENSOR_REFERENCE_ILLUMINANT1_COOL_WHITE_FLUORESCENT W 3900 - 4500K","int SENSOR_REFERENCE_ILLUMINANT1_D50","int SENSOR_REFERENCE_ILLUMINANT1_D55","int SENSOR_REFERENCE_ILLUMINANT1_D65","int SENSOR_REFERENCE_ILLUMINANT1_D75","int SENSOR_REFERENCE_ILLUMINANT1_DAYLIGHT","int SENSOR_REFERENCE_ILLUMINANT1_DAYLIGHT_FLUORESCENT D 5700 - 7100K","int SENSOR_REFERENCE_ILLUMINANT1_DAY_WHITE_FLUORESCENT N 4600 - 5400K","int SENSOR_REFERENCE_ILLUMINANT1_FINE_WEATHER","int SENSOR_REFERENCE_ILLUMINANT1_FLASH","int SENSOR_REFERENCE_ILLUMINANT1_FLUORESCENT","int SENSOR_REFERENCE_ILLUMINANT1_ISO_STUDIO_TUNGSTEN","int SENSOR_REFERENCE_ILLUMINANT1_SHADE","int SENSOR_REFERENCE_ILLUMINANT1_STANDARD_A","int SENSOR_REFERENCE_ILLUMINANT1_STANDARD_B","int SENSOR_REFERENCE_ILLUMINANT1_STANDARD_C","int SENSOR_REFERENCE_ILLUMINANT1_TUNGSTEN Incandescent light","int SENSOR_REFERENCE_ILLUMINANT1_WHITE_FLUORESCENT WW 3200 - 3700K","int SENSOR_TEST_PATTERN_MODE_COLOR_BARS All pixel data is replaced with an 8-bar color pattern.","int SENSOR_TEST_PATTERN_MODE_COLOR_BARS_FADE_TO_GRAY The test pattern is similar to COLOR_BARS, except that each bar should start at its specified color at the top, and fade to gray at the bottom.","int SENSOR_TEST_PATTERN_MODE_CUSTOM1 The first custom test pattern.","int SENSOR_TEST_PATTERN_MODE_OFF No test pattern mode is used, and the camera device returns captures from the image sensor.","int SENSOR_TEST_PATTERN_MODE_PN9 All pixel data is replaced by a pseudo-random sequence generated from a PN9 512-bit sequence (typically implemented in hardware with a linear feedback shift register).","int SENSOR_TEST_PATTERN_MODE_SOLID_COLOR Each pixel in [R, G_even, G_odd, B] is replaced by its respective color channel provided in android.sensor.testPatternData.","int SHADING_MODE_FAST Apply lens shading corrections, without slowing frame rate relative to sensor raw output","int SHADING_MODE_HIGH_QUALITY Apply high-quality lens shading correction, at the cost of reduced frame rate.","int SHADING_MODE_OFF No lens shading correction is applied.","int STATISTICS_FACE_DETECT_MODE_FULL Return all face metadata.","int STATISTICS_FACE_DETECT_MODE_OFF Do not include face detection statistics in capture results.","int STATISTICS_FACE_DETECT_MODE_SIMPLE Return face rectangle and confidence values only.","int STATISTICS_LENS_SHADING_MAP_MODE_OFF Do not include a lens shading map in the capture result.","int STATISTICS_LENS_SHADING_MAP_MODE_ON Include a lens shading map in the capture result.","int STATISTICS_SCENE_FLICKER_50HZ The camera device detects illumination flickering at 50Hz in the current scene.","int STATISTICS_SCENE_FLICKER_60HZ The camera device detects illumination flickering at 60Hz in the current scene.","int STATISTICS_SCENE_FLICKER_NONE The camera device does not detect any flickering illumination in the current scene.","int SYNC_MAX_LATENCY_PER_FRAME_CONTROL Every frame has the requests immediately applied.","int SYNC_MAX_LATENCY_UNKNOWN Each new frame has some subset (potentially the entire set) of the past requests applied to the camera settings.","int TONEMAP_MODE_CONTRAST_CURVE Use the tone mapping curve specified in the android.tonemap.curve* entries.","int TONEMAP_MODE_FAST Advanced gamma mapping and color enhancement may be applied, without reducing frame rate compared to raw sensor output.","int TONEMAP_MODE_HIGH_QUALITY High-quality gamma mapping and color enhancement will be applied, at the cost of reduced frame rate compared to raw sensor output."],"class":"CameraMetadata","constructors":[],"fields":[]}