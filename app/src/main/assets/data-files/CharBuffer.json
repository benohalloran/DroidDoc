{"methods":["static CharBuffer allocate(int capacity) Creates a char buffer based on a newly allocated char array.","CharBuffer append(char c) Writes the given char to the current position and increases the position by 1.","CharBuffer append(CharSequence csq, int start, int end) Writes chars of the given CharSequence to the current position of this buffer, and increases the position by the number of chars written.","CharBuffer append(CharSequence csq) Writes all chars of the given character sequence csq to the current position of this buffer, and increases the position by the length of the csq.","final char[] array() Returns the array that backs this buffer (optional operation).","final int arrayOffset() Returns the offset into the array returned by array of the first element of the buffer (optional operation).","abstract CharBuffer asReadOnlyBuffer() Returns a read-only buffer that shares its content with this buffer.","final char charAt(int index) Returns the character located at the given offset relative to the current position.","abstract CharBuffer compact() Compacts this char buffer.","int compareTo(CharBuffer otherBuffer) Compare the remaining chars of this buffer to another char buffer's remaining chars.","abstract CharBuffer duplicate() Returns a duplicated buffer that shares its content with this buffer.","boolean equals(Object other) Checks whether this char buffer is equal to another object.","CharBuffer get(char[] dst, int dstOffset, int charCount) Reads chars from the current position into the specified char array, starting from the specified offset, and increases the position by the number of chars read.","abstract char get() Returns the char at the current position and increases the position by 1.","abstract char get(int index) Returns a char at the specified index; the position is not changed.","CharBuffer get(char[] dst) Reads chars from the current position into the specified char array and increases the position by the number of chars read.","final boolean hasArray() Returns true if array and arrayOffset won't throw.","int hashCode() Calculates this buffer's hash code from the remaining chars.","abstract boolean isDirect() Indicates whether this buffer is direct.","final int length() Returns the number of remaining chars.","abstract ByteOrder order() Returns the byte order used by this buffer when converting chars from/to bytes.","final CharBuffer put(String str) Writes all chars of the given string to the current position of this buffer, and increases the position by the length of string.","abstract CharBuffer put(char c) Writes the given char to the current position and increases the position by 1.","CharBuffer put(String str, int start, int end) Writes chars of the given string to the current position of this buffer, and increases the position by the number of chars written.","abstract CharBuffer put(int index, char c) Writes a char to the specified index of this buffer; the position is not changed.","CharBuffer put(CharBuffer src) Writes all the remaining chars of the src char buffer to this buffer's current position, and increases both buffers' position by the number of chars copied.","final CharBuffer put(char[] src) Writes chars from the given char array to the current position and increases the position by the number of chars written.","CharBuffer put(char[] src, int srcOffset, int charCount) Writes chars from the given char array, starting from the specified offset, to the current position and increases the position by the number of chars written.","int read(CharBuffer target) Reads characters from this buffer and puts them into target.","abstract CharBuffer slice() Returns a sliced buffer that shares its content with this buffer.","abstract CharBuffer subSequence(int start, int end) Returns a new char buffer representing a sub-sequence of this buffer's current remaining content.","String toString() Returns a string representing the current remaining chars of this buffer.","static CharBuffer wrap(CharSequence cs, int start, int end) Creates a new char buffer by wrapping the given char sequence.","static CharBuffer wrap(CharSequence chseq) Creates a new char buffer by wrapping the given char sequence.","static CharBuffer wrap(char[] array, int start, int charCount) Creates a new char buffer by wrapping the given char array.","static CharBuffer wrap(char[] array) Creates a new char buffer by wrapping the given char array.","[Expand] Inherited Methods","From class java.nio.Buffer abstract Object array() Returns the array that backs this buffer (optional operation). abstract int arrayOffset() Returns the offset into the array returned by array of the first element of the buffer (optional operation). final int capacity() Returns the capacity of this buffer. final Buffer clear() Clears this buffer. final Buffer flip() Flips this buffer. abstract boolean hasArray() Returns true if array and arrayOffset won't throw. final boolean hasRemaining() Indicates if there are elements remaining in this buffer, that is if position < limit. abstract boolean isDirect() Returns true if this is a direct buffer. abstract boolean isReadOnly() Indicates whether this buffer is read-only. final int limit() Returns the limit of this buffer. final Buffer limit(int newLimit) Sets the limit of this buffer. final Buffer mark() Marks the current position, so that the position may return to this point later by calling reset(). final Buffer position(int newPosition) Sets the position of this buffer. final int position() Returns the position of this buffer. final int remaining() Returns the number of remaining elements in this buffer, that is limit - position. final Buffer reset() Resets the position of this buffer to the mark. final Buffer rewind() Rewinds this buffer. String toString() Returns a string describing this buffer.","abstract Object array() Returns the array that backs this buffer (optional operation).","abstract int arrayOffset() Returns the offset into the array returned by array of the first element of the buffer (optional operation).","final int capacity() Returns the capacity of this buffer.","final Buffer clear() Clears this buffer.","final Buffer flip() Flips this buffer.","abstract boolean hasArray() Returns true if array and arrayOffset won't throw.","final boolean hasRemaining() Indicates if there are elements remaining in this buffer, that is if position < limit.","abstract boolean isDirect() Returns true if this is a direct buffer.","abstract boolean isReadOnly() Indicates whether this buffer is read-only.","final int limit() Returns the limit of this buffer.","final Buffer limit(int newLimit) Sets the limit of this buffer.","final Buffer mark() Marks the current position, so that the position may return to this point later by calling reset().","final Buffer position(int newPosition) Sets the position of this buffer.","final int position() Returns the position of this buffer.","final int remaining() Returns the number of remaining elements in this buffer, that is limit - position.","final Buffer reset() Resets the position of this buffer to the mark.","final Buffer rewind() Rewinds this buffer.","String toString() Returns a string describing this buffer.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Appendable abstract Appendable append(CharSequence csq) Appends the character sequence csq. abstract Appendable append(CharSequence csq, int start, int end) Appends a subsequence of csq. abstract Appendable append(char c) Appends the specified character.","abstract Appendable append(CharSequence csq) Appends the character sequence csq.","abstract Appendable append(CharSequence csq, int start, int end) Appends a subsequence of csq.","abstract Appendable append(char c) Appends the specified character.","From interface java.lang.CharSequence abstract char charAt(int index) Returns the character at index. abstract int length() Returns the number of characters in this sequence. abstract CharSequence subSequence(int start, int end) Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence. abstract String toString() Returns a string with the same characters in the same order as in this sequence.","abstract char charAt(int index) Returns the character at index.","abstract int length() Returns the number of characters in this sequence.","abstract CharSequence subSequence(int start, int end) Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence.","abstract String toString() Returns a string with the same characters in the same order as in this sequence.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","From interface java.lang.Readable abstract int read(CharBuffer cb) Reads characters into the specified CharBuffer.","abstract int read(CharBuffer cb) Reads characters into the specified CharBuffer."],"package":"java.nio","constants":[],"class":"CharBuffer","constructors":[],"fields":[]}