{"methods":["int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input.","void close() Closes this CipherInputStream, also closes the underlying input stream and call doFinal on the cipher object.","boolean markSupported() Returns whether this input stream supports mark and reset, which it does not.","int read() Reads the next byte from this cipher input stream.","int read(byte[] buf, int off, int len) Reads the next len bytes from this input stream into buffer buf starting at offset off.","long skip(long byteCount) Skips byteCount bytes in this stream.","[Expand] Inherited Methods","From class java.io.FilterInputStream int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input. void close() Closes this stream. synchronized void mark(int readlimit) Sets a mark position in this stream. boolean markSupported() Indicates whether this stream supports mark() and reset(). int read() Reads a single byte from the filtered stream and returns it as an integer in the range from 0 to 255. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. synchronized void reset() Resets this stream to the last marked location. long skip(long byteCount) Skips byteCount bytes in this stream.","int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input.","void close() Closes this stream.","synchronized void mark(int readlimit) Sets a mark position in this stream.","boolean markSupported() Indicates whether this stream supports mark() and reset().","int read() Reads a single byte from the filtered stream and returns it as an integer in the range from 0 to 255.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset.","synchronized void reset() Resets this stream to the last marked location.","long skip(long byteCount) Skips byteCount bytes in this stream.","From class java.io.InputStream int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input. void close() Closes this stream. void mark(int readlimit) Sets a mark position in this InputStream. boolean markSupported() Indicates whether this stream supports the mark() and reset() methods. int read(byte[] buffer) Equivalent to read(buffer, 0, buffer.length). abstract int read() Reads a single byte from this stream and returns it as an integer in the range from 0 to 255. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. synchronized void reset() Resets this stream to the last marked location. long skip(long byteCount) Skips at most byteCount bytes in this stream.","int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input.","void close() Closes this stream.","void mark(int readlimit) Sets a mark position in this InputStream.","boolean markSupported() Indicates whether this stream supports the mark() and reset() methods.","int read(byte[] buffer) Equivalent to read(buffer, 0, buffer.length).","abstract int read() Reads a single byte from this stream and returns it as an integer in the range from 0 to 255.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset.","synchronized void reset() Resets this stream to the last marked location.","long skip(long byteCount) Skips at most byteCount bytes in this stream.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.io.Closeable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds."],"package":"javax.crypto","constants":[],"class":"CipherInputStream","constructors":[],"fields":[]}