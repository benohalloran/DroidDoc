{"methods":["abstract byte[] engineDoFinal(byte[] input, int inputOffset, int inputLen) Finishes a multi-part transformation (encryption or decryption).","int engineDoFinal(ByteBuffer input, ByteBuffer output) Finishes a multi-part transformation (encryption or decryption).","abstract int engineDoFinal(byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset) Finishes a multi-part transformation (encryption or decryption).","abstract int engineGetBlockSize() Returns the block size of this cipher (in bytes)","abstract byte[] engineGetIV() Returns the Initialization Vector (IV) that was used to initialize this cipher or null if none was used.","int engineGetKeySize(Key key) Returns the size of a specified key object in bits.","abstract int engineGetOutputSize(int inputLen) Returns the size for a buffer (in bytes), that the next call to update of doFinal would return, taking into account any buffered data from previous update calls and padding.","abstract AlgorithmParameters engineGetParameters() Returns the parameters that where used to create this cipher instance.","abstract void engineInit(int opmode, Key key, AlgorithmParameters params, SecureRandom random) Initializes this cipher instance with the specified key, algorithm parameters and a source of randomness.","abstract void engineInit(int opmode, Key key, SecureRandom random) Initializes this cipher instance with the specified key and a source of randomness.","abstract void engineInit(int opmode, Key key, AlgorithmParameterSpec params, SecureRandom random) Initializes this cipher instance with the specified key, algorithm parameters and a source of randomness.","abstract void engineSetMode(String mode) Sets the mode for this cipher.","abstract void engineSetPadding(String padding) Sets the padding method for this cipher.","Key engineUnwrap(byte[] wrappedKey, String wrappedKeyAlgorithm, int wrappedKeyType) Unwraps a key using this cipher instance.","int engineUpdate(ByteBuffer input, ByteBuffer output) Continues a multi-part transformation (encryption or decryption).","abstract int engineUpdate(byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset) Continues a multi-part transformation (encryption or decryption).","abstract byte[] engineUpdate(byte[] input, int inputOffset, int inputLen) Continues a multi-part transformation (encryption or decryption).","void engineUpdateAAD(byte[] input, int inputOffset, int inputLen) Continues a multi-part transformation (encryption or decryption) with Authenticated Additional Data (AAD).","void engineUpdateAAD(ByteBuffer input) Continues a multi-part transformation (encryption or decryption).","byte[] engineWrap(Key key) Wraps a key using this cipher instance.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"javax.crypto","constants":[],"class":"CipherSpi","constructors":[],"fields":[]}