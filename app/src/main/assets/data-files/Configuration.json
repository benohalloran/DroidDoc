{"methods":["int compareTo(Configuration that)","int describeContents() Parcelable methods","int diff(Configuration delta) Return a bit mask of the differences between this Configuration object and the given one.","boolean equals(Configuration that)","boolean equals(Object that) Compares this instance with the specified object and indicates if they are equal.","int getLayoutDirection() Return the layout direction.","int hashCode() Returns an integer hash code for this object.","boolean isLayoutSizeAtLeast(int size) Check if the Configuration's current screenLayout is at least the given size.","static boolean needNewResources(int configChanges, int interestingChanges) Determine if a new resource needs to be loaded from the bit set of configuration changes returned by updateFrom(Configuration).","void readFromParcel(Parcel source)","void setLayoutDirection(Locale locale) Set the layout direction from the Locale.","void setLocale(Locale loc) Set the locale.","void setTo(Configuration o)","void setToDefaults() Set this object to the system defaults.","String toString() Returns a string containing a concise, human-readable description of this object.","int updateFrom(Configuration delta) Copy the fields from delta into this Configuration object, keeping track of which ones have changed.","void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order."],"package":"android.content.res","constants":["int DENSITY_DPI_UNDEFINED Default value for densityDpi indicating that no width has been specified.","int HARDKEYBOARDHIDDEN_NO Constant for hardKeyboardHidden, value corresponding to the physical keyboard being exposed.","int HARDKEYBOARDHIDDEN_UNDEFINED Constant for hardKeyboardHidden: a value indicating that no value has been set.","int HARDKEYBOARDHIDDEN_YES Constant for hardKeyboardHidden, value corresponding to the physical keyboard being hidden.","int KEYBOARDHIDDEN_NO Constant for keyboardHidden, value corresponding to the keysexposed resource qualifier.","int KEYBOARDHIDDEN_UNDEFINED Constant for keyboardHidden: a value indicating that no value has been set.","int KEYBOARDHIDDEN_YES Constant for keyboardHidden, value corresponding to the keyshidden resource qualifier.","int KEYBOARD_12KEY Constant for keyboard, value corresponding to the 12key resource qualifier.","int KEYBOARD_NOKEYS Constant for keyboard, value corresponding to the nokeys resource qualifier.","int KEYBOARD_QWERTY Constant for keyboard, value corresponding to the qwerty resource qualifier.","int KEYBOARD_UNDEFINED Constant for keyboard: a value indicating that no value has been set.","int MNC_ZERO Constant used to to represent MNC (Mobile Network Code) zero.","int NAVIGATIONHIDDEN_NO Constant for navigationHidden, value corresponding to the navexposed resource qualifier.","int NAVIGATIONHIDDEN_UNDEFINED Constant for navigationHidden: a value indicating that no value has been set.","int NAVIGATIONHIDDEN_YES Constant for navigationHidden, value corresponding to the navhidden resource qualifier.","int NAVIGATION_DPAD Constant for navigation, value corresponding to the dpad resource qualifier.","int NAVIGATION_NONAV Constant for navigation, value corresponding to the nonav resource qualifier.","int NAVIGATION_TRACKBALL Constant for navigation, value corresponding to the trackball resource qualifier.","int NAVIGATION_UNDEFINED Constant for navigation: a value indicating that no value has been set.","int NAVIGATION_WHEEL Constant for navigation, value corresponding to the wheel resource qualifier.","int ORIENTATION_LANDSCAPE Constant for orientation, value corresponding to the land resource qualifier.","int ORIENTATION_PORTRAIT Constant for orientation, value corresponding to the port resource qualifier.","int ORIENTATION_SQUARE This constant was deprecated in API level 16. Not currently supported or used.","int ORIENTATION_UNDEFINED Constant for orientation: a value indicating that no value has been set.","int SCREENLAYOUT_LAYOUTDIR_LTR Constant for screenLayout: a SCREENLAYOUT_LAYOUTDIR_MASK value indicating that a layout dir has been set to LTR.","int SCREENLAYOUT_LAYOUTDIR_MASK Constant for screenLayout: bits that encode the layout direction.","int SCREENLAYOUT_LAYOUTDIR_RTL Constant for screenLayout: a SCREENLAYOUT_LAYOUTDIR_MASK value indicating that a layout dir has been set to RTL.","int SCREENLAYOUT_LAYOUTDIR_SHIFT Constant for screenLayout: bits shift to get the layout direction.","int SCREENLAYOUT_LAYOUTDIR_UNDEFINED Constant for screenLayout: a SCREENLAYOUT_LAYOUTDIR_MASK value indicating that no layout dir has been set.","int SCREENLAYOUT_LONG_MASK Constant for screenLayout: bits that encode the aspect ratio.","int SCREENLAYOUT_LONG_NO Constant for screenLayout: a SCREENLAYOUT_LONG_MASK value that corresponds to the notlong resource qualifier.","int SCREENLAYOUT_LONG_UNDEFINED Constant for screenLayout: a SCREENLAYOUT_LONG_MASK value indicating that no size has been set.","int SCREENLAYOUT_LONG_YES Constant for screenLayout: a SCREENLAYOUT_LONG_MASK value that corresponds to the long resource qualifier.","int SCREENLAYOUT_SIZE_LARGE Constant for screenLayout: a SCREENLAYOUT_SIZE_MASK value indicating the screen is at least approximately 480x640 dp units, corresponds to the large resource qualifier.","int SCREENLAYOUT_SIZE_MASK Constant for screenLayout: bits that encode the size.","int SCREENLAYOUT_SIZE_NORMAL Constant for screenLayout: a SCREENLAYOUT_SIZE_MASK value indicating the screen is at least approximately 320x470 dp units, corresponds to the normal resource qualifier.","int SCREENLAYOUT_SIZE_SMALL Constant for screenLayout: a SCREENLAYOUT_SIZE_MASK value indicating the screen is at least approximately 320x426 dp units, corresponds to the small resource qualifier.","int SCREENLAYOUT_SIZE_UNDEFINED Constant for screenLayout: a SCREENLAYOUT_SIZE_MASK value indicating that no size has been set.","int SCREENLAYOUT_SIZE_XLARGE Constant for screenLayout: a SCREENLAYOUT_SIZE_MASK value indicating the screen is at least approximately 720x960 dp units, corresponds to the xlarge resource qualifier.","int SCREENLAYOUT_UNDEFINED Constant for screenLayout: a value indicating that screenLayout is undefined","int SCREEN_HEIGHT_DP_UNDEFINED Default value for screenHeightDp indicating that no width has been specified.","int SCREEN_WIDTH_DP_UNDEFINED Default value for screenWidthDp indicating that no width has been specified.","int SMALLEST_SCREEN_WIDTH_DP_UNDEFINED Default value for smallestScreenWidthDp indicating that no width has been specified.","int TOUCHSCREEN_FINGER Constant for touchscreen, value corresponding to the finger resource qualifier.","int TOUCHSCREEN_NOTOUCH Constant for touchscreen, value corresponding to the notouch resource qualifier.","int TOUCHSCREEN_STYLUS This constant was deprecated in API level 16. Not currently supported or used.","int TOUCHSCREEN_UNDEFINED Constant for touchscreen: a value indicating that no value has been set.","int UI_MODE_NIGHT_MASK Constant for uiMode: bits that encode the night mode.","int UI_MODE_NIGHT_NO Constant for uiMode: a UI_MODE_NIGHT_MASK value that corresponds to the notnight resource qualifier.","int UI_MODE_NIGHT_UNDEFINED Constant for uiMode: a UI_MODE_NIGHT_MASK value indicating that no mode type has been set.","int UI_MODE_NIGHT_YES Constant for uiMode: a UI_MODE_NIGHT_MASK value that corresponds to the night resource qualifier.","int UI_MODE_TYPE_APPLIANCE Constant for uiMode: a UI_MODE_TYPE_MASK value that corresponds to the appliance resource qualifier.","int UI_MODE_TYPE_CAR Constant for uiMode: a UI_MODE_TYPE_MASK value that corresponds to the car resource qualifier.","int UI_MODE_TYPE_DESK Constant for uiMode: a UI_MODE_TYPE_MASK value that corresponds to the desk resource qualifier.","int UI_MODE_TYPE_MASK Constant for uiMode: bits that encode the mode type.","int UI_MODE_TYPE_NORMAL Constant for uiMode: a UI_MODE_TYPE_MASK value that corresponds to no UI mode resource qualifier specified.","int UI_MODE_TYPE_TELEVISION Constant for uiMode: a UI_MODE_TYPE_MASK value that corresponds to the television resource qualifier.","int UI_MODE_TYPE_UNDEFINED Constant for uiMode: a UI_MODE_TYPE_MASK value indicating that no mode type has been set.","int UI_MODE_TYPE_WATCH Constant for uiMode: a UI_MODE_TYPE_MASK value that corresponds to the watch resource qualifier.","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"Configuration","constructors":[],"fields":["public static final Creator<Configuration> CREATOR","public int densityDpi The target screen density being rendered to, corresponding to density resource qualifier.","public float fontScale Current user preference for the scaling factor for fonts, relative to the base density scaling.","public int hardKeyboardHidden A flag indicating whether the hard keyboard has been hidden.","public int keyboard The kind of keyboard attached to the device.","public int keyboardHidden A flag indicating whether any keyboard is available.","public Locale locale Current user preference for the locale, corresponding to locale resource qualifier.","public int mcc IMSI MCC (Mobile Country Code), corresponding to mcc resource qualifier.","public int mnc IMSI MNC (Mobile Network Code), corresponding to mnc resource qualifier.","public int navigation The kind of navigation method available on the device.","public int navigationHidden A flag indicating whether any 5-way or DPAD navigation available.","public int orientation Overall orientation of the screen.","public int screenHeightDp The current height of the available screen space, in dp units, corresponding to screen height resource qualifier.","public int screenLayout Bit mask of overall layout of the screen.","public int screenWidthDp The current width of the available screen space, in dp units, corresponding to screen width resource qualifier.","public int smallestScreenWidthDp The smallest screen size an application will see in normal operation, corresponding to smallest screen width resource qualifier.","public int touchscreen The kind of touch screen attached to the device.","public int uiMode Bit mask of the ui mode."]}