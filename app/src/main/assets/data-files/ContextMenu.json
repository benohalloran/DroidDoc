{"methods":["abstract void clearHeader() Clears the header of the context menu.","abstract ContextMenu setHeaderIcon(Drawable icon) Sets the context menu header's icon to the icon given in icon Drawable.","abstract ContextMenu setHeaderIcon(int iconRes) Sets the context menu header's icon to the icon given in iconRes resource id.","abstract ContextMenu setHeaderTitle(CharSequence title) Sets the context menu header's title to the title given in title.","abstract ContextMenu setHeaderTitle(int titleRes) Sets the context menu header's title to the title given in titleRes resource identifier.","abstract ContextMenu setHeaderView(View view) Sets the header of the context menu to the View given in view.","[Expand] Inherited Methods","From interface android.view.Menu abstract MenuItem add(CharSequence title) Add a new item to the menu. abstract MenuItem add(int groupId, int itemId, int order, int titleRes) Variation on add(int, int, int, CharSequence) that takes a string resource identifier instead of the string itself. abstract MenuItem add(int titleRes) Add a new item to the menu. abstract MenuItem add(int groupId, int itemId, int order, CharSequence title) Add a new item to the menu. abstract int addIntentOptions(int groupId, int itemId, int order, ComponentName caller, Intent[] specifics, Intent intent, int flags, MenuItem[] outSpecificItems) Add a group of menu items corresponding to actions that can be performed for a particular Intent. abstract SubMenu addSubMenu(int groupId, int itemId, int order, CharSequence title) Add a new sub-menu to the menu. abstract SubMenu addSubMenu(int groupId, int itemId, int order, int titleRes) Variation on addSubMenu(int, int, int, CharSequence) that takes a string resource identifier for the title instead of the string itself. abstract SubMenu addSubMenu(CharSequence title) Add a new sub-menu to the menu. abstract SubMenu addSubMenu(int titleRes) Add a new sub-menu to the menu. abstract void clear() Remove all existing items from the menu, leaving it empty as if it had just been created. abstract void close() Closes the menu, if open. abstract MenuItem findItem(int id) Return the menu item with a particular identifier. abstract MenuItem getItem(int index) Gets the menu item at the given index. abstract boolean hasVisibleItems() Return whether the menu currently has item items that are visible. abstract boolean isShortcutKey(int keyCode, KeyEvent event) Is a keypress one of the defined shortcut keys for this window. abstract boolean performIdentifierAction(int id, int flags) Execute the menu item action associated with the given menu identifier. abstract boolean performShortcut(int keyCode, KeyEvent event, int flags) Execute the menu item action associated with the given shortcut character. abstract void removeGroup(int groupId) Remove all items in the given group. abstract void removeItem(int id) Remove the item with the given identifier. abstract void setGroupCheckable(int group, boolean checkable, boolean exclusive) Control whether a particular group of items can show a check mark. abstract void setGroupEnabled(int group, boolean enabled) Enable or disable all menu items that are in the given group. abstract void setGroupVisible(int group, boolean visible) Show or hide all menu items that are in the given group. abstract void setQwertyMode(boolean isQwerty) Control whether the menu should be running in qwerty mode (alphabetic shortcuts) or 12-key mode (numeric shortcuts). abstract int size() Get the number of items in the menu.","abstract MenuItem add(CharSequence title) Add a new item to the menu.","abstract MenuItem add(int groupId, int itemId, int order, int titleRes) Variation on add(int, int, int, CharSequence) that takes a string resource identifier instead of the string itself.","abstract MenuItem add(int titleRes) Add a new item to the menu.","abstract MenuItem add(int groupId, int itemId, int order, CharSequence title) Add a new item to the menu.","abstract int addIntentOptions(int groupId, int itemId, int order, ComponentName caller, Intent[] specifics, Intent intent, int flags, MenuItem[] outSpecificItems) Add a group of menu items corresponding to actions that can be performed for a particular Intent.","abstract SubMenu addSubMenu(int groupId, int itemId, int order, CharSequence title) Add a new sub-menu to the menu.","abstract SubMenu addSubMenu(int groupId, int itemId, int order, int titleRes) Variation on addSubMenu(int, int, int, CharSequence) that takes a string resource identifier for the title instead of the string itself.","abstract SubMenu addSubMenu(CharSequence title) Add a new sub-menu to the menu.","abstract SubMenu addSubMenu(int titleRes) Add a new sub-menu to the menu.","abstract void clear() Remove all existing items from the menu, leaving it empty as if it had just been created.","abstract void close() Closes the menu, if open.","abstract MenuItem findItem(int id) Return the menu item with a particular identifier.","abstract MenuItem getItem(int index) Gets the menu item at the given index.","abstract boolean hasVisibleItems() Return whether the menu currently has item items that are visible.","abstract boolean isShortcutKey(int keyCode, KeyEvent event) Is a keypress one of the defined shortcut keys for this window.","abstract boolean performIdentifierAction(int id, int flags) Execute the menu item action associated with the given menu identifier.","abstract boolean performShortcut(int keyCode, KeyEvent event, int flags) Execute the menu item action associated with the given shortcut character.","abstract void removeGroup(int groupId) Remove all items in the given group.","abstract void removeItem(int id) Remove the item with the given identifier.","abstract void setGroupCheckable(int group, boolean checkable, boolean exclusive) Control whether a particular group of items can show a check mark.","abstract void setGroupEnabled(int group, boolean enabled) Enable or disable all menu items that are in the given group.","abstract void setGroupVisible(int group, boolean visible) Show or hide all menu items that are in the given group.","abstract void setQwertyMode(boolean isQwerty) Control whether the menu should be running in qwerty mode (alphabetic shortcuts) or 12-key mode (numeric shortcuts).","abstract int size() Get the number of items in the menu."],"package":"android.view","constants":["[Expand] Inherited Constants","From interface android.view.Menu int CATEGORY_ALTERNATIVE Category code for the order integer for items/groups that are alternative actions on the data that is currently displayed -- or/add this with your base value. int CATEGORY_CONTAINER Category code for the order integer for items/groups that are part of a container -- or/add this with your base value. int CATEGORY_SECONDARY Category code for the order integer for items/groups that are user-supplied secondary (infrequently used) options -- or/add this with your base value. int CATEGORY_SYSTEM Category code for the order integer for items/groups that are provided by the system -- or/add this with your base value. int FIRST First value for group and item identifier integers. int FLAG_ALWAYS_PERFORM_CLOSE Flag for performShortcut(int, KeyEvent, int): if set, always close the menu after executing the shortcut. int FLAG_APPEND_TO_GROUP Flag for addIntentOptions(int, int, int, ComponentName, Intent[], Intent, int, MenuItem[]): if set, do not automatically remove any existing menu items in the same group. int FLAG_PERFORM_NO_CLOSE Flag for performShortcut(int, KeyEvent, int): if set, do not close the menu after executing the shortcut. int NONE Value to use for group and item identifier integers when you don't care about them.","int CATEGORY_ALTERNATIVE Category code for the order integer for items/groups that are alternative actions on the data that is currently displayed -- or/add this with your base value.","int CATEGORY_CONTAINER Category code for the order integer for items/groups that are part of a container -- or/add this with your base value.","int CATEGORY_SECONDARY Category code for the order integer for items/groups that are user-supplied secondary (infrequently used) options -- or/add this with your base value.","int CATEGORY_SYSTEM Category code for the order integer for items/groups that are provided by the system -- or/add this with your base value.","int FIRST First value for group and item identifier integers.","int FLAG_ALWAYS_PERFORM_CLOSE Flag for performShortcut(int, KeyEvent, int): if set, always close the menu after executing the shortcut.","int FLAG_APPEND_TO_GROUP Flag for addIntentOptions(int, int, int, ComponentName, Intent[], Intent, int, MenuItem[]): if set, do not automatically remove any existing menu items in the same group.","int FLAG_PERFORM_NO_CLOSE Flag for performShortcut(int, KeyEvent, int): if set, do not close the menu after executing the shortcut.","int NONE Value to use for group and item identifier integers when you don't care about them."],"class":"ContextMenu","constructors":[],"fields":[]}