{"methods":["abstract boolean readBoolean() Reads a boolean.","abstract byte readByte() Reads an 8-bit byte value.","abstract char readChar() Reads a big-endian 16-bit character value.","abstract double readDouble() Reads a big-endian 64-bit double value.","abstract float readFloat() Reads a big-endian 32-bit float value.","abstract void readFully(byte[] dst) Equivalent to readFully(dst, 0, dst.length);.","abstract void readFully(byte[] dst, int offset, int byteCount) Reads byteCount bytes from this stream and stores them in the byte array dst starting at offset.","abstract int readInt() Reads a big-endian 32-bit integer value.","abstract String readLine() Returns a string containing the next line of text available from this stream.","abstract long readLong() Reads a big-endian 64-bit long value.","abstract short readShort() Reads a big-endian 16-bit short value.","abstract String readUTF() Reads a string encoded with modified UTF-8.","abstract int readUnsignedByte() Reads an unsigned 8-bit byte value and returns it as an int.","abstract int readUnsignedShort() Reads a big-endian 16-bit unsigned short value and returns it as an int.","abstract int skipBytes(int count) Skips count number of bytes."],"package":"java.io","constants":[],"class":"DataInput","constructors":[],"fields":[]}