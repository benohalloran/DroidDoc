{"methods":["final int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset.","final int read(byte[] buffer) Equivalent to read(buffer, 0, buffer.length).","final boolean readBoolean() Reads a boolean.","final byte readByte() Reads an 8-bit byte value.","final char readChar() Reads a big-endian 16-bit character value.","final double readDouble() Reads a big-endian 64-bit double value.","final float readFloat() Reads a big-endian 32-bit float value.","final void readFully(byte[] dst) Equivalent to readFully(dst, 0, dst.length);.","final void readFully(byte[] dst, int offset, int byteCount) Reads byteCount bytes from this stream and stores them in the byte array dst starting at offset.","final int readInt() Reads a big-endian 32-bit integer value.","final String readLine() This method was deprecated in API level 1. This method cannot be trusted to convert bytes to characters correctly. Wrap this stream with a BufferedReader instead.","final long readLong() Reads a big-endian 64-bit long value.","final short readShort() Reads a big-endian 16-bit short value.","final static String readUTF(DataInput in)","final String readUTF() Reads a string encoded with modified UTF-8.","final int readUnsignedByte() Reads an unsigned 8-bit byte value and returns it as an int.","final int readUnsignedShort() Reads a big-endian 16-bit unsigned short value and returns it as an int.","final int skipBytes(int count) Skips count number of bytes in this stream.","[Expand] Inherited Methods","From class java.io.FilterInputStream int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input. void close() Closes this stream. synchronized void mark(int readlimit) Sets a mark position in this stream. boolean markSupported() Indicates whether this stream supports mark() and reset(). int read() Reads a single byte from the filtered stream and returns it as an integer in the range from 0 to 255. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. synchronized void reset() Resets this stream to the last marked location. long skip(long byteCount) Skips byteCount bytes in this stream.","int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input.","void close() Closes this stream.","synchronized void mark(int readlimit) Sets a mark position in this stream.","boolean markSupported() Indicates whether this stream supports mark() and reset().","int read() Reads a single byte from the filtered stream and returns it as an integer in the range from 0 to 255.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset.","synchronized void reset() Resets this stream to the last marked location.","long skip(long byteCount) Skips byteCount bytes in this stream.","From class java.io.InputStream int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input. void close() Closes this stream. void mark(int readlimit) Sets a mark position in this InputStream. boolean markSupported() Indicates whether this stream supports the mark() and reset() methods. int read(byte[] buffer) Equivalent to read(buffer, 0, buffer.length). abstract int read() Reads a single byte from this stream and returns it as an integer in the range from 0 to 255. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. synchronized void reset() Resets this stream to the last marked location. long skip(long byteCount) Skips at most byteCount bytes in this stream.","int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input.","void close() Closes this stream.","void mark(int readlimit) Sets a mark position in this InputStream.","boolean markSupported() Indicates whether this stream supports the mark() and reset() methods.","int read(byte[] buffer) Equivalent to read(buffer, 0, buffer.length).","abstract int read() Reads a single byte from this stream and returns it as an integer in the range from 0 to 255.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset.","synchronized void reset() Resets this stream to the last marked location.","long skip(long byteCount) Skips at most byteCount bytes in this stream.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.io.Closeable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.io.DataInput abstract boolean readBoolean() Reads a boolean. abstract byte readByte() Reads an 8-bit byte value. abstract char readChar() Reads a big-endian 16-bit character value. abstract double readDouble() Reads a big-endian 64-bit double value. abstract float readFloat() Reads a big-endian 32-bit float value. abstract void readFully(byte[] dst) Equivalent to readFully(dst, 0, dst.length);. abstract void readFully(byte[] dst, int offset, int byteCount) Reads byteCount bytes from this stream and stores them in the byte array dst starting at offset. abstract int readInt() Reads a big-endian 32-bit integer value. abstract String readLine() Returns a string containing the next line of text available from this stream. abstract long readLong() Reads a big-endian 64-bit long value. abstract short readShort() Reads a big-endian 16-bit short value. abstract String readUTF() Reads a string encoded with modified UTF-8. abstract int readUnsignedByte() Reads an unsigned 8-bit byte value and returns it as an int. abstract int readUnsignedShort() Reads a big-endian 16-bit unsigned short value and returns it as an int. abstract int skipBytes(int count) Skips count number of bytes.","abstract boolean readBoolean() Reads a boolean.","abstract byte readByte() Reads an 8-bit byte value.","abstract char readChar() Reads a big-endian 16-bit character value.","abstract double readDouble() Reads a big-endian 64-bit double value.","abstract float readFloat() Reads a big-endian 32-bit float value.","abstract void readFully(byte[] dst) Equivalent to readFully(dst, 0, dst.length);.","abstract void readFully(byte[] dst, int offset, int byteCount) Reads byteCount bytes from this stream and stores them in the byte array dst starting at offset.","abstract int readInt() Reads a big-endian 32-bit integer value.","abstract String readLine() Returns a string containing the next line of text available from this stream.","abstract long readLong() Reads a big-endian 64-bit long value.","abstract short readShort() Reads a big-endian 16-bit short value.","abstract String readUTF() Reads a string encoded with modified UTF-8.","abstract int readUnsignedByte() Reads an unsigned 8-bit byte value and returns it as an int.","abstract int readUnsignedShort() Reads a big-endian 16-bit unsigned short value and returns it as an int.","abstract int skipBytes(int count) Skips count number of bytes.","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds."],"package":"java.io","constants":[],"class":"DataInputStream","constructors":[],"fields":[]}