{"methods":["static void changeDebugPort(int port) This method was deprecated in API level 3. no longer needed or useful","static void dumpHprofData(String fileName) Dump \"hprof\" data to the specified file.","static boolean dumpService(String name, FileDescriptor fd, String[] args) Get a debugging dump of a system service by name.","static void enableEmulatorTraceOutput() Enable \"emulator traces\", in which information about the current method is made available to the \"emulator -trace\" feature.","final static int getBinderDeathObjectCount() Returns the number of death notification links to Binder objects that exist in the current process.","final static int getBinderLocalObjectCount() Returns the number of active local Binder objects that exist in the current process.","final static int getBinderProxyObjectCount() Returns the number of references to remote proxy Binder objects that exist in the current process.","static int getBinderReceivedTransactions() Returns the number of received transactions from the binder driver.","static int getBinderSentTransactions() Returns the number of sent transactions from this process.","static int getGlobalAllocCount() Returns the global count of objects allocated by the runtime between a start and stop.","static int getGlobalAllocSize() Returns the global size, in bytes, of objects allocated by the runtime between a start and stop.","static int getGlobalClassInitCount() Returns the number of classes successfully initialized (ie those that executed without throwing an exception) between a start and stop.","static int getGlobalClassInitTime() Returns the time spent successfully initializing classes between a start and stop.","static int getGlobalExternalAllocCount() This method was deprecated in API level 11. This method is now obsolete.","static int getGlobalExternalAllocSize() This method was deprecated in API level 11. This method is now obsolete.","static int getGlobalExternalFreedCount() This method was deprecated in API level 11. This method is now obsolete.","static int getGlobalExternalFreedSize() This method was deprecated in API level 11. This method is now obsolete.","static int getGlobalFreedCount() Returns the global count of objects freed by the runtime between a start and stop.","static int getGlobalFreedSize() Returns the global size, in bytes, of objects freed by the runtime between a start and stop.","static int getGlobalGcInvocationCount() Returns the number of non-concurrent GC invocations between a start and stop.","static int getLoadedClassCount() Get the number of loaded classes.","static void getMemoryInfo(Debug.MemoryInfo memoryInfo) Retrieves information about this processes memory usages.","static long getNativeHeapAllocatedSize() Returns the amount of allocated memory in the native heap.","static long getNativeHeapFreeSize() Returns the amount of free memory in the native heap.","static long getNativeHeapSize() Returns the size of the native heap.","static long getPss() Retrieves the PSS memory used by the process as given by the smaps.","static int getThreadAllocCount() Returns the thread-local count of objects allocated by the runtime between a start and stop.","static int getThreadAllocSize() Returns the thread-local size of objects allocated by the runtime between a start and stop.","static int getThreadExternalAllocCount() This method was deprecated in API level 11. This method is now obsolete.","static int getThreadExternalAllocSize() This method was deprecated in API level 11. This method is now obsolete.","static int getThreadGcInvocationCount() Returns the number of thread-local non-concurrent GC invocations between a start and stop.","static boolean isDebuggerConnected() Determine if a debugger is currently attached.","static void printLoadedClasses(int flags) Dump a list of all currently loaded class to the log file.","static void resetAllCounts() Clears all the global and thread-local memory allocation counters.","static void resetGlobalAllocCount() Clears the global count of objects allocated.","static void resetGlobalAllocSize() Clears the global size of objects allocated.","static void resetGlobalClassInitCount() Clears the count of classes initialized.","static void resetGlobalClassInitTime() Clears the count of time spent initializing classes.","static void resetGlobalExternalAllocCount() This method was deprecated in API level 11. This method is now obsolete.","static void resetGlobalExternalAllocSize() This method was deprecated in API level 11. This method is now obsolete.","static void resetGlobalExternalFreedCount() This method was deprecated in API level 11. This method is now obsolete.","static void resetGlobalExternalFreedSize() This method was deprecated in API level 11. This method is now obsolete.","static void resetGlobalFreedCount() Clears the global count of objects freed.","static void resetGlobalFreedSize() Clears the global size of objects freed.","static void resetGlobalGcInvocationCount() Clears the count of non-concurrent GC invocations.","static void resetThreadAllocCount() Clears the thread-local count of objects allocated.","static void resetThreadAllocSize() Clears the thread-local count of objects allocated.","static void resetThreadExternalAllocCount() This method was deprecated in API level 11. This method is now obsolete.","static void resetThreadExternalAllocSize() This method was deprecated in API level 11. This method is now obsolete.","static void resetThreadGcInvocationCount() Clears the thread-local count of non-concurrent GC invocations.","static int setAllocationLimit(int limit) This method was deprecated in API level 11. This method is now obsolete.","static int setGlobalAllocationLimit(int limit) This method was deprecated in API level 11. This method is now obsolete.","static void startAllocCounting() This method was deprecated in API level 18. Accurate counting is a burden on the runtime and may be removed.","static void startMethodTracing(String traceName) Start method tracing, specifying the trace log file name.","static void startMethodTracing() Start method tracing with default log name and buffer size.","static void startMethodTracing(String traceName, int bufferSize, int flags) Start method tracing, specifying the trace log file name and the buffer size.","static void startMethodTracing(String traceName, int bufferSize) Start method tracing, specifying the trace log file name and the buffer size.","static void startMethodTracingSampling(String traceName, int bufferSize, int intervalUs) Start sampling-based method tracing, specifying the trace log file name, the buffer size, and the sampling interval.","static void startNativeTracing() Enable qemu tracing.","static void stopAllocCounting() Stop counting the number and aggregate size of memory allocations.","static void stopMethodTracing() Stop method tracing.","static void stopNativeTracing() Stop qemu tracing.","static long threadCpuTimeNanos() Get an indication of thread CPU usage.","static void waitForDebugger() Wait until a debugger attaches.","static boolean waitingForDebugger() Returns \"true\" if one or more threads is waiting for a debugger to attach.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.os","constants":["int SHOW_CLASSLOADER","int SHOW_FULL_DETAIL Flags for printLoadedClasses().","int SHOW_INITIALIZED","int TRACE_COUNT_ALLOCS Flags for startMethodTracing()."],"class":"Debug","constructors":[],"fields":[]}