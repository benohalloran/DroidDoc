{"methods":["Object clone() Creates and returns a copy of this Object.","boolean equals(Object object) Compares the specified object to this DecimalFormatSymbols and indicates if they are equal.","static Locale[] getAvailableLocales() Returns an array of locales for which custom DecimalFormatSymbols instances are available.","Currency getCurrency() Returns the currency.","String getCurrencySymbol() Returns the currency symbol.","char getDecimalSeparator() Returns the character which represents the decimal point in a number.","char getDigit() Returns the character which represents a single digit in a format pattern.","String getExponentSeparator()","char getGroupingSeparator() Returns the character used as the thousands separator in a number.","String getInfinity() Returns the string which represents infinity.","static DecimalFormatSymbols getInstance(Locale locale) Returns a new DecimalFormatSymbols for the given locale.","static DecimalFormatSymbols getInstance() Returns a new DecimalFormatSymbols instance for the user's default locale.","String getInternationalCurrencySymbol() Returns the international currency symbol.","char getMinusSign() Returns the minus sign character.","char getMonetaryDecimalSeparator() Returns the character which represents the decimal point in a monetary value.","String getNaN() Returns the string which represents NaN.","char getPatternSeparator() Returns the character which separates the positive and negative patterns in a format pattern.","char getPerMill() Returns the per mill sign character.","char getPercent() Returns the percent character.","char getZeroDigit() Returns the character which represents zero.","int hashCode() Returns an integer hash code for this object.","void setCurrency(Currency currency) Sets the currency.","void setCurrencySymbol(String value) Sets the currency symbol.","void setDecimalSeparator(char value) Sets the character which represents the decimal point in a number.","void setDigit(char value) Sets the character which represents a single digit in a format pattern.","void setExponentSeparator(String value) Sets the string used to separate mantissa and exponent.","void setGroupingSeparator(char value) Sets the character used as the thousands separator in a number.","void setInfinity(String value) Sets the string which represents infinity.","void setInternationalCurrencySymbol(String value) Sets the international currency symbol.","void setMinusSign(char value) Sets the minus sign character.","void setMonetaryDecimalSeparator(char value) Sets the character which represents the decimal point in a monetary value.","void setNaN(String value) Sets the string which represents NaN.","void setPatternSeparator(char value) Sets the character which separates the positive and negative patterns in a format pattern.","void setPerMill(char value) Sets the per mill sign character.","void setPercent(char value) Sets the percent character.","void setZeroDigit(char value) Sets the character which represents zero.","String toString() Returns a string containing a concise, human-readable description of this object.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.text","constants":[],"class":"DecimalFormatSymbols","constructors":[],"fields":[]}