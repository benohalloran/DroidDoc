{"methods":["OperatedClientConnection createConnection() Creates a new connection that can be operated.","void openConnection(OperatedClientConnection conn, HttpHost target, InetAddress local, HttpContext context, HttpParams params) Opens a connection to the given target host.","void updateSecureConnection(OperatedClientConnection conn, HttpHost target, HttpContext context, HttpParams params) Updates a connection with a layered secure connection.","void prepareSocket(Socket sock, HttpContext context, HttpParams params) Performs standard initializations on a newly created socket.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.conn.ClientConnectionOperator abstract OperatedClientConnection createConnection() Creates a new connection that can be operated. abstract void openConnection(OperatedClientConnection conn, HttpHost target, InetAddress local, HttpContext context, HttpParams params) Opens a connection to the given target host. abstract void updateSecureConnection(OperatedClientConnection conn, HttpHost target, HttpContext context, HttpParams params) Updates a connection with a layered secure connection.","abstract OperatedClientConnection createConnection() Creates a new connection that can be operated.","abstract void openConnection(OperatedClientConnection conn, HttpHost target, InetAddress local, HttpContext context, HttpParams params) Opens a connection to the given target host.","abstract void updateSecureConnection(OperatedClientConnection conn, HttpHost target, HttpContext context, HttpParams params) Updates a connection with a layered secure connection."],"package":"org.apache.http.impl.conn","constants":[],"class":"DefaultClientConnectionOperator","constructors":[],"fields":["protected SchemeRegistry schemeRegistry The scheme registry for looking up socket factories."]}