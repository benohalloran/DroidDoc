{"methods":["void attributeDecl(String eName, String aName, String type, String mode, String value) Report an attribute type declaration.","void comment(char[] ch, int start, int length) Report an XML comment anywhere in the document.","void elementDecl(String name, String model) Report an element type declaration.","void endCDATA() Report the end of a CDATA section.","void endDTD() Report the end of DTD declarations.","void endEntity(String name) Report the end of an entity.","void externalEntityDecl(String name, String publicId, String systemId) Report a parsed external entity declaration.","InputSource getExternalSubset(String name, String baseURI) Tells the parser that if no external subset has been declared in the document text, none should be used.","void internalEntityDecl(String name, String value) Report an internal entity declaration.","InputSource resolveEntity(String publicId, String systemId) Invokes EntityResolver2.resolveEntity() with null entity name and base URI.","InputSource resolveEntity(String name, String publicId, String baseURI, String systemId) Tells the parser to resolve the systemId against the baseURI and read the entity text from that resulting absolute URI.","void startCDATA() Report the start of a CDATA section.","void startDTD(String name, String publicId, String systemId) Report the start of DTD declarations, if any.","void startEntity(String name) Report the beginning of some internal and external XML entities.","[Expand] Inherited Methods","From class org.xml.sax.helpers.DefaultHandler void characters(char[] ch, int start, int length) Receive notification of character data inside an element. void endDocument() Receive notification of the end of the document. void endElement(String uri, String localName, String qName) Receive notification of the end of an element. void endPrefixMapping(String prefix) Receive notification of the end of a Namespace mapping. void error(SAXParseException e) Receive notification of a recoverable parser error. void fatalError(SAXParseException e) Report a fatal XML parsing error. void ignorableWhitespace(char[] ch, int start, int length) Receive notification of ignorable whitespace in element content. void notationDecl(String name, String publicId, String systemId) Receive notification of a notation declaration. void processingInstruction(String target, String data) Receive notification of a processing instruction. InputSource resolveEntity(String publicId, String systemId) Resolve an external entity. void setDocumentLocator(Locator locator) Receive a Locator object for document events. void skippedEntity(String name) Receive notification of a skipped entity. void startDocument() Receive notification of the beginning of the document. void startElement(String uri, String localName, String qName, Attributes attributes) Receive notification of the start of an element. void startPrefixMapping(String prefix, String uri) Receive notification of the start of a Namespace mapping. void unparsedEntityDecl(String name, String publicId, String systemId, String notationName) Receive notification of an unparsed entity declaration. void warning(SAXParseException e) Receive notification of a parser warning.","void characters(char[] ch, int start, int length) Receive notification of character data inside an element.","void endDocument() Receive notification of the end of the document.","void endElement(String uri, String localName, String qName) Receive notification of the end of an element.","void endPrefixMapping(String prefix) Receive notification of the end of a Namespace mapping.","void error(SAXParseException e) Receive notification of a recoverable parser error.","void fatalError(SAXParseException e) Report a fatal XML parsing error.","void ignorableWhitespace(char[] ch, int start, int length) Receive notification of ignorable whitespace in element content.","void notationDecl(String name, String publicId, String systemId) Receive notification of a notation declaration.","void processingInstruction(String target, String data) Receive notification of a processing instruction.","InputSource resolveEntity(String publicId, String systemId) Resolve an external entity.","void setDocumentLocator(Locator locator) Receive a Locator object for document events.","void skippedEntity(String name) Receive notification of a skipped entity.","void startDocument() Receive notification of the beginning of the document.","void startElement(String uri, String localName, String qName, Attributes attributes) Receive notification of the start of an element.","void startPrefixMapping(String prefix, String uri) Receive notification of the start of a Namespace mapping.","void unparsedEntityDecl(String name, String publicId, String systemId, String notationName) Receive notification of an unparsed entity declaration.","void warning(SAXParseException e) Receive notification of a parser warning.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.xml.sax.ContentHandler abstract void characters(char[] ch, int start, int length) Receive notification of character data. abstract void endDocument() Receive notification of the end of a document. abstract void endElement(String uri, String localName, String qName) Receive notification of the end of an element. abstract void endPrefixMapping(String prefix) End the scope of a prefix-URI mapping. abstract void ignorableWhitespace(char[] ch, int start, int length) Receive notification of ignorable whitespace in element content. abstract void processingInstruction(String target, String data) Receive notification of a processing instruction. abstract void setDocumentLocator(Locator locator) Receive an object for locating the origin of SAX document events. abstract void skippedEntity(String name) Receive notification of a skipped entity. abstract void startDocument() Receive notification of the beginning of a document. abstract void startElement(String uri, String localName, String qName, Attributes atts) Receive notification of the beginning of an element. abstract void startPrefixMapping(String prefix, String uri) Begin the scope of a prefix-URI Namespace mapping.","abstract void characters(char[] ch, int start, int length) Receive notification of character data.","abstract void endDocument() Receive notification of the end of a document.","abstract void endElement(String uri, String localName, String qName) Receive notification of the end of an element.","abstract void endPrefixMapping(String prefix) End the scope of a prefix-URI mapping.","abstract void ignorableWhitespace(char[] ch, int start, int length) Receive notification of ignorable whitespace in element content.","abstract void processingInstruction(String target, String data) Receive notification of a processing instruction.","abstract void setDocumentLocator(Locator locator) Receive an object for locating the origin of SAX document events.","abstract void skippedEntity(String name) Receive notification of a skipped entity.","abstract void startDocument() Receive notification of the beginning of a document.","abstract void startElement(String uri, String localName, String qName, Attributes atts) Receive notification of the beginning of an element.","abstract void startPrefixMapping(String prefix, String uri) Begin the scope of a prefix-URI Namespace mapping.","From interface org.xml.sax.DTDHandler abstract void notationDecl(String name, String publicId, String systemId) Receive notification of a notation declaration event. abstract void unparsedEntityDecl(String name, String publicId, String systemId, String notationName) Receive notification of an unparsed entity declaration event.","abstract void notationDecl(String name, String publicId, String systemId) Receive notification of a notation declaration event.","abstract void unparsedEntityDecl(String name, String publicId, String systemId, String notationName) Receive notification of an unparsed entity declaration event.","From interface org.xml.sax.EntityResolver abstract InputSource resolveEntity(String publicId, String systemId) Allow the application to resolve external entities.","abstract InputSource resolveEntity(String publicId, String systemId) Allow the application to resolve external entities.","From interface org.xml.sax.ErrorHandler abstract void error(SAXParseException exception) Receive notification of a recoverable error. abstract void fatalError(SAXParseException exception) Receive notification of a non-recoverable error. abstract void warning(SAXParseException exception) Receive notification of a warning.","abstract void error(SAXParseException exception) Receive notification of a recoverable error.","abstract void fatalError(SAXParseException exception) Receive notification of a non-recoverable error.","abstract void warning(SAXParseException exception) Receive notification of a warning.","From interface org.xml.sax.ext.DeclHandler abstract void attributeDecl(String eName, String aName, String type, String mode, String value) Report an attribute type declaration. abstract void elementDecl(String name, String model) Report an element type declaration. abstract void externalEntityDecl(String name, String publicId, String systemId) Report a parsed external entity declaration. abstract void internalEntityDecl(String name, String value) Report an internal entity declaration.","abstract void attributeDecl(String eName, String aName, String type, String mode, String value) Report an attribute type declaration.","abstract void elementDecl(String name, String model) Report an element type declaration.","abstract void externalEntityDecl(String name, String publicId, String systemId) Report a parsed external entity declaration.","abstract void internalEntityDecl(String name, String value) Report an internal entity declaration.","From interface org.xml.sax.ext.EntityResolver2 abstract InputSource getExternalSubset(String name, String baseURI) Allows applications to provide an external subset for documents that don't explicitly define one. abstract InputSource resolveEntity(String name, String publicId, String baseURI, String systemId) Allows applications to map references to external entities into input sources, or tell the parser it should use conventional URI resolution.","abstract InputSource getExternalSubset(String name, String baseURI) Allows applications to provide an external subset for documents that don't explicitly define one.","abstract InputSource resolveEntity(String name, String publicId, String baseURI, String systemId) Allows applications to map references to external entities into input sources, or tell the parser it should use conventional URI resolution.","From interface org.xml.sax.ext.LexicalHandler abstract void comment(char[] ch, int start, int length) Report an XML comment anywhere in the document. abstract void endCDATA() Report the end of a CDATA section. abstract void endDTD() Report the end of DTD declarations. abstract void endEntity(String name) Report the end of an entity. abstract void startCDATA() Report the start of a CDATA section. abstract void startDTD(String name, String publicId, String systemId) Report the start of DTD declarations, if any. abstract void startEntity(String name) Report the beginning of some internal and external XML entities.","abstract void comment(char[] ch, int start, int length) Report an XML comment anywhere in the document.","abstract void endCDATA() Report the end of a CDATA section.","abstract void endDTD() Report the end of DTD declarations.","abstract void endEntity(String name) Report the end of an entity.","abstract void startCDATA() Report the start of a CDATA section.","abstract void startDTD(String name, String publicId, String systemId) Report the start of DTD declarations, if any.","abstract void startEntity(String name) Report the beginning of some internal and external XML entities."],"package":"org.xml.sax.ext","constants":[],"class":"DefaultHandler2","constructors":[],"fields":[]}