{"methods":["int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","void dump(Printer pw, String prefix)","ActivityInfo getActivityInfo() Return the raw information about the receiver implementing this device admin.","ComponentName getComponent() Return the component of the receiver that implements this device admin.","String getPackageName() Return the .apk package that implements this device admin.","String getReceiverName() Return the class name of the receiver component that implements this device admin.","String getTagForPolicy(int policyIdent) Return the XML tag name for the given policy identifier.","boolean isVisible() Returns whether this device admin would like to be visible to the user, even when it is not enabled.","CharSequence loadDescription(PackageManager pm) Load user-visible description associated with this device admin.","Drawable loadIcon(PackageManager pm) Load the user-displayed icon for this device admin.","CharSequence loadLabel(PackageManager pm) Load the user-displayed label for this device admin.","String toString() Returns a string containing a concise, human-readable description of this object.","boolean usesPolicy(int policyIdent) Return true if the device admin has requested that it be able to use the given policy control.","void writeToParcel(Parcel dest, int flags) Used to package this object into a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.app.admin","constants":["int USES_ENCRYPTED_STORAGE A type of policy that this device admin can use: require encryption of stored data.","int USES_POLICY_DISABLE_CAMERA A type of policy that this device admin can use: disables use of all device cameras.","int USES_POLICY_DISABLE_KEYGUARD_FEATURES A type of policy that this device admin can use: disables use of keyguard features.","int USES_POLICY_EXPIRE_PASSWORD A type of policy that this device admin can use: force the user to change their password after an administrator-defined time limit.","int USES_POLICY_FORCE_LOCK A type of policy that this device admin can use: able to force the device to lock vialockNow() or limit the maximum lock timeout for the device via setMaximumTimeToLock(ComponentName, long).","int USES_POLICY_LIMIT_PASSWORD A type of policy that this device admin can use: limit the passwords that the user can select, via setPasswordQuality(ComponentName, int) and setPasswordMinimumLength(ComponentName, int).","int USES_POLICY_RESET_PASSWORD A type of policy that this device admin can use: able to reset the user's password via resetPassword(String, int).","int USES_POLICY_WATCH_LOGIN A type of policy that this device admin can use: able to watch login attempts from the user, via ACTION_PASSWORD_FAILED, ACTION_PASSWORD_SUCCEEDED, and getCurrentFailedPasswordAttempts().","int USES_POLICY_WIPE_DATA A type of policy that this device admin can use: able to factory reset the device, erasing all of the user's data, via wipeData(int).","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"DeviceAdminInfo","constructors":[],"fields":["public static final Creator<DeviceAdminInfo> CREATOR Used to make this class parcelable."]}