{"methods":["byte byteValue() Returns this object's value as a byte.","static int compare(double double1, double double2) Compares the two specified double values.","int compareTo(Double object) Compares this object to the specified double object to determine their relative order.","static long doubleToLongBits(double value) Returns an integer corresponding to the bits of the given IEEE 754 double precision value.","static long doubleToRawLongBits(double value) Returns an integer corresponding to the bits of the given IEEE 754 double precision value.","double doubleValue() Gets the primitive value of this double.","boolean equals(Object object) Tests this double for equality with object.","float floatValue() Returns this object's value as a float.","int hashCode() Returns an integer hash code for this object.","int intValue() Returns this object's value as an int.","static boolean isInfinite(double d) Indicates whether the specified double represents an infinite value.","boolean isInfinite() Indicates whether this object represents an infinite value.","boolean isNaN() Indicates whether this object is a Not-a-Number (NaN) value.","static boolean isNaN(double d) Indicates whether the specified double is a Not-a-Number (NaN) value.","static double longBitsToDouble(long bits) Returns the IEEE 754 double precision float corresponding to the given bits.","long longValue() Returns this object's value as a long.","static double parseDouble(String string) Parses the specified string as a double value.","short shortValue() Returns this object's value as a short.","static String toHexString(double d) Converts the specified double into its hexadecimal string representation.","static String toString(double d) Returns a string containing a concise, human-readable description of the specified double value.","String toString() Returns a string containing a concise, human-readable description of this object.","static Double valueOf(String string) Parses the specified string as a double value.","static Double valueOf(double d) Returns a Double instance for the specified double value.","[Expand] Inherited Methods","From class java.lang.Number byte byteValue() Returns this object's value as a byte. abstract double doubleValue() Returns this object's value as a double. abstract float floatValue() Returns this object's value as a float. abstract int intValue() Returns this object's value as an int. abstract long longValue() Returns this object's value as a long. short shortValue() Returns this object's value as a short.","byte byteValue() Returns this object's value as a byte.","abstract double doubleValue() Returns this object's value as a double.","abstract float floatValue() Returns this object's value as a float.","abstract int intValue() Returns this object's value as an int.","abstract long longValue() Returns this object's value as a long.","short shortValue() Returns this object's value as a short.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order."],"package":"java.lang","constants":["int MAX_EXPONENT Maximum base-2 exponent that a finite value of the double type may have.","double MAX_VALUE Constant for the maximum double value, (2 - 2-52) * 21023.","int MIN_EXPONENT Minimum base-2 exponent that a normal value of the double type may have.","double MIN_NORMAL Constant for the smallest positive normal value of the double type.","double MIN_VALUE Constant for the minimum double value, 2-1074.","double NEGATIVE_INFINITY Constant for the negative infinity value of the double type.","double NaN Constant for the Not-a-Number (NaN) value of the double type.","double POSITIVE_INFINITY Constant for the positive infinity value of the double type.","int SIZE Constant for the number of bits needed to represent a double in two's complement form."],"class":"Double","constructors":[],"fields":["public static final Class<Double> TYPE The Class object that represents the primitive type double."]}