{"methods":["[Expand] Inherited Methods","From class android.drm.DrmEvent Object getAttribute(String key) Retrieves the attribute associated with the specified key. String getMessage() Retrieves the message description associated with this object. int getType() Retrieves the type of information that is associated with this object. int getUniqueId() Retrieves the unique session identifier associated with this object.","Object getAttribute(String key) Retrieves the attribute associated with the specified key.","String getMessage() Retrieves the message description associated with this object.","int getType() Retrieves the type of information that is associated with this object.","int getUniqueId() Retrieves the unique session identifier associated with this object.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.drm","constants":["int TYPE_ACQUIRE_DRM_INFO_FAILED Failed to acquire DrmInfo.","int TYPE_NOT_SUPPORTED Response from the server cannot be handled by the DRM plug-in (agent).","int TYPE_NO_INTERNET_CONNECTION An Internet connection is not available and no attempt can be made to renew rights.","int TYPE_OUT_OF_MEMORY Memory allocation failed during renewal.","int TYPE_PROCESS_DRM_INFO_FAILED Failed to process DrmInfo.","int TYPE_REMOVE_ALL_RIGHTS_FAILED Failed to remove all the rights objects associated with all DRM schemes.","int TYPE_RIGHTS_NOT_INSTALLED Something went wrong installing the rights.","int TYPE_RIGHTS_RENEWAL_NOT_ALLOWED The server rejected the renewal of rights.","[Expand] Inherited Constants","From class android.drm.DrmEvent String DRM_INFO_OBJECT The key that is used in the attributes HashMap to pass the DrmInfo object. String DRM_INFO_STATUS_OBJECT The key that is used in the attributes HashMap to pass the return status. int TYPE_ALL_RIGHTS_REMOVED All of the rights information associated with all DRM schemes have been successfully removed. int TYPE_DRM_INFO_PROCESSED The given DRM information has been successfully processed.","String DRM_INFO_OBJECT The key that is used in the attributes HashMap to pass the DrmInfo object.","String DRM_INFO_STATUS_OBJECT The key that is used in the attributes HashMap to pass the return status.","int TYPE_ALL_RIGHTS_REMOVED All of the rights information associated with all DRM schemes have been successfully removed.","int TYPE_DRM_INFO_PROCESSED The given DRM information has been successfully processed."],"class":"DrmErrorEvent","constructors":[],"fields":[]}