{"methods":["void draw(Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint)","abstract Drawable getDrawable() Your subclass must implement this method to provide the bitmap to be drawn.","int getSize(Paint paint, CharSequence text, int start, int end, Paint.FontMetricsInt fm)","int getVerticalAlignment() Returns the vertical alignment of this span, one of ALIGN_BOTTOM or ALIGN_BASELINE.","[Expand] Inherited Methods","From class android.text.style.ReplacementSpan abstract void draw(Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint) abstract int getSize(Paint paint, CharSequence text, int start, int end, Paint.FontMetricsInt fm) void updateDrawState(TextPaint ds) This method does nothing, since ReplacementSpans are drawn explicitly instead of affecting Paint properties. void updateMeasureState(TextPaint p) This method does nothing, since ReplacementSpans are measured explicitly instead of affecting Paint properties.","abstract void draw(Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint)","abstract int getSize(Paint paint, CharSequence text, int start, int end, Paint.FontMetricsInt fm)","void updateDrawState(TextPaint ds) This method does nothing, since ReplacementSpans are drawn explicitly instead of affecting Paint properties.","void updateMeasureState(TextPaint p) This method does nothing, since ReplacementSpans are measured explicitly instead of affecting Paint properties.","From class android.text.style.MetricAffectingSpan MetricAffectingSpan getUnderlying() Returns \"this\" for most MetricAffectingSpans, but for MetricAffectingSpans that were generated by wrap(CharacterStyle), returns the underlying MetricAffectingSpan. abstract void updateMeasureState(TextPaint p)","MetricAffectingSpan getUnderlying() Returns \"this\" for most MetricAffectingSpans, but for MetricAffectingSpans that were generated by wrap(CharacterStyle), returns the underlying MetricAffectingSpan.","abstract void updateMeasureState(TextPaint p)","From class android.text.style.CharacterStyle CharacterStyle getUnderlying() Returns \"this\" for most CharacterStyles, but for CharacterStyles that were generated by wrap(CharacterStyle), returns the underlying CharacterStyle. abstract void updateDrawState(TextPaint tp) static CharacterStyle wrap(CharacterStyle cs) A given CharacterStyle can only applied to a single region of a given Spanned.","CharacterStyle getUnderlying() Returns \"this\" for most CharacterStyles, but for CharacterStyles that were generated by wrap(CharacterStyle), returns the underlying CharacterStyle.","abstract void updateDrawState(TextPaint tp)","static CharacterStyle wrap(CharacterStyle cs) A given CharacterStyle can only applied to a single region of a given Spanned.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.text.style","constants":["int ALIGN_BASELINE A constant indicating that the bottom of this span should be aligned with the baseline of the surrounding text.","int ALIGN_BOTTOM A constant indicating that the bottom of this span should be aligned with the bottom of the surrounding text, i.e., at the same level as the lowest descender in the text."],"class":"DynamicDrawableSpan","constructors":[],"fields":["protected final int mVerticalAlignment"]}