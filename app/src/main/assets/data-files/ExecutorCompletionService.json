{"methods":["Future<V> poll() Retrieves and removes the Future representing the next completed task, or null if none are present.","Future<V> poll(long timeout, TimeUnit unit) Retrieves and removes the Future representing the next completed task, waiting if necessary up to the specified wait time if none are yet present.","Future<V> submit(Callable<V> task) Submits a value-returning task for execution and returns a Future representing the pending results of the task.","Future<V> submit(Runnable task, V result) Submits a Runnable task for execution and returns a Future representing that task.","Future<V> take() Retrieves and removes the Future representing the next completed task, waiting if none are yet present.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.util.concurrent.CompletionService abstract Future<V> poll() Retrieves and removes the Future representing the next completed task, or null if none are present. abstract Future<V> poll(long timeout, TimeUnit unit) Retrieves and removes the Future representing the next completed task, waiting if necessary up to the specified wait time if none are yet present. abstract Future<V> submit(Callable<V> task) Submits a value-returning task for execution and returns a Future representing the pending results of the task. abstract Future<V> submit(Runnable task, V result) Submits a Runnable task for execution and returns a Future representing that task. abstract Future<V> take() Retrieves and removes the Future representing the next completed task, waiting if none are yet present.","abstract Future<V> poll() Retrieves and removes the Future representing the next completed task, or null if none are present.","abstract Future<V> poll(long timeout, TimeUnit unit) Retrieves and removes the Future representing the next completed task, waiting if necessary up to the specified wait time if none are yet present.","abstract Future<V> submit(Callable<V> task) Submits a value-returning task for execution and returns a Future representing the pending results of the task.","abstract Future<V> submit(Runnable task, V result) Submits a Runnable task for execution and returns a Future representing that task.","abstract Future<V> take() Retrieves and removes the Future representing the next completed task, waiting if none are yet present."],"package":"java.util.concurrent","constants":[],"class":"ExecutorCompletionService","constructors":[],"fields":[]}