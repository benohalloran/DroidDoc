{"methods":["boolean dispatchHoverEvent(MotionEvent event) Dispatches hover MotionEvents to the virtual view hierarchy when the Explore by Touch feature is enabled.","AccessibilityNodeProviderCompat getAccessibilityNodeProvider(View host) Returns the AccessibilityNodeProviderCompat for this helper.","int getFocusedVirtualView() Returns the virtual view id for the currently focused item,","void invalidateRoot() Notifies the accessibility framework that the properties of the parent view have changed.","void invalidateVirtualView(int virtualViewId) Notifies the accessibility framework that the properties of a particular item have changed.","boolean sendEventForVirtualView(int virtualViewId, int eventType) Populates an event of the specified type with information about an item and attempts to send it up through the view hierarchy.","abstract int getVirtualViewAt(float x, float y) Provides a mapping between view-relative coordinates and logical items.","abstract void getVisibleVirtualViews(List<Integer> virtualViewIds) Populates a list with the view's visible items.","abstract boolean onPerformActionForVirtualView(int virtualViewId, int action, Bundle arguments) Performs the specified accessibility action on the item associated with the virtual view identifier.","abstract void onPopulateEventForVirtualView(int virtualViewId, AccessibilityEvent event) Populates an AccessibilityEvent with information about the specified item.","abstract void onPopulateNodeForVirtualView(int virtualViewId, AccessibilityNodeInfoCompat node) Populates an AccessibilityNodeInfoCompat with information about the specified item.","[Expand] Inherited Methods","From class android.support.v4.view.AccessibilityDelegateCompat boolean dispatchPopulateAccessibilityEvent(View host, AccessibilityEvent event) Dispatches an AccessibilityEvent to the host View first and then to its children for adding their text content to the event. AccessibilityNodeProviderCompat getAccessibilityNodeProvider(View host) Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content. void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) Initializes an AccessibilityEvent with information about the the host View which is the event source. void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) Initializes an AccessibilityNodeInfoCompat with information about the host view. void onPopulateAccessibilityEvent(View host, AccessibilityEvent event) Gives a chance to the host View to populate the accessibility event with its text content. boolean onRequestSendAccessibilityEvent(ViewGroup host, View child, AccessibilityEvent event) Called when a child of the host View has requested sending an AccessibilityEvent and gives an opportunity to the parent (the host) to augment the event. boolean performAccessibilityAction(View host, int action, Bundle args) Performs the specified accessibility action on the view. void sendAccessibilityEvent(View host, int eventType) Sends an accessibility event of the given type. void sendAccessibilityEventUnchecked(View host, AccessibilityEvent event) Sends an accessibility event.","boolean dispatchPopulateAccessibilityEvent(View host, AccessibilityEvent event) Dispatches an AccessibilityEvent to the host View first and then to its children for adding their text content to the event.","AccessibilityNodeProviderCompat getAccessibilityNodeProvider(View host) Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content.","void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) Initializes an AccessibilityEvent with information about the the host View which is the event source.","void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) Initializes an AccessibilityNodeInfoCompat with information about the host view.","void onPopulateAccessibilityEvent(View host, AccessibilityEvent event) Gives a chance to the host View to populate the accessibility event with its text content.","boolean onRequestSendAccessibilityEvent(ViewGroup host, View child, AccessibilityEvent event) Called when a child of the host View has requested sending an AccessibilityEvent and gives an opportunity to the parent (the host) to augment the event.","boolean performAccessibilityAction(View host, int action, Bundle args) Performs the specified accessibility action on the view.","void sendAccessibilityEvent(View host, int eventType) Sends an accessibility event of the given type.","void sendAccessibilityEventUnchecked(View host, AccessibilityEvent event) Sends an accessibility event.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v4.widget","constants":["int INVALID_ID Virtual node identifier value for invalid nodes."],"class":"ExploreByTouchHelper","constructors":[],"fields":[]}