{"methods":["boolean equals(Object other) Returns true if other has the same declaring class, name and type as this field.","Object get(Object object) Returns the value of the field in the specified object.","<A만xtendsㅁnnotation> A getAnnotation(Class<A> annotationType) Returns, for this element, the annotation with the specified type, or null if no annotation with the specified type is present (including inherited annotations).","boolean getBoolean(Object object) Returns the value of the field in the specified object as a boolean.","byte getByte(Object object) Returns the value of the field in the specified object as a byte.","char getChar(Object object) Returns the value of the field in the specified object as a char.","Annotation[] getDeclaredAnnotations() Returns, for this element, all annotations that are explicitly declared (not inherited).","Class<?> getDeclaringClass() Returns the class that declares this member.","double getDouble(Object object) Returns the value of the field in the specified object as a double.","float getFloat(Object object) Returns the value of the field in the specified object as a float .","Type getGenericType() Returns the generic type of this field.","int getInt(Object object) Returns the value of the field in the specified object as an int.","long getLong(Object object) Returns the value of the field in the specified object as a long.","int getModifiers() Returns the modifiers for this field.","String getName() Returns the name of this field.","short getShort(Object object) Returns the value of the field in the specified object as a short .","Class<?> getType() Return the Class associated with the type of this field.","int hashCode() Returns an integer hash code for this object. Equivalent to getDeclaringClass().getName().hashCode() ^ getName().hashCode().","boolean isAnnotationPresent(Class<?만xtendsㅁnnotation> annotationType) Indicates whether or not this element has an annotation with the specified annotation type (including inherited annotations).","boolean isEnumConstant() Indicates whether or not this field is an enumeration constant.","boolean isSynthetic() Indicates whether or not this field is synthetic.","void set(Object object, Object value) Sets the value of the field in the specified object to the value.","void setBoolean(Object object, boolean value) Sets the value of the field in the specified object to the boolean value.","void setByte(Object object, byte value) Sets the value of the field in the specified object to the byte value.","void setChar(Object object, char value) Sets the value of the field in the specified object to the char value.","void setDouble(Object object, double value) Sets the value of the field in the specified object to the double value.","void setFloat(Object object, float value) Sets the value of the field in the specified object to the float value.","void setInt(Object object, int value) Set the value of the field in the specified object to the int value.","void setLong(Object object, long value) Sets the value of the field in the specified object to the long value.","void setShort(Object object, short value) Sets the value of the field in the specified object to the short value.","String toGenericString() Returns the string representation of this field, including the field's generic type.","String toString() Returns a string containing a concise, human-readable description of this field.","[Expand] Inherited Methods","From class java.lang.reflect.AccessibleObject <T만xtendsㅁnnotation> T getAnnotation(Class<T> annotationType) Returns, for this element, the annotation with the specified type, or null if no annotation with the specified type is present (including inherited annotations). Annotation[] getAnnotations() Returns, for this element, an array containing all annotations (including inherited annotations). Annotation[] getDeclaredAnnotations() Returns, for this element, all annotations that are explicitly declared (not inherited). boolean isAccessible() Returns true if this object is accessible without access checks. boolean isAnnotationPresent(Class<?만xtendsㅁnnotation> annotationType) Indicates whether or not this element has an annotation with the specified annotation type (including inherited annotations). void setAccessible(boolean flag) Attempts to set the accessible flag. static void setAccessible(AccessibleObject[] objects, boolean flag) Attempts to set the accessible flag for all objects in objects.","<T만xtendsㅁnnotation> T getAnnotation(Class<T> annotationType) Returns, for this element, the annotation with the specified type, or null if no annotation with the specified type is present (including inherited annotations).","Annotation[] getAnnotations() Returns, for this element, an array containing all annotations (including inherited annotations).","Annotation[] getDeclaredAnnotations() Returns, for this element, all annotations that are explicitly declared (not inherited).","boolean isAccessible() Returns true if this object is accessible without access checks.","boolean isAnnotationPresent(Class<?만xtendsㅁnnotation> annotationType) Indicates whether or not this element has an annotation with the specified annotation type (including inherited annotations).","void setAccessible(boolean flag) Attempts to set the accessible flag.","static void setAccessible(AccessibleObject[] objects, boolean flag) Attempts to set the accessible flag for all objects in objects.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.reflect.AnnotatedElement abstract <T만xtendsㅁnnotation> T getAnnotation(Class<T> annotationType) Returns, for this element, the annotation with the specified type, or null if no annotation with the specified type is present (including inherited annotations). abstract Annotation[] getAnnotations() Returns, for this element, an array containing all annotations (including inherited annotations). abstract Annotation[] getDeclaredAnnotations() Returns, for this element, all annotations that are explicitly declared (not inherited). abstract boolean isAnnotationPresent(Class<?만xtendsㅁnnotation> annotationType) Indicates whether or not this element has an annotation with the specified annotation type (including inherited annotations).","abstract <T만xtendsㅁnnotation> T getAnnotation(Class<T> annotationType) Returns, for this element, the annotation with the specified type, or null if no annotation with the specified type is present (including inherited annotations).","abstract Annotation[] getAnnotations() Returns, for this element, an array containing all annotations (including inherited annotations).","abstract Annotation[] getDeclaredAnnotations() Returns, for this element, all annotations that are explicitly declared (not inherited).","abstract boolean isAnnotationPresent(Class<?만xtendsㅁnnotation> annotationType) Indicates whether or not this element has an annotation with the specified annotation type (including inherited annotations).","From interface java.lang.reflect.Member abstract Class<?> getDeclaringClass() Returns the class that declares this member. abstract int getModifiers() Returns the modifiers for this member. abstract String getName() Returns the name of this member. abstract boolean isSynthetic() Indicates whether or not this member is synthetic (artificially introduced by the compiler).","abstract Class<?> getDeclaringClass() Returns the class that declares this member.","abstract int getModifiers() Returns the modifiers for this member.","abstract String getName() Returns the name of this member.","abstract boolean isSynthetic() Indicates whether or not this member is synthetic (artificially introduced by the compiler)."],"package":"java.lang.reflect","constants":["[Expand] Inherited Constants","From interface java.lang.reflect.Member int DECLARED Designates all declared members of a class or interface (without inherited members). int PUBLIC Designates all public members of a class or interface (including inherited members).","int DECLARED Designates all declared members of a class or interface (without inherited members).","int PUBLIC Designates all public members of a class or interface (including inherited members)."],"class":"Field","constructors":[],"fields":[]}