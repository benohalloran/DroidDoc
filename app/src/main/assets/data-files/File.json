{"methods":["boolean canExecute() Tests whether or not this process is allowed to execute this file.","boolean canRead() Indicates whether the current context is allowed to read from this file.","boolean canWrite() Indicates whether the current context is allowed to write to this file.","int compareTo(File another) Returns the relative sort ordering of the paths for this file and the file another.","boolean createNewFile() Creates a new, empty file on the file system according to the path information stored in this file.","static File createTempFile(String prefix, String suffix, File directory) Creates an empty temporary file in the given directory using the given prefix and suffix as part of the file name.","static File createTempFile(String prefix, String suffix) Creates an empty temporary file using the given prefix and suffix as part of the file name.","boolean delete() Deletes this file.","void deleteOnExit() Schedules this file to be automatically deleted when the VM terminates normally.","boolean equals(Object obj) Compares obj to this file and returns true if they represent the same object using a path specific comparison.","boolean exists() Returns a boolean indicating whether this file can be found on the underlying file system.","File getAbsoluteFile() Returns a new file constructed using the absolute path of this file.","String getAbsolutePath() Returns the absolute path of this file.","File getCanonicalFile() Returns a new file created using the canonical path of this file.","String getCanonicalPath() Returns the canonical path of this file.","long getFreeSpace() Returns the number of free bytes on the partition containing this path.","String getName() Returns the name of the file or directory represented by this file.","String getParent() Returns the pathname of the parent of this file.","File getParentFile() Returns a new file made from the pathname of the parent of this file.","String getPath() Returns the path of this file.","long getTotalSpace() Returns the total size in bytes of the partition containing this path.","long getUsableSpace() Returns the number of usable free bytes on the partition containing this path.","int hashCode() Returns an integer hash code for the receiver.","boolean isAbsolute() Indicates if this file's pathname is absolute.","boolean isDirectory() Indicates if this file represents a directory on the underlying file system.","boolean isFile() Indicates if this file represents a file on the underlying file system.","boolean isHidden() Returns whether or not this file is a hidden file as defined by the operating system.","long lastModified() Returns the time when this file was last modified, measured in milliseconds since January 1st, 1970, midnight.","long length() Returns the length of this file in bytes.","String[] list() Returns an array of strings with the file names in the directory represented by this file.","String[] list(FilenameFilter filter) Gets a list of the files in the directory represented by this file.","File[] listFiles() Returns an array of files contained in the directory represented by this file.","File[] listFiles(FilenameFilter filter) Gets a list of the files in the directory represented by this file.","File[] listFiles(FileFilter filter) Gets a list of the files in the directory represented by this file.","static File[] listRoots() Returns the file system roots.","boolean mkdir() Creates the directory named by this file, assuming its parents exist.","boolean mkdirs() Creates the directory named by this file, creating missing parent directories if necessary.","boolean renameTo(File newPath) Renames this file to newPath.","boolean setExecutable(boolean executable) Equivalent to setExecutable(executable, true).","boolean setExecutable(boolean executable, boolean ownerOnly) Manipulates the execute permissions for the abstract path designated by this file.","boolean setLastModified(long time) Sets the time this file was last modified, measured in milliseconds since January 1st, 1970, midnight.","boolean setReadOnly() Equivalent to setWritable(false, false).","boolean setReadable(boolean readable) Equivalent to setReadable(readable, true).","boolean setReadable(boolean readable, boolean ownerOnly) Manipulates the read permissions for the abstract path designated by this file.","boolean setWritable(boolean writable, boolean ownerOnly) Manipulates the write permissions for the abstract path designated by this file.","boolean setWritable(boolean writable) Equivalent to setWritable(writable, true).","String toString() Returns a string containing a concise, human-readable description of this file.","URI toURI() Returns a Uniform Resource Identifier for this file.","URL toURL() This method was deprecated in API level 9. Use toURI() and toURL() to correctly escape illegal characters.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order."],"package":"java.io","constants":[],"class":"File","constructors":[],"fields":["public static final String pathSeparator The system-dependent string used to separate components in search paths (\":\").","public static final char pathSeparatorChar The system-dependent character used to separate components in search paths (':').","public static final String separator The system-dependent string used to separate components in filenames ('/').","public static final char separatorChar The system-dependent character used to separate components in filenames ('/')."]}