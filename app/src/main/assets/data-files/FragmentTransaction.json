{"methods":["abstract FragmentTransaction add(Fragment fragment, String tag) Calls add(int, Fragment, String) with a 0 containerViewId.","abstract FragmentTransaction add(int containerViewId, Fragment fragment) Calls add(int, Fragment, String) with a null tag.","abstract FragmentTransaction add(int containerViewId, Fragment fragment, String tag) Add a fragment to the activity state.","abstract FragmentTransaction addSharedElement(View sharedElement, String name) Used with custom Transitions to map a View from a removed or hidden Fragment to a View from a shown or added Fragment.","abstract FragmentTransaction addToBackStack(String name) Add this transaction to the back stack.","abstract FragmentTransaction attach(Fragment fragment) Re-attach a fragment after it had previously been deatched from the UI with detach(Fragment).","abstract int commit() Schedules a commit of this transaction.","abstract int commitAllowingStateLoss() Like commit() but allows the commit to be executed after an activity's state is saved.","abstract FragmentTransaction detach(Fragment fragment) Detach the given fragment from the UI.","abstract FragmentTransaction disallowAddToBackStack() Disallow calls to addToBackStack(String).","abstract FragmentTransaction hide(Fragment fragment) Hides an existing fragment.","abstract boolean isAddToBackStackAllowed() Returns true if this FragmentTransaction is allowed to be added to the back stack.","abstract boolean isEmpty()","abstract FragmentTransaction remove(Fragment fragment) Remove an existing fragment.","abstract FragmentTransaction replace(int containerViewId, Fragment fragment, String tag) Replace an existing fragment that was added to a container.","abstract FragmentTransaction replace(int containerViewId, Fragment fragment) Calls replace(int, Fragment, String) with a null tag.","abstract FragmentTransaction setBreadCrumbShortTitle(int res) Set the short title to show as a bread crumb when this transaction is on the back stack.","abstract FragmentTransaction setBreadCrumbShortTitle(CharSequence text) Like setBreadCrumbShortTitle(int) but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes.","abstract FragmentTransaction setBreadCrumbTitle(CharSequence text) Like setBreadCrumbTitle(int) but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes.","abstract FragmentTransaction setBreadCrumbTitle(int res) Set the full title to show as a bread crumb when this transaction is on the back stack.","abstract FragmentTransaction setCustomAnimations(int enter, int exit, int popEnter, int popExit) Set specific animation resources to run for the fragments that are entering and exiting in this transaction.","abstract FragmentTransaction setCustomAnimations(int enter, int exit) Set specific animation resources to run for the fragments that are entering and exiting in this transaction.","abstract FragmentTransaction setTransition(int transit) Select a standard transition animation for this transaction.","abstract FragmentTransaction setTransitionStyle(int styleRes) Set a custom style resource that will be used for resolving transit animations.","abstract FragmentTransaction show(Fragment fragment) Shows a previously hidden fragment.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v4.app","constants":["int TRANSIT_ENTER_MASK Bit mask that is set for all enter transitions.","int TRANSIT_EXIT_MASK Bit mask that is set for all exit transitions.","int TRANSIT_FRAGMENT_CLOSE Fragment is being removed from the stack","int TRANSIT_FRAGMENT_FADE Fragment should simply fade in or out; that is, no strong navigation associated with it except that it is appearing or disappearing for some reason.","int TRANSIT_FRAGMENT_OPEN Fragment is being added onto the stack","int TRANSIT_NONE No animation for transition.","int TRANSIT_UNSET Not set up for a transition."],"class":"FragmentTransaction","constructors":[],"fields":[]}