{"methods":["abstract void glBindBuffer(int target, int buffer)","abstract void glBufferData(int target, int size, Buffer data, int usage)","abstract void glBufferSubData(int target, int offset, int size, Buffer data)","abstract void glClipPlanef(int plane, FloatBuffer equation)","abstract void glClipPlanef(int plane, float[] equation, int offset)","abstract void glClipPlanex(int plane, IntBuffer equation)","abstract void glClipPlanex(int plane, int[] equation, int offset)","abstract void glColor4ub(byte red, byte green, byte blue, byte alpha)","abstract void glColorPointer(int size, int type, int stride, int offset)","abstract void glDeleteBuffers(int n, int[] buffers, int offset)","abstract void glDeleteBuffers(int n, IntBuffer buffers)","abstract void glDrawElements(int mode, int count, int type, int offset)","abstract void glGenBuffers(int n, int[] buffers, int offset)","abstract void glGenBuffers(int n, IntBuffer buffers)","abstract void glGetBooleanv(int pname, boolean[] params, int offset)","abstract void glGetBooleanv(int pname, IntBuffer params)","abstract void glGetBufferParameteriv(int target, int pname, IntBuffer params)","abstract void glGetBufferParameteriv(int target, int pname, int[] params, int offset)","abstract void glGetClipPlanef(int pname, FloatBuffer eqn)","abstract void glGetClipPlanef(int pname, float[] eqn, int offset)","abstract void glGetClipPlanex(int pname, int[] eqn, int offset)","abstract void glGetClipPlanex(int pname, IntBuffer eqn)","abstract void glGetFixedv(int pname, int[] params, int offset)","abstract void glGetFixedv(int pname, IntBuffer params)","abstract void glGetFloatv(int pname, float[] params, int offset)","abstract void glGetFloatv(int pname, FloatBuffer params)","abstract void glGetLightfv(int light, int pname, float[] params, int offset)","abstract void glGetLightfv(int light, int pname, FloatBuffer params)","abstract void glGetLightxv(int light, int pname, int[] params, int offset)","abstract void glGetLightxv(int light, int pname, IntBuffer params)","abstract void glGetMaterialfv(int face, int pname, FloatBuffer params)","abstract void glGetMaterialfv(int face, int pname, float[] params, int offset)","abstract void glGetMaterialxv(int face, int pname, int[] params, int offset)","abstract void glGetMaterialxv(int face, int pname, IntBuffer params)","abstract void glGetPointerv(int pname, Buffer[] params)","abstract void glGetTexEnviv(int env, int pname, IntBuffer params)","abstract void glGetTexEnviv(int env, int pname, int[] params, int offset)","abstract void glGetTexEnvxv(int env, int pname, int[] params, int offset)","abstract void glGetTexEnvxv(int env, int pname, IntBuffer params)","abstract void glGetTexParameterfv(int target, int pname, float[] params, int offset)","abstract void glGetTexParameterfv(int target, int pname, FloatBuffer params)","abstract void glGetTexParameteriv(int target, int pname, int[] params, int offset)","abstract void glGetTexParameteriv(int target, int pname, IntBuffer params)","abstract void glGetTexParameterxv(int target, int pname, IntBuffer params)","abstract void glGetTexParameterxv(int target, int pname, int[] params, int offset)","abstract boolean glIsBuffer(int buffer)","abstract boolean glIsEnabled(int cap)","abstract boolean glIsTexture(int texture)","abstract void glNormalPointer(int type, int stride, int offset)","abstract void glPointParameterf(int pname, float param)","abstract void glPointParameterfv(int pname, float[] params, int offset)","abstract void glPointParameterfv(int pname, FloatBuffer params)","abstract void glPointParameterx(int pname, int param)","abstract void glPointParameterxv(int pname, int[] params, int offset)","abstract void glPointParameterxv(int pname, IntBuffer params)","abstract void glPointSizePointerOES(int type, int stride, Buffer pointer)","abstract void glTexCoordPointer(int size, int type, int stride, int offset)","abstract void glTexEnvi(int target, int pname, int param)","abstract void glTexEnviv(int target, int pname, IntBuffer params)","abstract void glTexEnviv(int target, int pname, int[] params, int offset)","abstract void glTexParameterfv(int target, int pname, float[] params, int offset)","abstract void glTexParameterfv(int target, int pname, FloatBuffer params)","abstract void glTexParameteri(int target, int pname, int param)","abstract void glTexParameteriv(int target, int pname, IntBuffer params)","abstract void glTexParameteriv(int target, int pname, int[] params, int offset)","abstract void glTexParameterxv(int target, int pname, IntBuffer params)","abstract void glTexParameterxv(int target, int pname, int[] params, int offset)","abstract void glVertexPointer(int size, int type, int stride, int offset)","[Expand] Inherited Methods","From interface javax.microedition.khronos.opengles.GL10 abstract void glActiveTexture(int texture) abstract void glAlphaFunc(int func, float ref) abstract void glAlphaFuncx(int func, int ref) abstract void glBindTexture(int target, int texture) abstract void glBlendFunc(int sfactor, int dfactor) abstract void glClear(int mask) abstract void glClearColor(float red, float green, float blue, float alpha) abstract void glClearColorx(int red, int green, int blue, int alpha) abstract void glClearDepthf(float depth) abstract void glClearDepthx(int depth) abstract void glClearStencil(int s) abstract void glClientActiveTexture(int texture) abstract void glColor4f(float red, float green, float blue, float alpha) abstract void glColor4x(int red, int green, int blue, int alpha) abstract void glColorMask(boolean red, boolean green, boolean blue, boolean alpha) abstract void glColorPointer(int size, int type, int stride, Buffer pointer) abstract void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data) abstract void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data) abstract void glCopyTexImage2D(int target, int level, int internalformat, int x, int y, int width, int height, int border) abstract void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) abstract void glCullFace(int mode) abstract void glDeleteTextures(int n, int[] textures, int offset) abstract void glDeleteTextures(int n, IntBuffer textures) abstract void glDepthFunc(int func) abstract void glDepthMask(boolean flag) abstract void glDepthRangef(float zNear, float zFar) abstract void glDepthRangex(int zNear, int zFar) abstract void glDisable(int cap) abstract void glDisableClientState(int array) abstract void glDrawArrays(int mode, int first, int count) abstract void glDrawElements(int mode, int count, int type, Buffer indices) abstract void glEnable(int cap) abstract void glEnableClientState(int array) abstract void glFinish() abstract void glFlush() abstract void glFogf(int pname, float param) abstract void glFogfv(int pname, FloatBuffer params) abstract void glFogfv(int pname, float[] params, int offset) abstract void glFogx(int pname, int param) abstract void glFogxv(int pname, int[] params, int offset) abstract void glFogxv(int pname, IntBuffer params) abstract void glFrontFace(int mode) abstract void glFrustumf(float left, float right, float bottom, float top, float zNear, float zFar) abstract void glFrustumx(int left, int right, int bottom, int top, int zNear, int zFar) abstract void glGenTextures(int n, IntBuffer textures) abstract void glGenTextures(int n, int[] textures, int offset) abstract int glGetError() abstract void glGetIntegerv(int pname, IntBuffer params) abstract void glGetIntegerv(int pname, int[] params, int offset) abstract String glGetString(int name) abstract void glHint(int target, int mode) abstract void glLightModelf(int pname, float param) abstract void glLightModelfv(int pname, FloatBuffer params) abstract void glLightModelfv(int pname, float[] params, int offset) abstract void glLightModelx(int pname, int param) abstract void glLightModelxv(int pname, int[] params, int offset) abstract void glLightModelxv(int pname, IntBuffer params) abstract void glLightf(int light, int pname, float param) abstract void glLightfv(int light, int pname, float[] params, int offset) abstract void glLightfv(int light, int pname, FloatBuffer params) abstract void glLightx(int light, int pname, int param) abstract void glLightxv(int light, int pname, int[] params, int offset) abstract void glLightxv(int light, int pname, IntBuffer params) abstract void glLineWidth(float width) abstract void glLineWidthx(int width) abstract void glLoadIdentity() abstract void glLoadMatrixf(float[] m, int offset) abstract void glLoadMatrixf(FloatBuffer m) abstract void glLoadMatrixx(IntBuffer m) abstract void glLoadMatrixx(int[] m, int offset) abstract void glLogicOp(int opcode) abstract void glMaterialf(int face, int pname, float param) abstract void glMaterialfv(int face, int pname, float[] params, int offset) abstract void glMaterialfv(int face, int pname, FloatBuffer params) abstract void glMaterialx(int face, int pname, int param) abstract void glMaterialxv(int face, int pname, IntBuffer params) abstract void glMaterialxv(int face, int pname, int[] params, int offset) abstract void glMatrixMode(int mode) abstract void glMultMatrixf(float[] m, int offset) abstract void glMultMatrixf(FloatBuffer m) abstract void glMultMatrixx(IntBuffer m) abstract void glMultMatrixx(int[] m, int offset) abstract void glMultiTexCoord4f(int target, float s, float t, float r, float q) abstract void glMultiTexCoord4x(int target, int s, int t, int r, int q) abstract void glNormal3f(float nx, float ny, float nz) abstract void glNormal3x(int nx, int ny, int nz) abstract void glNormalPointer(int type, int stride, Buffer pointer) abstract void glOrthof(float left, float right, float bottom, float top, float zNear, float zFar) abstract void glOrthox(int left, int right, int bottom, int top, int zNear, int zFar) abstract void glPixelStorei(int pname, int param) abstract void glPointSize(float size) abstract void glPointSizex(int size) abstract void glPolygonOffset(float factor, float units) abstract void glPolygonOffsetx(int factor, int units) abstract void glPopMatrix() abstract void glPushMatrix() abstract void glReadPixels(int x, int y, int width, int height, int format, int type, Buffer pixels) abstract void glRotatef(float angle, float x, float y, float z) abstract void glRotatex(int angle, int x, int y, int z) abstract void glSampleCoverage(float value, boolean invert) abstract void glSampleCoveragex(int value, boolean invert) abstract void glScalef(float x, float y, float z) abstract void glScalex(int x, int y, int z) abstract void glScissor(int x, int y, int width, int height) abstract void glShadeModel(int mode) abstract void glStencilFunc(int func, int ref, int mask) abstract void glStencilMask(int mask) abstract void glStencilOp(int fail, int zfail, int zpass) abstract void glTexCoordPointer(int size, int type, int stride, Buffer pointer) abstract void glTexEnvf(int target, int pname, float param) abstract void glTexEnvfv(int target, int pname, FloatBuffer params) abstract void glTexEnvfv(int target, int pname, float[] params, int offset) abstract void glTexEnvx(int target, int pname, int param) abstract void glTexEnvxv(int target, int pname, int[] params, int offset) abstract void glTexEnvxv(int target, int pname, IntBuffer params) abstract void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) abstract void glTexParameterf(int target, int pname, float param) abstract void glTexParameterx(int target, int pname, int param) abstract void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels) abstract void glTranslatef(float x, float y, float z) abstract void glTranslatex(int x, int y, int z) abstract void glVertexPointer(int size, int type, int stride, Buffer pointer) abstract void glViewport(int x, int y, int width, int height)","abstract void glActiveTexture(int texture)","abstract void glAlphaFunc(int func, float ref)","abstract void glAlphaFuncx(int func, int ref)","abstract void glBindTexture(int target, int texture)","abstract void glBlendFunc(int sfactor, int dfactor)","abstract void glClear(int mask)","abstract void glClearColor(float red, float green, float blue, float alpha)","abstract void glClearColorx(int red, int green, int blue, int alpha)","abstract void glClearDepthf(float depth)","abstract void glClearDepthx(int depth)","abstract void glClearStencil(int s)","abstract void glClientActiveTexture(int texture)","abstract void glColor4f(float red, float green, float blue, float alpha)","abstract void glColor4x(int red, int green, int blue, int alpha)","abstract void glColorMask(boolean red, boolean green, boolean blue, boolean alpha)","abstract void glColorPointer(int size, int type, int stride, Buffer pointer)","abstract void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data)","abstract void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data)","abstract void glCopyTexImage2D(int target, int level, int internalformat, int x, int y, int width, int height, int border)","abstract void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height)","abstract void glCullFace(int mode)","abstract void glDeleteTextures(int n, int[] textures, int offset)","abstract void glDeleteTextures(int n, IntBuffer textures)","abstract void glDepthFunc(int func)","abstract void glDepthMask(boolean flag)","abstract void glDepthRangef(float zNear, float zFar)","abstract void glDepthRangex(int zNear, int zFar)","abstract void glDisable(int cap)","abstract void glDisableClientState(int array)","abstract void glDrawArrays(int mode, int first, int count)","abstract void glDrawElements(int mode, int count, int type, Buffer indices)","abstract void glEnable(int cap)","abstract void glEnableClientState(int array)","abstract void glFinish()","abstract void glFlush()","abstract void glFogf(int pname, float param)","abstract void glFogfv(int pname, FloatBuffer params)","abstract void glFogfv(int pname, float[] params, int offset)","abstract void glFogx(int pname, int param)","abstract void glFogxv(int pname, int[] params, int offset)","abstract void glFogxv(int pname, IntBuffer params)","abstract void glFrontFace(int mode)","abstract void glFrustumf(float left, float right, float bottom, float top, float zNear, float zFar)","abstract void glFrustumx(int left, int right, int bottom, int top, int zNear, int zFar)","abstract void glGenTextures(int n, IntBuffer textures)","abstract void glGenTextures(int n, int[] textures, int offset)","abstract int glGetError()","abstract void glGetIntegerv(int pname, IntBuffer params)","abstract void glGetIntegerv(int pname, int[] params, int offset)","abstract String glGetString(int name)","abstract void glHint(int target, int mode)","abstract void glLightModelf(int pname, float param)","abstract void glLightModelfv(int pname, FloatBuffer params)","abstract void glLightModelfv(int pname, float[] params, int offset)","abstract void glLightModelx(int pname, int param)","abstract void glLightModelxv(int pname, int[] params, int offset)","abstract void glLightModelxv(int pname, IntBuffer params)","abstract void glLightf(int light, int pname, float param)","abstract void glLightfv(int light, int pname, float[] params, int offset)","abstract void glLightfv(int light, int pname, FloatBuffer params)","abstract void glLightx(int light, int pname, int param)","abstract void glLightxv(int light, int pname, int[] params, int offset)","abstract void glLightxv(int light, int pname, IntBuffer params)","abstract void glLineWidth(float width)","abstract void glLineWidthx(int width)","abstract void glLoadIdentity()","abstract void glLoadMatrixf(float[] m, int offset)","abstract void glLoadMatrixf(FloatBuffer m)","abstract void glLoadMatrixx(IntBuffer m)","abstract void glLoadMatrixx(int[] m, int offset)","abstract void glLogicOp(int opcode)","abstract void glMaterialf(int face, int pname, float param)","abstract void glMaterialfv(int face, int pname, float[] params, int offset)","abstract void glMaterialfv(int face, int pname, FloatBuffer params)","abstract void glMaterialx(int face, int pname, int param)","abstract void glMaterialxv(int face, int pname, IntBuffer params)","abstract void glMaterialxv(int face, int pname, int[] params, int offset)","abstract void glMatrixMode(int mode)","abstract void glMultMatrixf(float[] m, int offset)","abstract void glMultMatrixf(FloatBuffer m)","abstract void glMultMatrixx(IntBuffer m)","abstract void glMultMatrixx(int[] m, int offset)","abstract void glMultiTexCoord4f(int target, float s, float t, float r, float q)","abstract void glMultiTexCoord4x(int target, int s, int t, int r, int q)","abstract void glNormal3f(float nx, float ny, float nz)","abstract void glNormal3x(int nx, int ny, int nz)","abstract void glNormalPointer(int type, int stride, Buffer pointer)","abstract void glOrthof(float left, float right, float bottom, float top, float zNear, float zFar)","abstract void glOrthox(int left, int right, int bottom, int top, int zNear, int zFar)","abstract void glPixelStorei(int pname, int param)","abstract void glPointSize(float size)","abstract void glPointSizex(int size)","abstract void glPolygonOffset(float factor, float units)","abstract void glPolygonOffsetx(int factor, int units)","abstract void glPopMatrix()","abstract void glPushMatrix()","abstract void glReadPixels(int x, int y, int width, int height, int format, int type, Buffer pixels)","abstract void glRotatef(float angle, float x, float y, float z)","abstract void glRotatex(int angle, int x, int y, int z)","abstract void glSampleCoverage(float value, boolean invert)","abstract void glSampleCoveragex(int value, boolean invert)","abstract void glScalef(float x, float y, float z)","abstract void glScalex(int x, int y, int z)","abstract void glScissor(int x, int y, int width, int height)","abstract void glShadeModel(int mode)","abstract void glStencilFunc(int func, int ref, int mask)","abstract void glStencilMask(int mask)","abstract void glStencilOp(int fail, int zfail, int zpass)","abstract void glTexCoordPointer(int size, int type, int stride, Buffer pointer)","abstract void glTexEnvf(int target, int pname, float param)","abstract void glTexEnvfv(int target, int pname, FloatBuffer params)","abstract void glTexEnvfv(int target, int pname, float[] params, int offset)","abstract void glTexEnvx(int target, int pname, int param)","abstract void glTexEnvxv(int target, int pname, int[] params, int offset)","abstract void glTexEnvxv(int target, int pname, IntBuffer params)","abstract void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels)","abstract void glTexParameterf(int target, int pname, float param)","abstract void glTexParameterx(int target, int pname, int param)","abstract void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels)","abstract void glTranslatef(float x, float y, float z)","abstract void glTranslatex(int x, int y, int z)","abstract void glVertexPointer(int size, int type, int stride, Buffer pointer)","abstract void glViewport(int x, int y, int width, int height)"],"package":"javax.microedition.khronos.opengles","constants":["int GL_ACTIVE_TEXTURE","int GL_ADD_SIGNED","int GL_ALPHA_SCALE","int GL_ALPHA_TEST_FUNC","int GL_ALPHA_TEST_REF","int GL_ARRAY_BUFFER","int GL_ARRAY_BUFFER_BINDING","int GL_BLEND_DST","int GL_BLEND_SRC","int GL_BUFFER_ACCESS","int GL_BUFFER_SIZE","int GL_BUFFER_USAGE","int GL_CLIENT_ACTIVE_TEXTURE","int GL_CLIP_PLANE0","int GL_CLIP_PLANE1","int GL_CLIP_PLANE2","int GL_CLIP_PLANE3","int GL_CLIP_PLANE4","int GL_CLIP_PLANE5","int GL_COLOR_ARRAY_BUFFER_BINDING","int GL_COLOR_ARRAY_POINTER","int GL_COLOR_ARRAY_SIZE","int GL_COLOR_ARRAY_STRIDE","int GL_COLOR_ARRAY_TYPE","int GL_COLOR_CLEAR_VALUE","int GL_COLOR_WRITEMASK","int GL_COMBINE","int GL_COMBINE_ALPHA","int GL_COMBINE_RGB","int GL_CONSTANT","int GL_COORD_REPLACE_OES","int GL_CULL_FACE_MODE","int GL_CURRENT_COLOR","int GL_CURRENT_NORMAL","int GL_CURRENT_TEXTURE_COORDS","int GL_DEPTH_CLEAR_VALUE","int GL_DEPTH_FUNC","int GL_DEPTH_RANGE","int GL_DEPTH_WRITEMASK","int GL_DOT3_RGB","int GL_DOT3_RGBA","int GL_DYNAMIC_DRAW","int GL_ELEMENT_ARRAY_BUFFER","int GL_ELEMENT_ARRAY_BUFFER_BINDING","int GL_FRONT_FACE","int GL_GENERATE_MIPMAP","int GL_GENERATE_MIPMAP_HINT","int GL_INTERPOLATE","int GL_LINE_WIDTH","int GL_LOGIC_OP_MODE","int GL_MATRIX_MODE","int GL_MAX_CLIP_PLANES","int GL_MODELVIEW_MATRIX","int GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES","int GL_MODELVIEW_STACK_DEPTH","int GL_NORMAL_ARRAY_BUFFER_BINDING","int GL_NORMAL_ARRAY_POINTER","int GL_NORMAL_ARRAY_STRIDE","int GL_NORMAL_ARRAY_TYPE","int GL_OPERAND0_ALPHA","int GL_OPERAND0_RGB","int GL_OPERAND1_ALPHA","int GL_OPERAND1_RGB","int GL_OPERAND2_ALPHA","int GL_OPERAND2_RGB","int GL_POINT_DISTANCE_ATTENUATION","int GL_POINT_FADE_THRESHOLD_SIZE","int GL_POINT_SIZE","int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES","int GL_POINT_SIZE_ARRAY_OES","int GL_POINT_SIZE_ARRAY_POINTER_OES","int GL_POINT_SIZE_ARRAY_STRIDE_OES","int GL_POINT_SIZE_ARRAY_TYPE_OES","int GL_POINT_SIZE_MAX","int GL_POINT_SIZE_MIN","int GL_POINT_SPRITE_OES","int GL_POLYGON_OFFSET_FACTOR","int GL_POLYGON_OFFSET_UNITS","int GL_PREVIOUS","int GL_PRIMARY_COLOR","int GL_PROJECTION_MATRIX","int GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES","int GL_PROJECTION_STACK_DEPTH","int GL_RGB_SCALE","int GL_SAMPLES","int GL_SAMPLE_BUFFERS","int GL_SAMPLE_COVERAGE_INVERT","int GL_SAMPLE_COVERAGE_VALUE","int GL_SCISSOR_BOX","int GL_SHADE_MODEL","int GL_SRC0_ALPHA","int GL_SRC0_RGB","int GL_SRC1_ALPHA","int GL_SRC1_RGB","int GL_SRC2_ALPHA","int GL_SRC2_RGB","int GL_STATIC_DRAW","int GL_STENCIL_CLEAR_VALUE","int GL_STENCIL_FAIL","int GL_STENCIL_FUNC","int GL_STENCIL_PASS_DEPTH_FAIL","int GL_STENCIL_PASS_DEPTH_PASS","int GL_STENCIL_REF","int GL_STENCIL_VALUE_MASK","int GL_STENCIL_WRITEMASK","int GL_SUBTRACT","int GL_TEXTURE_BINDING_2D","int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING","int GL_TEXTURE_COORD_ARRAY_POINTER","int GL_TEXTURE_COORD_ARRAY_SIZE","int GL_TEXTURE_COORD_ARRAY_STRIDE","int GL_TEXTURE_COORD_ARRAY_TYPE","int GL_TEXTURE_MATRIX","int GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES","int GL_TEXTURE_STACK_DEPTH","int GL_VERTEX_ARRAY_BUFFER_BINDING","int GL_VERTEX_ARRAY_POINTER","int GL_VERTEX_ARRAY_SIZE","int GL_VERTEX_ARRAY_STRIDE","int GL_VERTEX_ARRAY_TYPE","int GL_VIEWPORT","int GL_WRITE_ONLY","[Expand] Inherited Constants","From interface javax.microedition.khronos.opengles.GL10 int GL_ADD int GL_ALIASED_LINE_WIDTH_RANGE int GL_ALIASED_POINT_SIZE_RANGE int GL_ALPHA int GL_ALPHA_BITS int GL_ALPHA_TEST int GL_ALWAYS int GL_AMBIENT int GL_AMBIENT_AND_DIFFUSE int GL_AND int GL_AND_INVERTED int GL_AND_REVERSE int GL_BACK int GL_BLEND int GL_BLUE_BITS int GL_BYTE int GL_CCW int GL_CLAMP_TO_EDGE int GL_CLEAR int GL_COLOR_ARRAY int GL_COLOR_BUFFER_BIT int GL_COLOR_LOGIC_OP int GL_COLOR_MATERIAL int GL_COMPRESSED_TEXTURE_FORMATS int GL_CONSTANT_ATTENUATION int GL_COPY int GL_COPY_INVERTED int GL_CULL_FACE int GL_CW int GL_DECAL int GL_DECR int GL_DEPTH_BITS int GL_DEPTH_BUFFER_BIT int GL_DEPTH_TEST int GL_DIFFUSE int GL_DITHER int GL_DONT_CARE int GL_DST_ALPHA int GL_DST_COLOR int GL_EMISSION int GL_EQUAL int GL_EQUIV int GL_EXP int GL_EXP2 int GL_EXTENSIONS int GL_FALSE int GL_FASTEST int GL_FIXED int GL_FLAT int GL_FLOAT int GL_FOG int GL_FOG_COLOR int GL_FOG_DENSITY int GL_FOG_END int GL_FOG_HINT int GL_FOG_MODE int GL_FOG_START int GL_FRONT int GL_FRONT_AND_BACK int GL_GEQUAL int GL_GREATER int GL_GREEN_BITS int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES int GL_INCR int GL_INVALID_ENUM int GL_INVALID_OPERATION int GL_INVALID_VALUE int GL_INVERT int GL_KEEP int GL_LEQUAL int GL_LESS int GL_LIGHT0 int GL_LIGHT1 int GL_LIGHT2 int GL_LIGHT3 int GL_LIGHT4 int GL_LIGHT5 int GL_LIGHT6 int GL_LIGHT7 int GL_LIGHTING int GL_LIGHT_MODEL_AMBIENT int GL_LIGHT_MODEL_TWO_SIDE int GL_LINEAR int GL_LINEAR_ATTENUATION int GL_LINEAR_MIPMAP_LINEAR int GL_LINEAR_MIPMAP_NEAREST int GL_LINES int GL_LINE_LOOP int GL_LINE_SMOOTH int GL_LINE_SMOOTH_HINT int GL_LINE_STRIP int GL_LUMINANCE int GL_LUMINANCE_ALPHA int GL_MAX_ELEMENTS_INDICES int GL_MAX_ELEMENTS_VERTICES int GL_MAX_LIGHTS int GL_MAX_MODELVIEW_STACK_DEPTH int GL_MAX_PROJECTION_STACK_DEPTH int GL_MAX_TEXTURE_SIZE int GL_MAX_TEXTURE_STACK_DEPTH int GL_MAX_TEXTURE_UNITS int GL_MAX_VIEWPORT_DIMS int GL_MODELVIEW int GL_MODULATE int GL_MULTISAMPLE int GL_NAND int GL_NEAREST int GL_NEAREST_MIPMAP_LINEAR int GL_NEAREST_MIPMAP_NEAREST int GL_NEVER int GL_NICEST int GL_NOOP int GL_NOR int GL_NORMALIZE int GL_NORMAL_ARRAY int GL_NOTEQUAL int GL_NO_ERROR int GL_NUM_COMPRESSED_TEXTURE_FORMATS int GL_ONE int GL_ONE_MINUS_DST_ALPHA int GL_ONE_MINUS_DST_COLOR int GL_ONE_MINUS_SRC_ALPHA int GL_ONE_MINUS_SRC_COLOR int GL_OR int GL_OR_INVERTED int GL_OR_REVERSE int GL_OUT_OF_MEMORY int GL_PACK_ALIGNMENT int GL_PALETTE4_R5_G6_B5_OES int GL_PALETTE4_RGB5_A1_OES int GL_PALETTE4_RGB8_OES int GL_PALETTE4_RGBA4_OES int GL_PALETTE4_RGBA8_OES int GL_PALETTE8_R5_G6_B5_OES int GL_PALETTE8_RGB5_A1_OES int GL_PALETTE8_RGB8_OES int GL_PALETTE8_RGBA4_OES int GL_PALETTE8_RGBA8_OES int GL_PERSPECTIVE_CORRECTION_HINT int GL_POINTS int GL_POINT_FADE_THRESHOLD_SIZE int GL_POINT_SIZE int GL_POINT_SMOOTH int GL_POINT_SMOOTH_HINT int GL_POLYGON_OFFSET_FILL int GL_POLYGON_SMOOTH_HINT int GL_POSITION int GL_PROJECTION int GL_QUADRATIC_ATTENUATION int GL_RED_BITS int GL_RENDERER int GL_REPEAT int GL_REPLACE int GL_RESCALE_NORMAL int GL_RGB int GL_RGBA int GL_SAMPLE_ALPHA_TO_COVERAGE int GL_SAMPLE_ALPHA_TO_ONE int GL_SAMPLE_COVERAGE int GL_SCISSOR_TEST int GL_SET int GL_SHININESS int GL_SHORT int GL_SMOOTH int GL_SMOOTH_LINE_WIDTH_RANGE int GL_SMOOTH_POINT_SIZE_RANGE int GL_SPECULAR int GL_SPOT_CUTOFF int GL_SPOT_DIRECTION int GL_SPOT_EXPONENT int GL_SRC_ALPHA int GL_SRC_ALPHA_SATURATE int GL_SRC_COLOR int GL_STACK_OVERFLOW int GL_STACK_UNDERFLOW int GL_STENCIL_BITS int GL_STENCIL_BUFFER_BIT int GL_STENCIL_TEST int GL_SUBPIXEL_BITS int GL_TEXTURE int GL_TEXTURE0 int GL_TEXTURE1 int GL_TEXTURE10 int GL_TEXTURE11 int GL_TEXTURE12 int GL_TEXTURE13 int GL_TEXTURE14 int GL_TEXTURE15 int GL_TEXTURE16 int GL_TEXTURE17 int GL_TEXTURE18 int GL_TEXTURE19 int GL_TEXTURE2 int GL_TEXTURE20 int GL_TEXTURE21 int GL_TEXTURE22 int GL_TEXTURE23 int GL_TEXTURE24 int GL_TEXTURE25 int GL_TEXTURE26 int GL_TEXTURE27 int GL_TEXTURE28 int GL_TEXTURE29 int GL_TEXTURE3 int GL_TEXTURE30 int GL_TEXTURE31 int GL_TEXTURE4 int GL_TEXTURE5 int GL_TEXTURE6 int GL_TEXTURE7 int GL_TEXTURE8 int GL_TEXTURE9 int GL_TEXTURE_2D int GL_TEXTURE_COORD_ARRAY int GL_TEXTURE_ENV int GL_TEXTURE_ENV_COLOR int GL_TEXTURE_ENV_MODE int GL_TEXTURE_MAG_FILTER int GL_TEXTURE_MIN_FILTER int GL_TEXTURE_WRAP_S int GL_TEXTURE_WRAP_T int GL_TRIANGLES int GL_TRIANGLE_FAN int GL_TRIANGLE_STRIP int GL_TRUE int GL_UNPACK_ALIGNMENT int GL_UNSIGNED_BYTE int GL_UNSIGNED_SHORT int GL_UNSIGNED_SHORT_4_4_4_4 int GL_UNSIGNED_SHORT_5_5_5_1 int GL_UNSIGNED_SHORT_5_6_5 int GL_VENDOR int GL_VERSION int GL_VERTEX_ARRAY int GL_XOR int GL_ZERO","int GL_ADD","int GL_ALIASED_LINE_WIDTH_RANGE","int GL_ALIASED_POINT_SIZE_RANGE","int GL_ALPHA","int GL_ALPHA_BITS","int GL_ALPHA_TEST","int GL_ALWAYS","int GL_AMBIENT","int GL_AMBIENT_AND_DIFFUSE","int GL_AND","int GL_AND_INVERTED","int GL_AND_REVERSE","int GL_BACK","int GL_BLEND","int GL_BLUE_BITS","int GL_BYTE","int GL_CCW","int GL_CLAMP_TO_EDGE","int GL_CLEAR","int GL_COLOR_ARRAY","int GL_COLOR_BUFFER_BIT","int GL_COLOR_LOGIC_OP","int GL_COLOR_MATERIAL","int GL_COMPRESSED_TEXTURE_FORMATS","int GL_CONSTANT_ATTENUATION","int GL_COPY","int GL_COPY_INVERTED","int GL_CULL_FACE","int GL_CW","int GL_DECAL","int GL_DECR","int GL_DEPTH_BITS","int GL_DEPTH_BUFFER_BIT","int GL_DEPTH_TEST","int GL_DIFFUSE","int GL_DITHER","int GL_DONT_CARE","int GL_DST_ALPHA","int GL_DST_COLOR","int GL_EMISSION","int GL_EQUAL","int GL_EQUIV","int GL_EXP","int GL_EXP2","int GL_EXTENSIONS","int GL_FALSE","int GL_FASTEST","int GL_FIXED","int GL_FLAT","int GL_FLOAT","int GL_FOG","int GL_FOG_COLOR","int GL_FOG_DENSITY","int GL_FOG_END","int GL_FOG_HINT","int GL_FOG_MODE","int GL_FOG_START","int GL_FRONT","int GL_FRONT_AND_BACK","int GL_GEQUAL","int GL_GREATER","int GL_GREEN_BITS","int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES","int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES","int GL_INCR","int GL_INVALID_ENUM","int GL_INVALID_OPERATION","int GL_INVALID_VALUE","int GL_INVERT","int GL_KEEP","int GL_LEQUAL","int GL_LESS","int GL_LIGHT0","int GL_LIGHT1","int GL_LIGHT2","int GL_LIGHT3","int GL_LIGHT4","int GL_LIGHT5","int GL_LIGHT6","int GL_LIGHT7","int GL_LIGHTING","int GL_LIGHT_MODEL_AMBIENT","int GL_LIGHT_MODEL_TWO_SIDE","int GL_LINEAR","int GL_LINEAR_ATTENUATION","int GL_LINEAR_MIPMAP_LINEAR","int GL_LINEAR_MIPMAP_NEAREST","int GL_LINES","int GL_LINE_LOOP","int GL_LINE_SMOOTH","int GL_LINE_SMOOTH_HINT","int GL_LINE_STRIP","int GL_LUMINANCE","int GL_LUMINANCE_ALPHA","int GL_MAX_ELEMENTS_INDICES","int GL_MAX_ELEMENTS_VERTICES","int GL_MAX_LIGHTS","int GL_MAX_MODELVIEW_STACK_DEPTH","int GL_MAX_PROJECTION_STACK_DEPTH","int GL_MAX_TEXTURE_SIZE","int GL_MAX_TEXTURE_STACK_DEPTH","int GL_MAX_TEXTURE_UNITS","int GL_MAX_VIEWPORT_DIMS","int GL_MODELVIEW","int GL_MODULATE","int GL_MULTISAMPLE","int GL_NAND","int GL_NEAREST","int GL_NEAREST_MIPMAP_LINEAR","int GL_NEAREST_MIPMAP_NEAREST","int GL_NEVER","int GL_NICEST","int GL_NOOP","int GL_NOR","int GL_NORMALIZE","int GL_NORMAL_ARRAY","int GL_NOTEQUAL","int GL_NO_ERROR","int GL_NUM_COMPRESSED_TEXTURE_FORMATS","int GL_ONE","int GL_ONE_MINUS_DST_ALPHA","int GL_ONE_MINUS_DST_COLOR","int GL_ONE_MINUS_SRC_ALPHA","int GL_ONE_MINUS_SRC_COLOR","int GL_OR","int GL_OR_INVERTED","int GL_OR_REVERSE","int GL_OUT_OF_MEMORY","int GL_PACK_ALIGNMENT","int GL_PALETTE4_R5_G6_B5_OES","int GL_PALETTE4_RGB5_A1_OES","int GL_PALETTE4_RGB8_OES","int GL_PALETTE4_RGBA4_OES","int GL_PALETTE4_RGBA8_OES","int GL_PALETTE8_R5_G6_B5_OES","int GL_PALETTE8_RGB5_A1_OES","int GL_PALETTE8_RGB8_OES","int GL_PALETTE8_RGBA4_OES","int GL_PALETTE8_RGBA8_OES","int GL_PERSPECTIVE_CORRECTION_HINT","int GL_POINTS","int GL_POINT_FADE_THRESHOLD_SIZE","int GL_POINT_SIZE","int GL_POINT_SMOOTH","int GL_POINT_SMOOTH_HINT","int GL_POLYGON_OFFSET_FILL","int GL_POLYGON_SMOOTH_HINT","int GL_POSITION","int GL_PROJECTION","int GL_QUADRATIC_ATTENUATION","int GL_RED_BITS","int GL_RENDERER","int GL_REPEAT","int GL_REPLACE","int GL_RESCALE_NORMAL","int GL_RGB","int GL_RGBA","int GL_SAMPLE_ALPHA_TO_COVERAGE","int GL_SAMPLE_ALPHA_TO_ONE","int GL_SAMPLE_COVERAGE","int GL_SCISSOR_TEST","int GL_SET","int GL_SHININESS","int GL_SHORT","int GL_SMOOTH","int GL_SMOOTH_LINE_WIDTH_RANGE","int GL_SMOOTH_POINT_SIZE_RANGE","int GL_SPECULAR","int GL_SPOT_CUTOFF","int GL_SPOT_DIRECTION","int GL_SPOT_EXPONENT","int GL_SRC_ALPHA","int GL_SRC_ALPHA_SATURATE","int GL_SRC_COLOR","int GL_STACK_OVERFLOW","int GL_STACK_UNDERFLOW","int GL_STENCIL_BITS","int GL_STENCIL_BUFFER_BIT","int GL_STENCIL_TEST","int GL_SUBPIXEL_BITS","int GL_TEXTURE","int GL_TEXTURE0","int GL_TEXTURE1","int GL_TEXTURE10","int GL_TEXTURE11","int GL_TEXTURE12","int GL_TEXTURE13","int GL_TEXTURE14","int GL_TEXTURE15","int GL_TEXTURE16","int GL_TEXTURE17","int GL_TEXTURE18","int GL_TEXTURE19","int GL_TEXTURE2","int GL_TEXTURE20","int GL_TEXTURE21","int GL_TEXTURE22","int GL_TEXTURE23","int GL_TEXTURE24","int GL_TEXTURE25","int GL_TEXTURE26","int GL_TEXTURE27","int GL_TEXTURE28","int GL_TEXTURE29","int GL_TEXTURE3","int GL_TEXTURE30","int GL_TEXTURE31","int GL_TEXTURE4","int GL_TEXTURE5","int GL_TEXTURE6","int GL_TEXTURE7","int GL_TEXTURE8","int GL_TEXTURE9","int GL_TEXTURE_2D","int GL_TEXTURE_COORD_ARRAY","int GL_TEXTURE_ENV","int GL_TEXTURE_ENV_COLOR","int GL_TEXTURE_ENV_MODE","int GL_TEXTURE_MAG_FILTER","int GL_TEXTURE_MIN_FILTER","int GL_TEXTURE_WRAP_S","int GL_TEXTURE_WRAP_T","int GL_TRIANGLES","int GL_TRIANGLE_FAN","int GL_TRIANGLE_STRIP","int GL_TRUE","int GL_UNPACK_ALIGNMENT","int GL_UNSIGNED_BYTE","int GL_UNSIGNED_SHORT","int GL_UNSIGNED_SHORT_4_4_4_4","int GL_UNSIGNED_SHORT_5_5_5_1","int GL_UNSIGNED_SHORT_5_6_5","int GL_VENDOR","int GL_VERSION","int GL_VERTEX_ARRAY","int GL_XOR","int GL_ZERO"],"class":"GL11","constructors":[],"fields":[]}