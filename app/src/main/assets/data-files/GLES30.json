{"methods":["static void glBeginQuery(int target, int id)","static void glBeginTransformFeedback(int primitiveMode)","static void glBindBufferBase(int target, int index, int buffer)","static void glBindBufferRange(int target, int index, int buffer, int offset, int size)","static void glBindSampler(int unit, int sampler)","static void glBindTransformFeedback(int target, int id)","static void glBindVertexArray(int array)","static void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter)","static void glClearBufferfi(int buffer, int drawbuffer, float depth, int stencil)","static void glClearBufferfv(int buffer, int drawbuffer, float[] value, int offset)","static void glClearBufferfv(int buffer, int drawbuffer, FloatBuffer value)","static void glClearBufferiv(int buffer, int drawbuffer, int[] value, int offset)","static void glClearBufferiv(int buffer, int drawbuffer, IntBuffer value)","static void glClearBufferuiv(int buffer, int drawbuffer, IntBuffer value)","static void glClearBufferuiv(int buffer, int drawbuffer, int[] value, int offset)","static int glClientWaitSync(long sync, int flags, long timeout)","static void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, Buffer data)","static void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, int offset)","static void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, Buffer data)","static void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, int offset)","static void glCopyBufferSubData(int readTarget, int writeTarget, int readOffset, int writeOffset, int size)","static void glCopyTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height)","static void glDeleteQueries(int n, IntBuffer ids)","static void glDeleteQueries(int n, int[] ids, int offset)","static void glDeleteSamplers(int count, int[] samplers, int offset)","static void glDeleteSamplers(int count, IntBuffer samplers)","static void glDeleteSync(long sync)","static void glDeleteTransformFeedbacks(int n, IntBuffer ids)","static void glDeleteTransformFeedbacks(int n, int[] ids, int offset)","static void glDeleteVertexArrays(int n, int[] arrays, int offset)","static void glDeleteVertexArrays(int n, IntBuffer arrays)","static void glDrawArraysInstanced(int mode, int first, int count, int instanceCount)","static void glDrawBuffers(int n, IntBuffer bufs)","static void glDrawBuffers(int n, int[] bufs, int offset)","static void glDrawElementsInstanced(int mode, int count, int type, int indicesOffset, int instanceCount)","static void glDrawElementsInstanced(int mode, int count, int type, Buffer indices, int instanceCount)","static void glDrawRangeElements(int mode, int start, int end, int count, int type, Buffer indices)","static void glDrawRangeElements(int mode, int start, int end, int count, int type, int offset)","static void glEndQuery(int target)","static void glEndTransformFeedback()","static long glFenceSync(int condition, int flags)","static void glFlushMappedBufferRange(int target, int offset, int length)","static void glFramebufferTextureLayer(int target, int attachment, int texture, int level, int layer)","static void glGenQueries(int n, int[] ids, int offset)","static void glGenQueries(int n, IntBuffer ids)","static void glGenSamplers(int count, IntBuffer samplers)","static void glGenSamplers(int count, int[] samplers, int offset)","static void glGenTransformFeedbacks(int n, int[] ids, int offset)","static void glGenTransformFeedbacks(int n, IntBuffer ids)","static void glGenVertexArrays(int n, int[] arrays, int offset)","static void glGenVertexArrays(int n, IntBuffer arrays)","static void glGetActiveUniformBlockName(int program, int uniformBlockIndex, Buffer length, Buffer uniformBlockName)","static void glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize, int[] length, int lengthOffset, byte[] uniformBlockName, int uniformBlockNameOffset)","static String glGetActiveUniformBlockName(int program, int uniformBlockIndex)","static void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, int[] params, int offset)","static void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, IntBuffer params)","static void glGetActiveUniformsiv(int program, int uniformCount, IntBuffer uniformIndices, int pname, IntBuffer params)","static void glGetActiveUniformsiv(int program, int uniformCount, int[] uniformIndices, int uniformIndicesOffset, int pname, int[] params, int paramsOffset)","static void glGetBufferParameteri64v(int target, int pname, LongBuffer params)","static void glGetBufferParameteri64v(int target, int pname, long[] params, int offset)","static Buffer glGetBufferPointerv(int target, int pname)","static int glGetFragDataLocation(int program, String name)","static void glGetInteger64i_v(int target, int index, long[] data, int offset)","static void glGetInteger64i_v(int target, int index, LongBuffer data)","static void glGetInteger64v(int pname, LongBuffer params)","static void glGetInteger64v(int pname, long[] params, int offset)","static void glGetIntegeri_v(int target, int index, int[] data, int offset)","static void glGetIntegeri_v(int target, int index, IntBuffer data)","static void glGetInternalformativ(int target, int internalformat, int pname, int bufSize, int[] params, int offset)","static void glGetInternalformativ(int target, int internalformat, int pname, int bufSize, IntBuffer params)","static void glGetProgramBinary(int program, int bufSize, IntBuffer length, IntBuffer binaryFormat, Buffer binary)","static void glGetProgramBinary(int program, int bufSize, int[] length, int lengthOffset, int[] binaryFormat, int binaryFormatOffset, Buffer binary)","static void glGetQueryObjectuiv(int id, int pname, IntBuffer params)","static void glGetQueryObjectuiv(int id, int pname, int[] params, int offset)","static void glGetQueryiv(int target, int pname, IntBuffer params)","static void glGetQueryiv(int target, int pname, int[] params, int offset)","static void glGetSamplerParameterfv(int sampler, int pname, FloatBuffer params)","static void glGetSamplerParameterfv(int sampler, int pname, float[] params, int offset)","static void glGetSamplerParameteriv(int sampler, int pname, int[] params, int offset)","static void glGetSamplerParameteriv(int sampler, int pname, IntBuffer params)","static String glGetStringi(int name, int index)","static void glGetSynciv(long sync, int pname, int bufSize, int[] length, int lengthOffset, int[] values, int valuesOffset)","static void glGetSynciv(long sync, int pname, int bufSize, IntBuffer length, IntBuffer values)","static String glGetTransformFeedbackVarying(int program, int index, IntBuffer size, IntBuffer type)","static void glGetTransformFeedbackVarying(int program, int index, int bufsize, IntBuffer length, IntBuffer size, IntBuffer type, byte name)","static String glGetTransformFeedbackVarying(int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset)","static void glGetTransformFeedbackVarying(int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset)","static int glGetUniformBlockIndex(int program, String uniformBlockName)","static void glGetUniformIndices(int program, String[] uniformNames, int[] uniformIndices, int uniformIndicesOffset)","static void glGetUniformIndices(int program, String[] uniformNames, IntBuffer uniformIndices)","static void glGetUniformuiv(int program, int location, int[] params, int offset)","static void glGetUniformuiv(int program, int location, IntBuffer params)","static void glGetVertexAttribIiv(int index, int pname, IntBuffer params)","static void glGetVertexAttribIiv(int index, int pname, int[] params, int offset)","static void glGetVertexAttribIuiv(int index, int pname, IntBuffer params)","static void glGetVertexAttribIuiv(int index, int pname, int[] params, int offset)","static void glInvalidateFramebuffer(int target, int numAttachments, int[] attachments, int offset)","static void glInvalidateFramebuffer(int target, int numAttachments, IntBuffer attachments)","static void glInvalidateSubFramebuffer(int target, int numAttachments, int[] attachments, int offset, int x, int y, int width, int height)","static void glInvalidateSubFramebuffer(int target, int numAttachments, IntBuffer attachments, int x, int y, int width, int height)","static boolean glIsQuery(int id)","static boolean glIsSampler(int sampler)","static boolean glIsSync(long sync)","static boolean glIsTransformFeedback(int id)","static boolean glIsVertexArray(int array)","static Buffer glMapBufferRange(int target, int offset, int length, int access)","static void glPauseTransformFeedback()","static void glProgramBinary(int program, int binaryFormat, Buffer binary, int length)","static void glProgramParameteri(int program, int pname, int value)","static void glReadBuffer(int mode)","static void glRenderbufferStorageMultisample(int target, int samples, int internalformat, int width, int height)","static void glResumeTransformFeedback()","static void glSamplerParameterf(int sampler, int pname, float param)","static void glSamplerParameterfv(int sampler, int pname, FloatBuffer param)","static void glSamplerParameterfv(int sampler, int pname, float[] param, int offset)","static void glSamplerParameteri(int sampler, int pname, int param)","static void glSamplerParameteriv(int sampler, int pname, IntBuffer param)","static void glSamplerParameteriv(int sampler, int pname, int[] param, int offset)","static void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, Buffer pixels)","static void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, int offset)","static void glTexStorage2D(int target, int levels, int internalformat, int width, int height)","static void glTexStorage3D(int target, int levels, int internalformat, int width, int height, int depth)","static void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, Buffer pixels)","static void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, int offset)","static void glTransformFeedbackVaryings(int program, String[] varyings, int bufferMode)","static void glUniform1ui(int location, int v0)","static void glUniform1uiv(int location, int count, int[] value, int offset)","static void glUniform1uiv(int location, int count, IntBuffer value)","static void glUniform2ui(int location, int v0, int v1)","static void glUniform2uiv(int location, int count, IntBuffer value)","static void glUniform2uiv(int location, int count, int[] value, int offset)","static void glUniform3ui(int location, int v0, int v1, int v2)","static void glUniform3uiv(int location, int count, int[] value, int offset)","static void glUniform3uiv(int location, int count, IntBuffer value)","static void glUniform4ui(int location, int v0, int v1, int v2, int v3)","static void glUniform4uiv(int location, int count, IntBuffer value)","static void glUniform4uiv(int location, int count, int[] value, int offset)","static void glUniformBlockBinding(int program, int uniformBlockIndex, int uniformBlockBinding)","static void glUniformMatrix2x3fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix2x3fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUniformMatrix2x4fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix2x4fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUniformMatrix3x2fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUniformMatrix3x2fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix3x4fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUniformMatrix3x4fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix4x2fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUniformMatrix4x2fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix4x3fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix4x3fv(int location, int count, boolean transpose, FloatBuffer value)","static boolean glUnmapBuffer(int target)","static void glVertexAttribDivisor(int index, int divisor)","static void glVertexAttribI4i(int index, int x, int y, int z, int w)","static void glVertexAttribI4iv(int index, int[] v, int offset)","static void glVertexAttribI4iv(int index, IntBuffer v)","static void glVertexAttribI4ui(int index, int x, int y, int z, int w)","static void glVertexAttribI4uiv(int index, IntBuffer v)","static void glVertexAttribI4uiv(int index, int[] v, int offset)","static void glVertexAttribIPointer(int index, int size, int type, int stride, Buffer pointer)","static void glVertexAttribIPointer(int index, int size, int type, int stride, int offset)","static void glWaitSync(long sync, int flags, long timeout)","[Expand] Inherited Methods","From class android.opengl.GLES20 static void glActiveTexture(int texture) static void glAttachShader(int program, int shader) static void glBindAttribLocation(int program, int index, String name) static void glBindBuffer(int target, int buffer) static void glBindFramebuffer(int target, int framebuffer) static void glBindRenderbuffer(int target, int renderbuffer) static void glBindTexture(int target, int texture) static void glBlendColor(float red, float green, float blue, float alpha) static void glBlendEquation(int mode) static void glBlendEquationSeparate(int modeRGB, int modeAlpha) static void glBlendFunc(int sfactor, int dfactor) static void glBlendFuncSeparate(int srcRGB, int dstRGB, int srcAlpha, int dstAlpha) static void glBufferData(int target, int size, Buffer data, int usage) static void glBufferSubData(int target, int offset, int size, Buffer data) static int glCheckFramebufferStatus(int target) static void glClear(int mask) static void glClearColor(float red, float green, float blue, float alpha) static void glClearDepthf(float depth) static void glClearStencil(int s) static void glColorMask(boolean red, boolean green, boolean blue, boolean alpha) static void glCompileShader(int shader) static void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data) static void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data) static void glCopyTexImage2D(int target, int level, int internalformat, int x, int y, int width, int height, int border) static void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) static int glCreateProgram() static int glCreateShader(int type) static void glCullFace(int mode) static void glDeleteBuffers(int n, int[] buffers, int offset) static void glDeleteBuffers(int n, IntBuffer buffers) static void glDeleteFramebuffers(int n, int[] framebuffers, int offset) static void glDeleteFramebuffers(int n, IntBuffer framebuffers) static void glDeleteProgram(int program) static void glDeleteRenderbuffers(int n, IntBuffer renderbuffers) static void glDeleteRenderbuffers(int n, int[] renderbuffers, int offset) static void glDeleteShader(int shader) static void glDeleteTextures(int n, int[] textures, int offset) static void glDeleteTextures(int n, IntBuffer textures) static void glDepthFunc(int func) static void glDepthMask(boolean flag) static void glDepthRangef(float zNear, float zFar) static void glDetachShader(int program, int shader) static void glDisable(int cap) static void glDisableVertexAttribArray(int index) static void glDrawArrays(int mode, int first, int count) static void glDrawElements(int mode, int count, int type, Buffer indices) static void glDrawElements(int mode, int count, int type, int offset) static void glEnable(int cap) static void glEnableVertexAttribArray(int index) static void glFinish() static void glFlush() static void glFramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, int renderbuffer) static void glFramebufferTexture2D(int target, int attachment, int textarget, int texture, int level) static void glFrontFace(int mode) static void glGenBuffers(int n, IntBuffer buffers) static void glGenBuffers(int n, int[] buffers, int offset) static void glGenFramebuffers(int n, IntBuffer framebuffers) static void glGenFramebuffers(int n, int[] framebuffers, int offset) static void glGenRenderbuffers(int n, IntBuffer renderbuffers) static void glGenRenderbuffers(int n, int[] renderbuffers, int offset) static void glGenTextures(int n, IntBuffer textures) static void glGenTextures(int n, int[] textures, int offset) static void glGenerateMipmap(int target) static String glGetActiveAttrib(int program, int index, IntBuffer size, IntBuffer type) static String glGetActiveAttrib(int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset) static void glGetActiveAttrib(int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset) static String glGetActiveUniform(int program, int index, IntBuffer size, IntBuffer type) static void glGetActiveUniform(int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset) static String glGetActiveUniform(int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset) static void glGetAttachedShaders(int program, int maxcount, int[] count, int countOffset, int[] shaders, int shadersOffset) static void glGetAttachedShaders(int program, int maxcount, IntBuffer count, IntBuffer shaders) static int glGetAttribLocation(int program, String name) static void glGetBooleanv(int pname, boolean[] params, int offset) static void glGetBooleanv(int pname, IntBuffer params) static void glGetBufferParameteriv(int target, int pname, IntBuffer params) static void glGetBufferParameteriv(int target, int pname, int[] params, int offset) static int glGetError() static void glGetFloatv(int pname, FloatBuffer params) static void glGetFloatv(int pname, float[] params, int offset) static void glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, IntBuffer params) static void glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, int[] params, int offset) static void glGetIntegerv(int pname, IntBuffer params) static void glGetIntegerv(int pname, int[] params, int offset) static String glGetProgramInfoLog(int program) static void glGetProgramiv(int program, int pname, IntBuffer params) static void glGetProgramiv(int program, int pname, int[] params, int offset) static void glGetRenderbufferParameteriv(int target, int pname, int[] params, int offset) static void glGetRenderbufferParameteriv(int target, int pname, IntBuffer params) static String glGetShaderInfoLog(int shader) static void glGetShaderPrecisionFormat(int shadertype, int precisiontype, IntBuffer range, IntBuffer precision) static void glGetShaderPrecisionFormat(int shadertype, int precisiontype, int[] range, int rangeOffset, int[] precision, int precisionOffset) static void glGetShaderSource(int shader, int bufsize, int[] length, int lengthOffset, byte[] source, int sourceOffset) static String glGetShaderSource(int shader) static void glGetShaderiv(int shader, int pname, IntBuffer params) static void glGetShaderiv(int shader, int pname, int[] params, int offset) static String glGetString(int name) static void glGetTexParameterfv(int target, int pname, float[] params, int offset) static void glGetTexParameterfv(int target, int pname, FloatBuffer params) static void glGetTexParameteriv(int target, int pname, int[] params, int offset) static void glGetTexParameteriv(int target, int pname, IntBuffer params) static int glGetUniformLocation(int program, String name) static void glGetUniformfv(int program, int location, FloatBuffer params) static void glGetUniformfv(int program, int location, float[] params, int offset) static void glGetUniformiv(int program, int location, IntBuffer params) static void glGetUniformiv(int program, int location, int[] params, int offset) static void glGetVertexAttribfv(int index, int pname, float[] params, int offset) static void glGetVertexAttribfv(int index, int pname, FloatBuffer params) static void glGetVertexAttribiv(int index, int pname, int[] params, int offset) static void glGetVertexAttribiv(int index, int pname, IntBuffer params) static void glHint(int target, int mode) static boolean glIsBuffer(int buffer) static boolean glIsEnabled(int cap) static boolean glIsFramebuffer(int framebuffer) static boolean glIsProgram(int program) static boolean glIsRenderbuffer(int renderbuffer) static boolean glIsShader(int shader) static boolean glIsTexture(int texture) static void glLineWidth(float width) static void glLinkProgram(int program) static void glPixelStorei(int pname, int param) static void glPolygonOffset(float factor, float units) static void glReadPixels(int x, int y, int width, int height, int format, int type, Buffer pixels) static void glReleaseShaderCompiler() static void glRenderbufferStorage(int target, int internalformat, int width, int height) static void glSampleCoverage(float value, boolean invert) static void glScissor(int x, int y, int width, int height) static void glShaderBinary(int n, IntBuffer shaders, int binaryformat, Buffer binary, int length) static void glShaderBinary(int n, int[] shaders, int offset, int binaryformat, Buffer binary, int length) static void glShaderSource(int shader, String string) static void glStencilFunc(int func, int ref, int mask) static void glStencilFuncSeparate(int face, int func, int ref, int mask) static void glStencilMask(int mask) static void glStencilMaskSeparate(int face, int mask) static void glStencilOp(int fail, int zfail, int zpass) static void glStencilOpSeparate(int face, int fail, int zfail, int zpass) static void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) static void glTexParameterf(int target, int pname, float param) static void glTexParameterfv(int target, int pname, float[] params, int offset) static void glTexParameterfv(int target, int pname, FloatBuffer params) static void glTexParameteri(int target, int pname, int param) static void glTexParameteriv(int target, int pname, IntBuffer params) static void glTexParameteriv(int target, int pname, int[] params, int offset) static void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels) static void glUniform1f(int location, float x) static void glUniform1fv(int location, int count, float[] v, int offset) static void glUniform1fv(int location, int count, FloatBuffer v) static void glUniform1i(int location, int x) static void glUniform1iv(int location, int count, IntBuffer v) static void glUniform1iv(int location, int count, int[] v, int offset) static void glUniform2f(int location, float x, float y) static void glUniform2fv(int location, int count, FloatBuffer v) static void glUniform2fv(int location, int count, float[] v, int offset) static void glUniform2i(int location, int x, int y) static void glUniform2iv(int location, int count, IntBuffer v) static void glUniform2iv(int location, int count, int[] v, int offset) static void glUniform3f(int location, float x, float y, float z) static void glUniform3fv(int location, int count, float[] v, int offset) static void glUniform3fv(int location, int count, FloatBuffer v) static void glUniform3i(int location, int x, int y, int z) static void glUniform3iv(int location, int count, IntBuffer v) static void glUniform3iv(int location, int count, int[] v, int offset) static void glUniform4f(int location, float x, float y, float z, float w) static void glUniform4fv(int location, int count, FloatBuffer v) static void glUniform4fv(int location, int count, float[] v, int offset) static void glUniform4i(int location, int x, int y, int z, int w) static void glUniform4iv(int location, int count, int[] v, int offset) static void glUniform4iv(int location, int count, IntBuffer v) static void glUniformMatrix2fv(int location, int count, boolean transpose, FloatBuffer value) static void glUniformMatrix2fv(int location, int count, boolean transpose, float[] value, int offset) static void glUniformMatrix3fv(int location, int count, boolean transpose, float[] value, int offset) static void glUniformMatrix3fv(int location, int count, boolean transpose, FloatBuffer value) static void glUniformMatrix4fv(int location, int count, boolean transpose, float[] value, int offset) static void glUniformMatrix4fv(int location, int count, boolean transpose, FloatBuffer value) static void glUseProgram(int program) static void glValidateProgram(int program) static void glVertexAttrib1f(int indx, float x) static void glVertexAttrib1fv(int indx, FloatBuffer values) static void glVertexAttrib1fv(int indx, float[] values, int offset) static void glVertexAttrib2f(int indx, float x, float y) static void glVertexAttrib2fv(int indx, float[] values, int offset) static void glVertexAttrib2fv(int indx, FloatBuffer values) static void glVertexAttrib3f(int indx, float x, float y, float z) static void glVertexAttrib3fv(int indx, FloatBuffer values) static void glVertexAttrib3fv(int indx, float[] values, int offset) static void glVertexAttrib4f(int indx, float x, float y, float z, float w) static void glVertexAttrib4fv(int indx, FloatBuffer values) static void glVertexAttrib4fv(int indx, float[] values, int offset) static void glVertexAttribPointer(int indx, int size, int type, boolean normalized, int stride, Buffer ptr) static void glVertexAttribPointer(int indx, int size, int type, boolean normalized, int stride, int offset) static void glViewport(int x, int y, int width, int height)","static void glActiveTexture(int texture)","static void glAttachShader(int program, int shader)","static void glBindAttribLocation(int program, int index, String name)","static void glBindBuffer(int target, int buffer)","static void glBindFramebuffer(int target, int framebuffer)","static void glBindRenderbuffer(int target, int renderbuffer)","static void glBindTexture(int target, int texture)","static void glBlendColor(float red, float green, float blue, float alpha)","static void glBlendEquation(int mode)","static void glBlendEquationSeparate(int modeRGB, int modeAlpha)","static void glBlendFunc(int sfactor, int dfactor)","static void glBlendFuncSeparate(int srcRGB, int dstRGB, int srcAlpha, int dstAlpha)","static void glBufferData(int target, int size, Buffer data, int usage)","static void glBufferSubData(int target, int offset, int size, Buffer data)","static int glCheckFramebufferStatus(int target)","static void glClear(int mask)","static void glClearColor(float red, float green, float blue, float alpha)","static void glClearDepthf(float depth)","static void glClearStencil(int s)","static void glColorMask(boolean red, boolean green, boolean blue, boolean alpha)","static void glCompileShader(int shader)","static void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data)","static void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data)","static void glCopyTexImage2D(int target, int level, int internalformat, int x, int y, int width, int height, int border)","static void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height)","static int glCreateProgram()","static int glCreateShader(int type)","static void glCullFace(int mode)","static void glDeleteBuffers(int n, int[] buffers, int offset)","static void glDeleteBuffers(int n, IntBuffer buffers)","static void glDeleteFramebuffers(int n, int[] framebuffers, int offset)","static void glDeleteFramebuffers(int n, IntBuffer framebuffers)","static void glDeleteProgram(int program)","static void glDeleteRenderbuffers(int n, IntBuffer renderbuffers)","static void glDeleteRenderbuffers(int n, int[] renderbuffers, int offset)","static void glDeleteShader(int shader)","static void glDeleteTextures(int n, int[] textures, int offset)","static void glDeleteTextures(int n, IntBuffer textures)","static void glDepthFunc(int func)","static void glDepthMask(boolean flag)","static void glDepthRangef(float zNear, float zFar)","static void glDetachShader(int program, int shader)","static void glDisable(int cap)","static void glDisableVertexAttribArray(int index)","static void glDrawArrays(int mode, int first, int count)","static void glDrawElements(int mode, int count, int type, Buffer indices)","static void glDrawElements(int mode, int count, int type, int offset)","static void glEnable(int cap)","static void glEnableVertexAttribArray(int index)","static void glFinish()","static void glFlush()","static void glFramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, int renderbuffer)","static void glFramebufferTexture2D(int target, int attachment, int textarget, int texture, int level)","static void glFrontFace(int mode)","static void glGenBuffers(int n, IntBuffer buffers)","static void glGenBuffers(int n, int[] buffers, int offset)","static void glGenFramebuffers(int n, IntBuffer framebuffers)","static void glGenFramebuffers(int n, int[] framebuffers, int offset)","static void glGenRenderbuffers(int n, IntBuffer renderbuffers)","static void glGenRenderbuffers(int n, int[] renderbuffers, int offset)","static void glGenTextures(int n, IntBuffer textures)","static void glGenTextures(int n, int[] textures, int offset)","static void glGenerateMipmap(int target)","static String glGetActiveAttrib(int program, int index, IntBuffer size, IntBuffer type)","static String glGetActiveAttrib(int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset)","static void glGetActiveAttrib(int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset)","static String glGetActiveUniform(int program, int index, IntBuffer size, IntBuffer type)","static void glGetActiveUniform(int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset)","static String glGetActiveUniform(int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset)","static void glGetAttachedShaders(int program, int maxcount, int[] count, int countOffset, int[] shaders, int shadersOffset)","static void glGetAttachedShaders(int program, int maxcount, IntBuffer count, IntBuffer shaders)","static int glGetAttribLocation(int program, String name)","static void glGetBooleanv(int pname, boolean[] params, int offset)","static void glGetBooleanv(int pname, IntBuffer params)","static void glGetBufferParameteriv(int target, int pname, IntBuffer params)","static void glGetBufferParameteriv(int target, int pname, int[] params, int offset)","static int glGetError()","static void glGetFloatv(int pname, FloatBuffer params)","static void glGetFloatv(int pname, float[] params, int offset)","static void glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, IntBuffer params)","static void glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, int[] params, int offset)","static void glGetIntegerv(int pname, IntBuffer params)","static void glGetIntegerv(int pname, int[] params, int offset)","static String glGetProgramInfoLog(int program)","static void glGetProgramiv(int program, int pname, IntBuffer params)","static void glGetProgramiv(int program, int pname, int[] params, int offset)","static void glGetRenderbufferParameteriv(int target, int pname, int[] params, int offset)","static void glGetRenderbufferParameteriv(int target, int pname, IntBuffer params)","static String glGetShaderInfoLog(int shader)","static void glGetShaderPrecisionFormat(int shadertype, int precisiontype, IntBuffer range, IntBuffer precision)","static void glGetShaderPrecisionFormat(int shadertype, int precisiontype, int[] range, int rangeOffset, int[] precision, int precisionOffset)","static void glGetShaderSource(int shader, int bufsize, int[] length, int lengthOffset, byte[] source, int sourceOffset)","static String glGetShaderSource(int shader)","static void glGetShaderiv(int shader, int pname, IntBuffer params)","static void glGetShaderiv(int shader, int pname, int[] params, int offset)","static String glGetString(int name)","static void glGetTexParameterfv(int target, int pname, float[] params, int offset)","static void glGetTexParameterfv(int target, int pname, FloatBuffer params)","static void glGetTexParameteriv(int target, int pname, int[] params, int offset)","static void glGetTexParameteriv(int target, int pname, IntBuffer params)","static int glGetUniformLocation(int program, String name)","static void glGetUniformfv(int program, int location, FloatBuffer params)","static void glGetUniformfv(int program, int location, float[] params, int offset)","static void glGetUniformiv(int program, int location, IntBuffer params)","static void glGetUniformiv(int program, int location, int[] params, int offset)","static void glGetVertexAttribfv(int index, int pname, float[] params, int offset)","static void glGetVertexAttribfv(int index, int pname, FloatBuffer params)","static void glGetVertexAttribiv(int index, int pname, int[] params, int offset)","static void glGetVertexAttribiv(int index, int pname, IntBuffer params)","static void glHint(int target, int mode)","static boolean glIsBuffer(int buffer)","static boolean glIsEnabled(int cap)","static boolean glIsFramebuffer(int framebuffer)","static boolean glIsProgram(int program)","static boolean glIsRenderbuffer(int renderbuffer)","static boolean glIsShader(int shader)","static boolean glIsTexture(int texture)","static void glLineWidth(float width)","static void glLinkProgram(int program)","static void glPixelStorei(int pname, int param)","static void glPolygonOffset(float factor, float units)","static void glReadPixels(int x, int y, int width, int height, int format, int type, Buffer pixels)","static void glReleaseShaderCompiler()","static void glRenderbufferStorage(int target, int internalformat, int width, int height)","static void glSampleCoverage(float value, boolean invert)","static void glScissor(int x, int y, int width, int height)","static void glShaderBinary(int n, IntBuffer shaders, int binaryformat, Buffer binary, int length)","static void glShaderBinary(int n, int[] shaders, int offset, int binaryformat, Buffer binary, int length)","static void glShaderSource(int shader, String string)","static void glStencilFunc(int func, int ref, int mask)","static void glStencilFuncSeparate(int face, int func, int ref, int mask)","static void glStencilMask(int mask)","static void glStencilMaskSeparate(int face, int mask)","static void glStencilOp(int fail, int zfail, int zpass)","static void glStencilOpSeparate(int face, int fail, int zfail, int zpass)","static void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels)","static void glTexParameterf(int target, int pname, float param)","static void glTexParameterfv(int target, int pname, float[] params, int offset)","static void glTexParameterfv(int target, int pname, FloatBuffer params)","static void glTexParameteri(int target, int pname, int param)","static void glTexParameteriv(int target, int pname, IntBuffer params)","static void glTexParameteriv(int target, int pname, int[] params, int offset)","static void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels)","static void glUniform1f(int location, float x)","static void glUniform1fv(int location, int count, float[] v, int offset)","static void glUniform1fv(int location, int count, FloatBuffer v)","static void glUniform1i(int location, int x)","static void glUniform1iv(int location, int count, IntBuffer v)","static void glUniform1iv(int location, int count, int[] v, int offset)","static void glUniform2f(int location, float x, float y)","static void glUniform2fv(int location, int count, FloatBuffer v)","static void glUniform2fv(int location, int count, float[] v, int offset)","static void glUniform2i(int location, int x, int y)","static void glUniform2iv(int location, int count, IntBuffer v)","static void glUniform2iv(int location, int count, int[] v, int offset)","static void glUniform3f(int location, float x, float y, float z)","static void glUniform3fv(int location, int count, float[] v, int offset)","static void glUniform3fv(int location, int count, FloatBuffer v)","static void glUniform3i(int location, int x, int y, int z)","static void glUniform3iv(int location, int count, IntBuffer v)","static void glUniform3iv(int location, int count, int[] v, int offset)","static void glUniform4f(int location, float x, float y, float z, float w)","static void glUniform4fv(int location, int count, FloatBuffer v)","static void glUniform4fv(int location, int count, float[] v, int offset)","static void glUniform4i(int location, int x, int y, int z, int w)","static void glUniform4iv(int location, int count, int[] v, int offset)","static void glUniform4iv(int location, int count, IntBuffer v)","static void glUniformMatrix2fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUniformMatrix2fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix3fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix3fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUniformMatrix4fv(int location, int count, boolean transpose, float[] value, int offset)","static void glUniformMatrix4fv(int location, int count, boolean transpose, FloatBuffer value)","static void glUseProgram(int program)","static void glValidateProgram(int program)","static void glVertexAttrib1f(int indx, float x)","static void glVertexAttrib1fv(int indx, FloatBuffer values)","static void glVertexAttrib1fv(int indx, float[] values, int offset)","static void glVertexAttrib2f(int indx, float x, float y)","static void glVertexAttrib2fv(int indx, float[] values, int offset)","static void glVertexAttrib2fv(int indx, FloatBuffer values)","static void glVertexAttrib3f(int indx, float x, float y, float z)","static void glVertexAttrib3fv(int indx, FloatBuffer values)","static void glVertexAttrib3fv(int indx, float[] values, int offset)","static void glVertexAttrib4f(int indx, float x, float y, float z, float w)","static void glVertexAttrib4fv(int indx, FloatBuffer values)","static void glVertexAttrib4fv(int indx, float[] values, int offset)","static void glVertexAttribPointer(int indx, int size, int type, boolean normalized, int stride, Buffer ptr)","static void glVertexAttribPointer(int indx, int size, int type, boolean normalized, int stride, int offset)","static void glViewport(int x, int y, int width, int height)","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.opengl","constants":["int GL_ACTIVE_UNIFORM_BLOCKS","int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","int GL_ALREADY_SIGNALED","int GL_ANY_SAMPLES_PASSED","int GL_ANY_SAMPLES_PASSED_CONSERVATIVE","int GL_BLUE","int GL_BUFFER_ACCESS_FLAGS","int GL_BUFFER_MAPPED","int GL_BUFFER_MAP_LENGTH","int GL_BUFFER_MAP_OFFSET","int GL_BUFFER_MAP_POINTER","int GL_COLOR","int GL_COLOR_ATTACHMENT1","int GL_COLOR_ATTACHMENT10","int GL_COLOR_ATTACHMENT11","int GL_COLOR_ATTACHMENT12","int GL_COLOR_ATTACHMENT13","int GL_COLOR_ATTACHMENT14","int GL_COLOR_ATTACHMENT15","int GL_COLOR_ATTACHMENT2","int GL_COLOR_ATTACHMENT3","int GL_COLOR_ATTACHMENT4","int GL_COLOR_ATTACHMENT5","int GL_COLOR_ATTACHMENT6","int GL_COLOR_ATTACHMENT7","int GL_COLOR_ATTACHMENT8","int GL_COLOR_ATTACHMENT9","int GL_COMPARE_REF_TO_TEXTURE","int GL_COMPRESSED_R11_EAC","int GL_COMPRESSED_RG11_EAC","int GL_COMPRESSED_RGB8_ETC2","int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","int GL_COMPRESSED_RGBA8_ETC2_EAC","int GL_COMPRESSED_SIGNED_R11_EAC","int GL_COMPRESSED_SIGNED_RG11_EAC","int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","int GL_COMPRESSED_SRGB8_ETC2","int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","int GL_CONDITION_SATISFIED","int GL_COPY_READ_BUFFER","int GL_COPY_READ_BUFFER_BINDING","int GL_COPY_WRITE_BUFFER","int GL_COPY_WRITE_BUFFER_BINDING","int GL_CURRENT_QUERY","int GL_DEPTH","int GL_DEPTH24_STENCIL8","int GL_DEPTH32F_STENCIL8","int GL_DEPTH_COMPONENT24","int GL_DEPTH_COMPONENT32F","int GL_DEPTH_STENCIL","int GL_DEPTH_STENCIL_ATTACHMENT","int GL_DRAW_BUFFER0","int GL_DRAW_BUFFER1","int GL_DRAW_BUFFER10","int GL_DRAW_BUFFER11","int GL_DRAW_BUFFER12","int GL_DRAW_BUFFER13","int GL_DRAW_BUFFER14","int GL_DRAW_BUFFER15","int GL_DRAW_BUFFER2","int GL_DRAW_BUFFER3","int GL_DRAW_BUFFER4","int GL_DRAW_BUFFER5","int GL_DRAW_BUFFER6","int GL_DRAW_BUFFER7","int GL_DRAW_BUFFER8","int GL_DRAW_BUFFER9","int GL_DRAW_FRAMEBUFFER","int GL_DRAW_FRAMEBUFFER_BINDING","int GL_DYNAMIC_COPY","int GL_DYNAMIC_READ","int GL_FLOAT_32_UNSIGNED_INT_24_8_REV","int GL_FLOAT_MAT2x3","int GL_FLOAT_MAT2x4","int GL_FLOAT_MAT3x2","int GL_FLOAT_MAT3x4","int GL_FLOAT_MAT4x2","int GL_FLOAT_MAT4x3","int GL_FRAGMENT_SHADER_DERIVATIVE_HINT","int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE","int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","int GL_FRAMEBUFFER_DEFAULT","int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","int GL_FRAMEBUFFER_UNDEFINED","int GL_GREEN","int GL_HALF_FLOAT","int GL_INTERLEAVED_ATTRIBS","int GL_INT_2_10_10_10_REV","int GL_INT_SAMPLER_2D","int GL_INT_SAMPLER_2D_ARRAY","int GL_INT_SAMPLER_3D","int GL_INT_SAMPLER_CUBE","int GL_INVALID_INDEX","int GL_MAJOR_VERSION","int GL_MAP_FLUSH_EXPLICIT_BIT","int GL_MAP_INVALIDATE_BUFFER_BIT","int GL_MAP_INVALIDATE_RANGE_BIT","int GL_MAP_READ_BIT","int GL_MAP_UNSYNCHRONIZED_BIT","int GL_MAP_WRITE_BIT","int GL_MAX","int GL_MAX_3D_TEXTURE_SIZE","int GL_MAX_ARRAY_TEXTURE_LAYERS","int GL_MAX_COLOR_ATTACHMENTS","int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","int GL_MAX_COMBINED_UNIFORM_BLOCKS","int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","int GL_MAX_DRAW_BUFFERS","int GL_MAX_ELEMENTS_INDICES","int GL_MAX_ELEMENTS_VERTICES","int GL_MAX_ELEMENT_INDEX","int GL_MAX_FRAGMENT_INPUT_COMPONENTS","int GL_MAX_FRAGMENT_UNIFORM_BLOCKS","int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS","int GL_MAX_PROGRAM_TEXEL_OFFSET","int GL_MAX_SAMPLES","int GL_MAX_SERVER_WAIT_TIMEOUT","int GL_MAX_TEXTURE_LOD_BIAS","int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","int GL_MAX_UNIFORM_BLOCK_SIZE","int GL_MAX_UNIFORM_BUFFER_BINDINGS","int GL_MAX_VARYING_COMPONENTS","int GL_MAX_VERTEX_OUTPUT_COMPONENTS","int GL_MAX_VERTEX_UNIFORM_BLOCKS","int GL_MAX_VERTEX_UNIFORM_COMPONENTS","int GL_MIN","int GL_MINOR_VERSION","int GL_MIN_PROGRAM_TEXEL_OFFSET","int GL_NUM_EXTENSIONS","int GL_NUM_PROGRAM_BINARY_FORMATS","int GL_NUM_SAMPLE_COUNTS","int GL_OBJECT_TYPE","int GL_PACK_ROW_LENGTH","int GL_PACK_SKIP_PIXELS","int GL_PACK_SKIP_ROWS","int GL_PIXEL_PACK_BUFFER","int GL_PIXEL_PACK_BUFFER_BINDING","int GL_PIXEL_UNPACK_BUFFER","int GL_PIXEL_UNPACK_BUFFER_BINDING","int GL_PRIMITIVE_RESTART_FIXED_INDEX","int GL_PROGRAM_BINARY_FORMATS","int GL_PROGRAM_BINARY_LENGTH","int GL_PROGRAM_BINARY_RETRIEVABLE_HINT","int GL_QUERY_RESULT","int GL_QUERY_RESULT_AVAILABLE","int GL_R11F_G11F_B10F","int GL_R16F","int GL_R16I","int GL_R16UI","int GL_R32F","int GL_R32I","int GL_R32UI","int GL_R8","int GL_R8I","int GL_R8UI","int GL_R8_SNORM","int GL_RASTERIZER_DISCARD","int GL_READ_BUFFER","int GL_READ_FRAMEBUFFER","int GL_READ_FRAMEBUFFER_BINDING","int GL_RED","int GL_RED_INTEGER","int GL_RENDERBUFFER_SAMPLES","int GL_RG","int GL_RG16F","int GL_RG16I","int GL_RG16UI","int GL_RG32F","int GL_RG32I","int GL_RG32UI","int GL_RG8","int GL_RG8I","int GL_RG8UI","int GL_RG8_SNORM","int GL_RGB10_A2","int GL_RGB10_A2UI","int GL_RGB16F","int GL_RGB16I","int GL_RGB16UI","int GL_RGB32F","int GL_RGB32I","int GL_RGB32UI","int GL_RGB8","int GL_RGB8I","int GL_RGB8UI","int GL_RGB8_SNORM","int GL_RGB9_E5","int GL_RGBA16F","int GL_RGBA16I","int GL_RGBA16UI","int GL_RGBA32F","int GL_RGBA32I","int GL_RGBA32UI","int GL_RGBA8","int GL_RGBA8I","int GL_RGBA8UI","int GL_RGBA8_SNORM","int GL_RGBA_INTEGER","int GL_RGB_INTEGER","int GL_RG_INTEGER","int GL_SAMPLER_2D_ARRAY","int GL_SAMPLER_2D_ARRAY_SHADOW","int GL_SAMPLER_2D_SHADOW","int GL_SAMPLER_3D","int GL_SAMPLER_BINDING","int GL_SAMPLER_CUBE_SHADOW","int GL_SEPARATE_ATTRIBS","int GL_SIGNALED","int GL_SIGNED_NORMALIZED","int GL_SRGB","int GL_SRGB8","int GL_SRGB8_ALPHA8","int GL_STATIC_COPY","int GL_STATIC_READ","int GL_STENCIL","int GL_STREAM_COPY","int GL_STREAM_READ","int GL_SYNC_CONDITION","int GL_SYNC_FENCE","int GL_SYNC_FLAGS","int GL_SYNC_FLUSH_COMMANDS_BIT","int GL_SYNC_GPU_COMMANDS_COMPLETE","int GL_SYNC_STATUS","int GL_TEXTURE_2D_ARRAY","int GL_TEXTURE_3D","int GL_TEXTURE_BASE_LEVEL","int GL_TEXTURE_BINDING_2D_ARRAY","int GL_TEXTURE_BINDING_3D","int GL_TEXTURE_COMPARE_FUNC","int GL_TEXTURE_COMPARE_MODE","int GL_TEXTURE_IMMUTABLE_FORMAT","int GL_TEXTURE_IMMUTABLE_LEVELS","int GL_TEXTURE_MAX_LEVEL","int GL_TEXTURE_MAX_LOD","int GL_TEXTURE_MIN_LOD","int GL_TEXTURE_SWIZZLE_A","int GL_TEXTURE_SWIZZLE_B","int GL_TEXTURE_SWIZZLE_G","int GL_TEXTURE_SWIZZLE_R","int GL_TEXTURE_WRAP_R","int GL_TIMEOUT_EXPIRED","long GL_TIMEOUT_IGNORED","int GL_TRANSFORM_FEEDBACK","int GL_TRANSFORM_FEEDBACK_ACTIVE","int GL_TRANSFORM_FEEDBACK_BINDING","int GL_TRANSFORM_FEEDBACK_BUFFER","int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING","int GL_TRANSFORM_FEEDBACK_BUFFER_MODE","int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE","int GL_TRANSFORM_FEEDBACK_BUFFER_START","int GL_TRANSFORM_FEEDBACK_PAUSED","int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","int GL_TRANSFORM_FEEDBACK_VARYINGS","int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","int GL_UNIFORM_ARRAY_STRIDE","int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS","int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","int GL_UNIFORM_BLOCK_BINDING","int GL_UNIFORM_BLOCK_DATA_SIZE","int GL_UNIFORM_BLOCK_INDEX","int GL_UNIFORM_BLOCK_NAME_LENGTH","int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","int GL_UNIFORM_BUFFER","int GL_UNIFORM_BUFFER_BINDING","int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT","int GL_UNIFORM_BUFFER_SIZE","int GL_UNIFORM_BUFFER_START","int GL_UNIFORM_IS_ROW_MAJOR","int GL_UNIFORM_MATRIX_STRIDE","int GL_UNIFORM_NAME_LENGTH","int GL_UNIFORM_OFFSET","int GL_UNIFORM_SIZE","int GL_UNIFORM_TYPE","int GL_UNPACK_IMAGE_HEIGHT","int GL_UNPACK_ROW_LENGTH","int GL_UNPACK_SKIP_IMAGES","int GL_UNPACK_SKIP_PIXELS","int GL_UNPACK_SKIP_ROWS","int GL_UNSIGNALED","int GL_UNSIGNED_INT_10F_11F_11F_REV","int GL_UNSIGNED_INT_24_8","int GL_UNSIGNED_INT_2_10_10_10_REV","int GL_UNSIGNED_INT_5_9_9_9_REV","int GL_UNSIGNED_INT_SAMPLER_2D","int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY","int GL_UNSIGNED_INT_SAMPLER_3D","int GL_UNSIGNED_INT_SAMPLER_CUBE","int GL_UNSIGNED_INT_VEC2","int GL_UNSIGNED_INT_VEC3","int GL_UNSIGNED_INT_VEC4","int GL_UNSIGNED_NORMALIZED","int GL_VERTEX_ARRAY_BINDING","int GL_VERTEX_ATTRIB_ARRAY_DIVISOR","int GL_VERTEX_ATTRIB_ARRAY_INTEGER","int GL_WAIT_FAILED","[Expand] Inherited Constants","From class android.opengl.GLES20 int GL_ACTIVE_ATTRIBUTES int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH int GL_ACTIVE_TEXTURE int GL_ACTIVE_UNIFORMS int GL_ACTIVE_UNIFORM_MAX_LENGTH int GL_ALIASED_LINE_WIDTH_RANGE int GL_ALIASED_POINT_SIZE_RANGE int GL_ALPHA int GL_ALPHA_BITS int GL_ALWAYS int GL_ARRAY_BUFFER int GL_ARRAY_BUFFER_BINDING int GL_ATTACHED_SHADERS int GL_BACK int GL_BLEND int GL_BLEND_COLOR int GL_BLEND_DST_ALPHA int GL_BLEND_DST_RGB int GL_BLEND_EQUATION int GL_BLEND_EQUATION_ALPHA int GL_BLEND_EQUATION_RGB int GL_BLEND_SRC_ALPHA int GL_BLEND_SRC_RGB int GL_BLUE_BITS int GL_BOOL int GL_BOOL_VEC2 int GL_BOOL_VEC3 int GL_BOOL_VEC4 int GL_BUFFER_SIZE int GL_BUFFER_USAGE int GL_BYTE int GL_CCW int GL_CLAMP_TO_EDGE int GL_COLOR_ATTACHMENT0 int GL_COLOR_BUFFER_BIT int GL_COLOR_CLEAR_VALUE int GL_COLOR_WRITEMASK int GL_COMPILE_STATUS int GL_COMPRESSED_TEXTURE_FORMATS int GL_CONSTANT_ALPHA int GL_CONSTANT_COLOR int GL_CULL_FACE int GL_CULL_FACE_MODE int GL_CURRENT_PROGRAM int GL_CURRENT_VERTEX_ATTRIB int GL_CW int GL_DECR int GL_DECR_WRAP int GL_DELETE_STATUS int GL_DEPTH_ATTACHMENT int GL_DEPTH_BITS int GL_DEPTH_BUFFER_BIT int GL_DEPTH_CLEAR_VALUE int GL_DEPTH_COMPONENT int GL_DEPTH_COMPONENT16 int GL_DEPTH_FUNC int GL_DEPTH_RANGE int GL_DEPTH_TEST int GL_DEPTH_WRITEMASK int GL_DITHER int GL_DONT_CARE int GL_DST_ALPHA int GL_DST_COLOR int GL_DYNAMIC_DRAW int GL_ELEMENT_ARRAY_BUFFER int GL_ELEMENT_ARRAY_BUFFER_BINDING int GL_EQUAL int GL_EXTENSIONS int GL_FALSE int GL_FASTEST int GL_FIXED int GL_FLOAT int GL_FLOAT_MAT2 int GL_FLOAT_MAT3 int GL_FLOAT_MAT4 int GL_FLOAT_VEC2 int GL_FLOAT_VEC3 int GL_FLOAT_VEC4 int GL_FRAGMENT_SHADER int GL_FRAMEBUFFER int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL int GL_FRAMEBUFFER_BINDING int GL_FRAMEBUFFER_COMPLETE int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT int GL_FRAMEBUFFER_UNSUPPORTED int GL_FRONT int GL_FRONT_AND_BACK int GL_FRONT_FACE int GL_FUNC_ADD int GL_FUNC_REVERSE_SUBTRACT int GL_FUNC_SUBTRACT int GL_GENERATE_MIPMAP_HINT int GL_GEQUAL int GL_GREATER int GL_GREEN_BITS int GL_HIGH_FLOAT int GL_HIGH_INT int GL_IMPLEMENTATION_COLOR_READ_FORMAT int GL_IMPLEMENTATION_COLOR_READ_TYPE int GL_INCR int GL_INCR_WRAP int GL_INFO_LOG_LENGTH int GL_INT int GL_INT_VEC2 int GL_INT_VEC3 int GL_INT_VEC4 int GL_INVALID_ENUM int GL_INVALID_FRAMEBUFFER_OPERATION int GL_INVALID_OPERATION int GL_INVALID_VALUE int GL_INVERT int GL_KEEP int GL_LEQUAL int GL_LESS int GL_LINEAR int GL_LINEAR_MIPMAP_LINEAR int GL_LINEAR_MIPMAP_NEAREST int GL_LINES int GL_LINE_LOOP int GL_LINE_STRIP int GL_LINE_WIDTH int GL_LINK_STATUS int GL_LOW_FLOAT int GL_LOW_INT int GL_LUMINANCE int GL_LUMINANCE_ALPHA int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS int GL_MAX_CUBE_MAP_TEXTURE_SIZE int GL_MAX_FRAGMENT_UNIFORM_VECTORS int GL_MAX_RENDERBUFFER_SIZE int GL_MAX_TEXTURE_IMAGE_UNITS int GL_MAX_TEXTURE_SIZE int GL_MAX_VARYING_VECTORS int GL_MAX_VERTEX_ATTRIBS int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS int GL_MAX_VERTEX_UNIFORM_VECTORS int GL_MAX_VIEWPORT_DIMS int GL_MEDIUM_FLOAT int GL_MEDIUM_INT int GL_MIRRORED_REPEAT int GL_NEAREST int GL_NEAREST_MIPMAP_LINEAR int GL_NEAREST_MIPMAP_NEAREST int GL_NEVER int GL_NICEST int GL_NONE int GL_NOTEQUAL int GL_NO_ERROR int GL_NUM_COMPRESSED_TEXTURE_FORMATS int GL_NUM_SHADER_BINARY_FORMATS int GL_ONE int GL_ONE_MINUS_CONSTANT_ALPHA int GL_ONE_MINUS_CONSTANT_COLOR int GL_ONE_MINUS_DST_ALPHA int GL_ONE_MINUS_DST_COLOR int GL_ONE_MINUS_SRC_ALPHA int GL_ONE_MINUS_SRC_COLOR int GL_OUT_OF_MEMORY int GL_PACK_ALIGNMENT int GL_POINTS int GL_POLYGON_OFFSET_FACTOR int GL_POLYGON_OFFSET_FILL int GL_POLYGON_OFFSET_UNITS int GL_RED_BITS int GL_RENDERBUFFER int GL_RENDERBUFFER_ALPHA_SIZE int GL_RENDERBUFFER_BINDING int GL_RENDERBUFFER_BLUE_SIZE int GL_RENDERBUFFER_DEPTH_SIZE int GL_RENDERBUFFER_GREEN_SIZE int GL_RENDERBUFFER_HEIGHT int GL_RENDERBUFFER_INTERNAL_FORMAT int GL_RENDERBUFFER_RED_SIZE int GL_RENDERBUFFER_STENCIL_SIZE int GL_RENDERBUFFER_WIDTH int GL_RENDERER int GL_REPEAT int GL_REPLACE int GL_RGB int GL_RGB565 int GL_RGB5_A1 int GL_RGBA int GL_RGBA4 int GL_SAMPLER_2D int GL_SAMPLER_CUBE int GL_SAMPLES int GL_SAMPLE_ALPHA_TO_COVERAGE int GL_SAMPLE_BUFFERS int GL_SAMPLE_COVERAGE int GL_SAMPLE_COVERAGE_INVERT int GL_SAMPLE_COVERAGE_VALUE int GL_SCISSOR_BOX int GL_SCISSOR_TEST int GL_SHADER_BINARY_FORMATS int GL_SHADER_COMPILER int GL_SHADER_SOURCE_LENGTH int GL_SHADER_TYPE int GL_SHADING_LANGUAGE_VERSION int GL_SHORT int GL_SRC_ALPHA int GL_SRC_ALPHA_SATURATE int GL_SRC_COLOR int GL_STATIC_DRAW int GL_STENCIL_ATTACHMENT int GL_STENCIL_BACK_FAIL int GL_STENCIL_BACK_FUNC int GL_STENCIL_BACK_PASS_DEPTH_FAIL int GL_STENCIL_BACK_PASS_DEPTH_PASS int GL_STENCIL_BACK_REF int GL_STENCIL_BACK_VALUE_MASK int GL_STENCIL_BACK_WRITEMASK int GL_STENCIL_BITS int GL_STENCIL_BUFFER_BIT int GL_STENCIL_CLEAR_VALUE int GL_STENCIL_FAIL int GL_STENCIL_FUNC int GL_STENCIL_INDEX int GL_STENCIL_INDEX8 int GL_STENCIL_PASS_DEPTH_FAIL int GL_STENCIL_PASS_DEPTH_PASS int GL_STENCIL_REF int GL_STENCIL_TEST int GL_STENCIL_VALUE_MASK int GL_STENCIL_WRITEMASK int GL_STREAM_DRAW int GL_SUBPIXEL_BITS int GL_TEXTURE int GL_TEXTURE0 int GL_TEXTURE1 int GL_TEXTURE10 int GL_TEXTURE11 int GL_TEXTURE12 int GL_TEXTURE13 int GL_TEXTURE14 int GL_TEXTURE15 int GL_TEXTURE16 int GL_TEXTURE17 int GL_TEXTURE18 int GL_TEXTURE19 int GL_TEXTURE2 int GL_TEXTURE20 int GL_TEXTURE21 int GL_TEXTURE22 int GL_TEXTURE23 int GL_TEXTURE24 int GL_TEXTURE25 int GL_TEXTURE26 int GL_TEXTURE27 int GL_TEXTURE28 int GL_TEXTURE29 int GL_TEXTURE3 int GL_TEXTURE30 int GL_TEXTURE31 int GL_TEXTURE4 int GL_TEXTURE5 int GL_TEXTURE6 int GL_TEXTURE7 int GL_TEXTURE8 int GL_TEXTURE9 int GL_TEXTURE_2D int GL_TEXTURE_BINDING_2D int GL_TEXTURE_BINDING_CUBE_MAP int GL_TEXTURE_CUBE_MAP int GL_TEXTURE_CUBE_MAP_NEGATIVE_X int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z int GL_TEXTURE_CUBE_MAP_POSITIVE_X int GL_TEXTURE_CUBE_MAP_POSITIVE_Y int GL_TEXTURE_CUBE_MAP_POSITIVE_Z int GL_TEXTURE_MAG_FILTER int GL_TEXTURE_MIN_FILTER int GL_TEXTURE_WRAP_S int GL_TEXTURE_WRAP_T int GL_TRIANGLES int GL_TRIANGLE_FAN int GL_TRIANGLE_STRIP int GL_TRUE int GL_UNPACK_ALIGNMENT int GL_UNSIGNED_BYTE int GL_UNSIGNED_INT int GL_UNSIGNED_SHORT int GL_UNSIGNED_SHORT_4_4_4_4 int GL_UNSIGNED_SHORT_5_5_5_1 int GL_UNSIGNED_SHORT_5_6_5 int GL_VALIDATE_STATUS int GL_VENDOR int GL_VERSION int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING int GL_VERTEX_ATTRIB_ARRAY_ENABLED int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED int GL_VERTEX_ATTRIB_ARRAY_POINTER int GL_VERTEX_ATTRIB_ARRAY_SIZE int GL_VERTEX_ATTRIB_ARRAY_STRIDE int GL_VERTEX_ATTRIB_ARRAY_TYPE int GL_VERTEX_SHADER int GL_VIEWPORT int GL_ZERO","int GL_ACTIVE_ATTRIBUTES","int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH","int GL_ACTIVE_TEXTURE","int GL_ACTIVE_UNIFORMS","int GL_ACTIVE_UNIFORM_MAX_LENGTH","int GL_ALIASED_LINE_WIDTH_RANGE","int GL_ALIASED_POINT_SIZE_RANGE","int GL_ALPHA","int GL_ALPHA_BITS","int GL_ALWAYS","int GL_ARRAY_BUFFER","int GL_ARRAY_BUFFER_BINDING","int GL_ATTACHED_SHADERS","int GL_BACK","int GL_BLEND","int GL_BLEND_COLOR","int GL_BLEND_DST_ALPHA","int GL_BLEND_DST_RGB","int GL_BLEND_EQUATION","int GL_BLEND_EQUATION_ALPHA","int GL_BLEND_EQUATION_RGB","int GL_BLEND_SRC_ALPHA","int GL_BLEND_SRC_RGB","int GL_BLUE_BITS","int GL_BOOL","int GL_BOOL_VEC2","int GL_BOOL_VEC3","int GL_BOOL_VEC4","int GL_BUFFER_SIZE","int GL_BUFFER_USAGE","int GL_BYTE","int GL_CCW","int GL_CLAMP_TO_EDGE","int GL_COLOR_ATTACHMENT0","int GL_COLOR_BUFFER_BIT","int GL_COLOR_CLEAR_VALUE","int GL_COLOR_WRITEMASK","int GL_COMPILE_STATUS","int GL_COMPRESSED_TEXTURE_FORMATS","int GL_CONSTANT_ALPHA","int GL_CONSTANT_COLOR","int GL_CULL_FACE","int GL_CULL_FACE_MODE","int GL_CURRENT_PROGRAM","int GL_CURRENT_VERTEX_ATTRIB","int GL_CW","int GL_DECR","int GL_DECR_WRAP","int GL_DELETE_STATUS","int GL_DEPTH_ATTACHMENT","int GL_DEPTH_BITS","int GL_DEPTH_BUFFER_BIT","int GL_DEPTH_CLEAR_VALUE","int GL_DEPTH_COMPONENT","int GL_DEPTH_COMPONENT16","int GL_DEPTH_FUNC","int GL_DEPTH_RANGE","int GL_DEPTH_TEST","int GL_DEPTH_WRITEMASK","int GL_DITHER","int GL_DONT_CARE","int GL_DST_ALPHA","int GL_DST_COLOR","int GL_DYNAMIC_DRAW","int GL_ELEMENT_ARRAY_BUFFER","int GL_ELEMENT_ARRAY_BUFFER_BINDING","int GL_EQUAL","int GL_EXTENSIONS","int GL_FALSE","int GL_FASTEST","int GL_FIXED","int GL_FLOAT","int GL_FLOAT_MAT2","int GL_FLOAT_MAT3","int GL_FLOAT_MAT4","int GL_FLOAT_VEC2","int GL_FLOAT_VEC3","int GL_FLOAT_VEC4","int GL_FRAGMENT_SHADER","int GL_FRAMEBUFFER","int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","int GL_FRAMEBUFFER_BINDING","int GL_FRAMEBUFFER_COMPLETE","int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT","int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS","int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","int GL_FRAMEBUFFER_UNSUPPORTED","int GL_FRONT","int GL_FRONT_AND_BACK","int GL_FRONT_FACE","int GL_FUNC_ADD","int GL_FUNC_REVERSE_SUBTRACT","int GL_FUNC_SUBTRACT","int GL_GENERATE_MIPMAP_HINT","int GL_GEQUAL","int GL_GREATER","int GL_GREEN_BITS","int GL_HIGH_FLOAT","int GL_HIGH_INT","int GL_IMPLEMENTATION_COLOR_READ_FORMAT","int GL_IMPLEMENTATION_COLOR_READ_TYPE","int GL_INCR","int GL_INCR_WRAP","int GL_INFO_LOG_LENGTH","int GL_INT","int GL_INT_VEC2","int GL_INT_VEC3","int GL_INT_VEC4","int GL_INVALID_ENUM","int GL_INVALID_FRAMEBUFFER_OPERATION","int GL_INVALID_OPERATION","int GL_INVALID_VALUE","int GL_INVERT","int GL_KEEP","int GL_LEQUAL","int GL_LESS","int GL_LINEAR","int GL_LINEAR_MIPMAP_LINEAR","int GL_LINEAR_MIPMAP_NEAREST","int GL_LINES","int GL_LINE_LOOP","int GL_LINE_STRIP","int GL_LINE_WIDTH","int GL_LINK_STATUS","int GL_LOW_FLOAT","int GL_LOW_INT","int GL_LUMINANCE","int GL_LUMINANCE_ALPHA","int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS","int GL_MAX_CUBE_MAP_TEXTURE_SIZE","int GL_MAX_FRAGMENT_UNIFORM_VECTORS","int GL_MAX_RENDERBUFFER_SIZE","int GL_MAX_TEXTURE_IMAGE_UNITS","int GL_MAX_TEXTURE_SIZE","int GL_MAX_VARYING_VECTORS","int GL_MAX_VERTEX_ATTRIBS","int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS","int GL_MAX_VERTEX_UNIFORM_VECTORS","int GL_MAX_VIEWPORT_DIMS","int GL_MEDIUM_FLOAT","int GL_MEDIUM_INT","int GL_MIRRORED_REPEAT","int GL_NEAREST","int GL_NEAREST_MIPMAP_LINEAR","int GL_NEAREST_MIPMAP_NEAREST","int GL_NEVER","int GL_NICEST","int GL_NONE","int GL_NOTEQUAL","int GL_NO_ERROR","int GL_NUM_COMPRESSED_TEXTURE_FORMATS","int GL_NUM_SHADER_BINARY_FORMATS","int GL_ONE","int GL_ONE_MINUS_CONSTANT_ALPHA","int GL_ONE_MINUS_CONSTANT_COLOR","int GL_ONE_MINUS_DST_ALPHA","int GL_ONE_MINUS_DST_COLOR","int GL_ONE_MINUS_SRC_ALPHA","int GL_ONE_MINUS_SRC_COLOR","int GL_OUT_OF_MEMORY","int GL_PACK_ALIGNMENT","int GL_POINTS","int GL_POLYGON_OFFSET_FACTOR","int GL_POLYGON_OFFSET_FILL","int GL_POLYGON_OFFSET_UNITS","int GL_RED_BITS","int GL_RENDERBUFFER","int GL_RENDERBUFFER_ALPHA_SIZE","int GL_RENDERBUFFER_BINDING","int GL_RENDERBUFFER_BLUE_SIZE","int GL_RENDERBUFFER_DEPTH_SIZE","int GL_RENDERBUFFER_GREEN_SIZE","int GL_RENDERBUFFER_HEIGHT","int GL_RENDERBUFFER_INTERNAL_FORMAT","int GL_RENDERBUFFER_RED_SIZE","int GL_RENDERBUFFER_STENCIL_SIZE","int GL_RENDERBUFFER_WIDTH","int GL_RENDERER","int GL_REPEAT","int GL_REPLACE","int GL_RGB","int GL_RGB565","int GL_RGB5_A1","int GL_RGBA","int GL_RGBA4","int GL_SAMPLER_2D","int GL_SAMPLER_CUBE","int GL_SAMPLES","int GL_SAMPLE_ALPHA_TO_COVERAGE","int GL_SAMPLE_BUFFERS","int GL_SAMPLE_COVERAGE","int GL_SAMPLE_COVERAGE_INVERT","int GL_SAMPLE_COVERAGE_VALUE","int GL_SCISSOR_BOX","int GL_SCISSOR_TEST","int GL_SHADER_BINARY_FORMATS","int GL_SHADER_COMPILER","int GL_SHADER_SOURCE_LENGTH","int GL_SHADER_TYPE","int GL_SHADING_LANGUAGE_VERSION","int GL_SHORT","int GL_SRC_ALPHA","int GL_SRC_ALPHA_SATURATE","int GL_SRC_COLOR","int GL_STATIC_DRAW","int GL_STENCIL_ATTACHMENT","int GL_STENCIL_BACK_FAIL","int GL_STENCIL_BACK_FUNC","int GL_STENCIL_BACK_PASS_DEPTH_FAIL","int GL_STENCIL_BACK_PASS_DEPTH_PASS","int GL_STENCIL_BACK_REF","int GL_STENCIL_BACK_VALUE_MASK","int GL_STENCIL_BACK_WRITEMASK","int GL_STENCIL_BITS","int GL_STENCIL_BUFFER_BIT","int GL_STENCIL_CLEAR_VALUE","int GL_STENCIL_FAIL","int GL_STENCIL_FUNC","int GL_STENCIL_INDEX","int GL_STENCIL_INDEX8","int GL_STENCIL_PASS_DEPTH_FAIL","int GL_STENCIL_PASS_DEPTH_PASS","int GL_STENCIL_REF","int GL_STENCIL_TEST","int GL_STENCIL_VALUE_MASK","int GL_STENCIL_WRITEMASK","int GL_STREAM_DRAW","int GL_SUBPIXEL_BITS","int GL_TEXTURE","int GL_TEXTURE0","int GL_TEXTURE1","int GL_TEXTURE10","int GL_TEXTURE11","int GL_TEXTURE12","int GL_TEXTURE13","int GL_TEXTURE14","int GL_TEXTURE15","int GL_TEXTURE16","int GL_TEXTURE17","int GL_TEXTURE18","int GL_TEXTURE19","int GL_TEXTURE2","int GL_TEXTURE20","int GL_TEXTURE21","int GL_TEXTURE22","int GL_TEXTURE23","int GL_TEXTURE24","int GL_TEXTURE25","int GL_TEXTURE26","int GL_TEXTURE27","int GL_TEXTURE28","int GL_TEXTURE29","int GL_TEXTURE3","int GL_TEXTURE30","int GL_TEXTURE31","int GL_TEXTURE4","int GL_TEXTURE5","int GL_TEXTURE6","int GL_TEXTURE7","int GL_TEXTURE8","int GL_TEXTURE9","int GL_TEXTURE_2D","int GL_TEXTURE_BINDING_2D","int GL_TEXTURE_BINDING_CUBE_MAP","int GL_TEXTURE_CUBE_MAP","int GL_TEXTURE_CUBE_MAP_NEGATIVE_X","int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y","int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z","int GL_TEXTURE_CUBE_MAP_POSITIVE_X","int GL_TEXTURE_CUBE_MAP_POSITIVE_Y","int GL_TEXTURE_CUBE_MAP_POSITIVE_Z","int GL_TEXTURE_MAG_FILTER","int GL_TEXTURE_MIN_FILTER","int GL_TEXTURE_WRAP_S","int GL_TEXTURE_WRAP_T","int GL_TRIANGLES","int GL_TRIANGLE_FAN","int GL_TRIANGLE_STRIP","int GL_TRUE","int GL_UNPACK_ALIGNMENT","int GL_UNSIGNED_BYTE","int GL_UNSIGNED_INT","int GL_UNSIGNED_SHORT","int GL_UNSIGNED_SHORT_4_4_4_4","int GL_UNSIGNED_SHORT_5_5_5_1","int GL_UNSIGNED_SHORT_5_6_5","int GL_VALIDATE_STATUS","int GL_VENDOR","int GL_VERSION","int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","int GL_VERTEX_ATTRIB_ARRAY_ENABLED","int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED","int GL_VERTEX_ATTRIB_ARRAY_POINTER","int GL_VERTEX_ATTRIB_ARRAY_SIZE","int GL_VERTEX_ATTRIB_ARRAY_STRIDE","int GL_VERTEX_ATTRIB_ARRAY_TYPE","int GL_VERTEX_SHADER","int GL_VIEWPORT","int GL_ZERO"],"class":"GLES30","constructors":[],"fields":[]}