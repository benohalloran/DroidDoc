{"methods":["int describeContents()","boolean equals(Object obj)","GameRequest freeze() Freeze a volatile representation into an immutable representation.","long getCreationTimestamp()","byte[] getData() Retrieves the data associated with the request.","long getExpirationTimestamp()","Game getGame() Retrieves the game associated with this request.","int getRecipientStatus(String playerId) Retrieves the status of the request for a given recipient.","List<Player> getRecipients() Retrieves the information about all the players that the request was sent to.","String getRequestId() Retrieves the ID of this request.","Player getSender() Retrieves the information about the player that sent the request.","int getStatus() Retrieves the status of the request as an overall status depending on all recipients.","int getType() Retrieves the type of this request.","int hashCode()","boolean isConsumed(String playerId) Retrieves whether the request was consumed by a specific recipient.","boolean isDataValid() Check to see if this object is valid for use.","String toString()","void writeToParcel(Parcel dest, int flags)","[Expand] Inherited Methods","From class java.lang.Object Object clone() boolean equals(Object arg0) void finalize() final Class<?> getClass() int hashCode() final void notify() final void notifyAll() String toString() final void wait() final void wait(long arg0, int arg1) final void wait(long arg0)","Object clone()","boolean equals(Object arg0)","void finalize()","final Class<?> getClass()","int hashCode()","final void notify()","final void notifyAll()","String toString()","final void wait()","final void wait(long arg0, int arg1)","final void wait(long arg0)","From interface android.os.Parcelable abstract int describeContents() abstract void writeToParcel(Parcel arg0, int arg1)","abstract int describeContents()","abstract void writeToParcel(Parcel arg0, int arg1)","From interface com.google.android.gms.common.data.Freezable abstract T freeze() Freeze a volatile representation into an immutable representation. abstract boolean isDataValid() Check to see if this object is valid for use.","abstract T freeze() Freeze a volatile representation into an immutable representation.","abstract boolean isDataValid() Check to see if this object is valid for use.","From interface com.google.android.gms.games.request.GameRequest abstract long getCreationTimestamp() abstract byte[] getData() Retrieves the data associated with the request. abstract long getExpirationTimestamp() abstract Game getGame() Retrieves the game associated with this request. abstract int getRecipientStatus(String playerId) Retrieves the status of the request for a given recipient. abstract List<Player> getRecipients() Retrieves the information about all the players that the request was sent to. abstract String getRequestId() Retrieves the ID of this request. abstract Player getSender() Retrieves the information about the player that sent the request. abstract int getStatus() Retrieves the status of the request as an overall status depending on all recipients. abstract int getType() Retrieves the type of this request. abstract boolean isConsumed(String playerId) Retrieves whether the request was consumed by a specific recipient.","abstract long getCreationTimestamp()","abstract byte[] getData() Retrieves the data associated with the request.","abstract long getExpirationTimestamp()","abstract Game getGame() Retrieves the game associated with this request.","abstract int getRecipientStatus(String playerId) Retrieves the status of the request for a given recipient.","abstract List<Player> getRecipients() Retrieves the information about all the players that the request was sent to.","abstract String getRequestId() Retrieves the ID of this request.","abstract Player getSender() Retrieves the information about the player that sent the request.","abstract int getStatus() Retrieves the status of the request as an overall status depending on all recipients.","abstract int getType() Retrieves the type of this request.","abstract boolean isConsumed(String playerId) Retrieves whether the request was consumed by a specific recipient."],"package":"com.google.android.gms.games.request","constants":["[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR int PARCELABLE_WRITE_RETURN_VALUE","int CONTENTS_FILE_DESCRIPTOR","int PARCELABLE_WRITE_RETURN_VALUE","From interface com.google.android.gms.common.internal.safeparcel.SafeParcelable String NULL","String NULL","From interface com.google.android.gms.games.request.GameRequest int RECIPIENT_STATUS_ACCEPTED Constant indicating that the request has been accepted. int RECIPIENT_STATUS_PENDING Constant indicating that the request is still pending. int STATUS_ACCEPTED Constant indicating that this request has been accepted. int STATUS_PENDING Constant indicating that this request has not been acted on yet. int TYPE_ALL Array of all the request type constants. int TYPE_GIFT Request type indicating that the sender is giving something to the recipient. int TYPE_WISH Request type indicating that the sender is asking for something from the recipient.","int RECIPIENT_STATUS_ACCEPTED Constant indicating that the request has been accepted.","int RECIPIENT_STATUS_PENDING Constant indicating that the request is still pending.","int STATUS_ACCEPTED Constant indicating that this request has been accepted.","int STATUS_PENDING Constant indicating that this request has not been acted on yet.","int TYPE_ALL Array of all the request type constants.","int TYPE_GIFT Request type indicating that the sender is giving something to the recipient.","int TYPE_WISH Request type indicating that the sender is asking for something from the recipient."],"class":"GameRequestEntity","constructors":[],"fields":["public static final GameRequestEntityCreator CREATOR"]}