{"methods":["abstract void flush() Writes out all pending buffered data over the open connection.","abstract boolean isResponseAvailable(int timeout) Checks if response data is available from the connection.","abstract void receiveResponseEntity(HttpResponse response) Receives the next response entity available from this connection and attaches it to an existing HttpResponse object.","abstract HttpResponse receiveResponseHeader() Receives the request line and headers of the next response available from this connection.","abstract void sendRequestEntity(HttpEntityEnclosingRequest request) Sends the request entity over the connection.","abstract void sendRequestHeader(HttpRequest request) Sends the request line and all headers over the connection.","[Expand] Inherited Methods","From interface org.apache.http.HttpConnection abstract void close() Closes this connection gracefully. abstract HttpConnectionMetrics getMetrics() Returns a collection of connection metrcis abstract int getSocketTimeout() Returns the socket timeout value. abstract boolean isOpen() Checks if this connection is open. abstract boolean isStale() Checks whether this connection has gone down. abstract void setSocketTimeout(int timeout) Sets the socket timeout value. abstract void shutdown() Force-closes this connection.","abstract void close() Closes this connection gracefully.","abstract HttpConnectionMetrics getMetrics() Returns a collection of connection metrcis","abstract int getSocketTimeout() Returns the socket timeout value.","abstract boolean isOpen() Checks if this connection is open.","abstract boolean isStale() Checks whether this connection has gone down.","abstract void setSocketTimeout(int timeout) Sets the socket timeout value.","abstract void shutdown() Force-closes this connection."],"package":"org.apache.http","constants":[],"class":"HttpClientConnection","constructors":[],"fields":[]}