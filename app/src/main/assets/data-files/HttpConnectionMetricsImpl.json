{"methods":["Object getMetric(String metricName) Return the value for the specified metric.","long getReceivedBytesCount() Returns the number of bytes transferred over the connection, 0 if not available.","long getRequestCount() Returns the number of requests transferred over the connection, 0 if not available.","long getResponseCount() Returns the number of responses transferred over the connection, 0 if not available.","long getSentBytesCount() Returns the number of bytes transferred over the connection, 0 if not available.","void incrementRequestCount()","void incrementResponseCount()","void reset() Resets the counts","void setMetric(String metricName, Object obj)","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.apache.http.HttpConnectionMetrics abstract Object getMetric(String metricName) Return the value for the specified metric. abstract long getReceivedBytesCount() Returns the number of bytes transferred over the connection, 0 if not available. abstract long getRequestCount() Returns the number of requests transferred over the connection, 0 if not available. abstract long getResponseCount() Returns the number of responses transferred over the connection, 0 if not available. abstract long getSentBytesCount() Returns the number of bytes transferred over the connection, 0 if not available. abstract void reset() Resets the counts","abstract Object getMetric(String metricName) Return the value for the specified metric.","abstract long getReceivedBytesCount() Returns the number of bytes transferred over the connection, 0 if not available.","abstract long getRequestCount() Returns the number of requests transferred over the connection, 0 if not available.","abstract long getResponseCount() Returns the number of responses transferred over the connection, 0 if not available.","abstract long getSentBytesCount() Returns the number of bytes transferred over the connection, 0 if not available.","abstract void reset() Resets the counts"],"package":"org.apache.http.impl","constants":["String RECEIVED_BYTES_COUNT","String REQUEST_COUNT","String RESPONSE_COUNT","String SENT_BYTES_COUNT"],"class":"HttpConnectionMetricsImpl","constructors":[],"fields":[]}