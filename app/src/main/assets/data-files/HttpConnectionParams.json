{"methods":["static int getConnectionTimeout(HttpParams params) Returns the timeout until a connection is etablished.","static int getLinger(HttpParams params) Returns linger-on-close timeout.","static int getSoTimeout(HttpParams params) Returns the default socket timeout (SO_TIMEOUT) in milliseconds which is the timeout for waiting for data.","static int getSocketBufferSize(HttpParams params)","static boolean getTcpNoDelay(HttpParams params) Tests if Nagle's algorithm is to be used.","static boolean isStaleCheckingEnabled(HttpParams params) Tests whether stale connection check is to be used.","static void setConnectionTimeout(HttpParams params, int timeout) Sets the timeout until a connection is etablished.","static void setLinger(HttpParams params, int value) Returns linger-on-close timeout.","static void setSoTimeout(HttpParams params, int timeout) Sets the default socket timeout (SO_TIMEOUT) in milliseconds which is the timeout for waiting for data.","static void setSocketBufferSize(HttpParams params, int size)","static void setStaleCheckingEnabled(HttpParams params, boolean value) Defines whether stale connection check is to be used.","static void setTcpNoDelay(HttpParams params, boolean value) Determines whether Nagle's algorithm is to be used.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"org.apache.http.params","constants":["[Expand] Inherited Constants","From interface org.apache.http.params.CoreConnectionPNames String CONNECTION_TIMEOUT Determines the timeout until a connection is etablished. String MAX_HEADER_COUNT Determines the maximum HTTP header count allowed. String MAX_LINE_LENGTH Determines the maximum line length limit. String SOCKET_BUFFER_SIZE Determines the size of the internal socket buffer used to buffer data while receiving / transmitting HTTP messages. String SO_LINGER Sets SO_LINGER with the specified linger time in seconds. String SO_TIMEOUT Defines the default socket timeout (SO_TIMEOUT) in milliseconds which is the timeout for waiting for data. String STALE_CONNECTION_CHECK Determines whether stale connection check is to be used. String TCP_NODELAY Determines whether Nagle's algorithm is to be used.","String CONNECTION_TIMEOUT Determines the timeout until a connection is etablished.","String MAX_HEADER_COUNT Determines the maximum HTTP header count allowed.","String MAX_LINE_LENGTH Determines the maximum line length limit.","String SOCKET_BUFFER_SIZE Determines the size of the internal socket buffer used to buffer data while receiving / transmitting HTTP messages.","String SO_LINGER Sets SO_LINGER with the specified linger time in seconds.","String SO_TIMEOUT Defines the default socket timeout (SO_TIMEOUT) in milliseconds which is the timeout for waiting for data.","String STALE_CONNECTION_CHECK Determines whether stale connection check is to be used.","String TCP_NODELAY Determines whether Nagle's algorithm is to be used."],"class":"HttpConnectionParams","constructors":[],"fields":[]}