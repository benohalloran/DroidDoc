{"methods":["abstract void abort() Aborts execution of the request.","abstract String getMethod() Returns the HTTP method this request uses, such as GET, PUT, POST, or other.","abstract URI getURI() Returns the URI this request uses, such as http://example.org/path/to/file.","abstract boolean isAborted() Tests if the request execution has been aborted.","[Expand] Inherited Methods","From interface org.apache.http.HttpMessage abstract void addHeader(Header header) Adds a header to this message. abstract void addHeader(String name, String value) Adds a header to this message. abstract boolean containsHeader(String name) Checks if a certain header is present in this message. abstract Header[] getAllHeaders() Returns all the headers of this message. abstract Header getFirstHeader(String name) Returns the first header with a specified name of this message. abstract Header[] getHeaders(String name) Returns all the headers with a specified name of this message. abstract Header getLastHeader(String name) Returns the last header with a specified name of this message. abstract HttpParams getParams() Returns the parameters effective for this message as set by setParams(HttpParams). abstract ProtocolVersion getProtocolVersion() Returns the protocol version this message is compatible with. abstract HeaderIterator headerIterator(String name) Returns an iterator of the headers with a given name. abstract HeaderIterator headerIterator() Returns an iterator of all the headers. abstract void removeHeader(Header header) Removes a header from this message. abstract void removeHeaders(String name) Removes all headers with a certain name from this message. abstract void setHeader(Header header) Overwrites the first header with the same name. abstract void setHeader(String name, String value) Overwrites the first header with the same name. abstract void setHeaders(Header[] headers) Overwrites all the headers in the message. abstract void setParams(HttpParams params) Provides parameters to be used for the processing of this message.","abstract void addHeader(Header header) Adds a header to this message.","abstract void addHeader(String name, String value) Adds a header to this message.","abstract boolean containsHeader(String name) Checks if a certain header is present in this message.","abstract Header[] getAllHeaders() Returns all the headers of this message.","abstract Header getFirstHeader(String name) Returns the first header with a specified name of this message.","abstract Header[] getHeaders(String name) Returns all the headers with a specified name of this message.","abstract Header getLastHeader(String name) Returns the last header with a specified name of this message.","abstract HttpParams getParams() Returns the parameters effective for this message as set by setParams(HttpParams).","abstract ProtocolVersion getProtocolVersion() Returns the protocol version this message is compatible with.","abstract HeaderIterator headerIterator(String name) Returns an iterator of the headers with a given name.","abstract HeaderIterator headerIterator() Returns an iterator of all the headers.","abstract void removeHeader(Header header) Removes a header from this message.","abstract void removeHeaders(String name) Removes all headers with a certain name from this message.","abstract void setHeader(Header header) Overwrites the first header with the same name.","abstract void setHeader(String name, String value) Overwrites the first header with the same name.","abstract void setHeaders(Header[] headers) Overwrites all the headers in the message.","abstract void setParams(HttpParams params) Provides parameters to be used for the processing of this message.","From interface org.apache.http.HttpRequest abstract RequestLine getRequestLine() Returns the request line of this request.","abstract RequestLine getRequestLine() Returns the request line of this request."],"package":"org.apache.http.client.methods","constants":[],"class":"HttpUriRequest","constructors":[],"fields":[]}