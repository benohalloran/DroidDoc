{"methods":["boolean isAnyLocalAddress() Returns whether this is the IPv6 unspecified wildcard address :: or the IPv4 \"any\" address, 0.0.0.0.","boolean isLinkLocalAddress() Returns whether this address is a link-local address or not.","boolean isLoopbackAddress() Returns whether this address is a loopback address or not.","boolean isMCGlobal() Returns whether this address is a global multicast address or not.","boolean isMCLinkLocal() Returns whether this address is a link-local multicast address or not.","boolean isMCNodeLocal() Returns whether this address is a node-local multicast address or not.","boolean isMCOrgLocal() Returns whether this address is a organization-local multicast address or not.","boolean isMCSiteLocal() Returns whether this address is a site-local multicast address or not.","boolean isMulticastAddress() Returns whether this address is a multicast address or not.","boolean isSiteLocalAddress() Returns whether this address is a site-local address or not.","[Expand] Inherited Methods","From class java.net.InetAddress boolean equals(Object obj) Compares this InetAddress instance against the specified address in obj. byte[] getAddress() Returns the IP address represented by this InetAddress instance as a byte array. static InetAddress[] getAllByName(String host) Gets all IP addresses associated with the given host identified by name or literal IP address. static InetAddress getByAddress(String hostName, byte[] ipAddress) Returns an InetAddress corresponding to the given network-order bytes ipAddress and scopeId. static InetAddress getByAddress(byte[] ipAddress) Equivalent to getByAddress(null, ipAddress). static InetAddress getByName(String host) Returns the address of a host according to the given host string name host. String getCanonicalHostName() Returns the fully qualified hostname corresponding to this IP address. String getHostAddress() Returns the numeric representation of this IP address (such as \"127.0.0.1\"). String getHostName() Returns the host name corresponding to this IP address. static InetAddress getLocalHost() Returns an InetAddress for the local host if possible, or the loopback address otherwise. static InetAddress getLoopbackAddress() Returns the IPv6 loopback address ::1 or the IPv4 loopback address 127.0.0.1. int hashCode() Gets the hashcode of the represented IP address. boolean isAnyLocalAddress() Returns whether this is the IPv6 unspecified wildcard address :: or the IPv4 \"any\" address, 0.0.0.0. boolean isLinkLocalAddress() Returns whether this address is a link-local address or not. boolean isLoopbackAddress() Returns whether this address is a loopback address or not. boolean isMCGlobal() Returns whether this address is a global multicast address or not. boolean isMCLinkLocal() Returns whether this address is a link-local multicast address or not. boolean isMCNodeLocal() Returns whether this address is a node-local multicast address or not. boolean isMCOrgLocal() Returns whether this address is a organization-local multicast address or not. boolean isMCSiteLocal() Returns whether this address is a site-local multicast address or not. boolean isMulticastAddress() Returns whether this address is a multicast address or not. boolean isReachable(NetworkInterface networkInterface, int ttl, int timeout) Tries to reach this InetAddress. boolean isReachable(int timeout) Tries to reach this InetAddress. boolean isSiteLocalAddress() Returns whether this address is a site-local address or not. String toString() Returns a string containing the host name (if available) and host address.","boolean equals(Object obj) Compares this InetAddress instance against the specified address in obj.","byte[] getAddress() Returns the IP address represented by this InetAddress instance as a byte array.","static InetAddress[] getAllByName(String host) Gets all IP addresses associated with the given host identified by name or literal IP address.","static InetAddress getByAddress(String hostName, byte[] ipAddress) Returns an InetAddress corresponding to the given network-order bytes ipAddress and scopeId.","static InetAddress getByAddress(byte[] ipAddress) Equivalent to getByAddress(null, ipAddress).","static InetAddress getByName(String host) Returns the address of a host according to the given host string name host.","String getCanonicalHostName() Returns the fully qualified hostname corresponding to this IP address.","String getHostAddress() Returns the numeric representation of this IP address (such as \"127.0.0.1\").","String getHostName() Returns the host name corresponding to this IP address.","static InetAddress getLocalHost() Returns an InetAddress for the local host if possible, or the loopback address otherwise.","static InetAddress getLoopbackAddress() Returns the IPv6 loopback address ::1 or the IPv4 loopback address 127.0.0.1.","int hashCode() Gets the hashcode of the represented IP address.","boolean isAnyLocalAddress() Returns whether this is the IPv6 unspecified wildcard address :: or the IPv4 \"any\" address, 0.0.0.0.","boolean isLinkLocalAddress() Returns whether this address is a link-local address or not.","boolean isLoopbackAddress() Returns whether this address is a loopback address or not.","boolean isMCGlobal() Returns whether this address is a global multicast address or not.","boolean isMCLinkLocal() Returns whether this address is a link-local multicast address or not.","boolean isMCNodeLocal() Returns whether this address is a node-local multicast address or not.","boolean isMCOrgLocal() Returns whether this address is a organization-local multicast address or not.","boolean isMCSiteLocal() Returns whether this address is a site-local multicast address or not.","boolean isMulticastAddress() Returns whether this address is a multicast address or not.","boolean isReachable(NetworkInterface networkInterface, int ttl, int timeout) Tries to reach this InetAddress.","boolean isReachable(int timeout) Tries to reach this InetAddress.","boolean isSiteLocalAddress() Returns whether this address is a site-local address or not.","String toString() Returns a string containing the host name (if available) and host address.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.net","constants":[],"class":"Inet4Address","constructors":[],"fields":[]}