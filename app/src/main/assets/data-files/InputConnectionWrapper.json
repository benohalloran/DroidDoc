{"methods":["boolean beginBatchEdit() Tell the editor that you are starting a batch of editor operations.","boolean clearMetaKeyStates(int states) Clear the given meta key pressed states in the given input connection.","boolean commitCompletion(CompletionInfo text) Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions(CompletionInfo[]) or InputMethodManager#displayCompletions(View, CompletionInfo[]).","boolean commitCorrection(CorrectionInfo correctionInfo) Commit a correction automatically performed on the raw user's input.","boolean commitText(CharSequence text, int newCursorPosition) Commit text to the text box and set the new cursor position.","boolean deleteSurroundingText(int beforeLength, int afterLength) Delete beforeLength characters of text before the current cursor position, and delete afterLength characters of text after the current cursor position, excluding the selection.","boolean endBatchEdit() Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit().","boolean finishComposingText() Have the text editor finish whatever composing text is currently active.","int getCursorCapsMode(int reqModes) Retrieve the current capitalization mode in effect at the current cursor position in the text.","ExtractedText getExtractedText(ExtractedTextRequest request, int flags) Retrieve the current text in the input connection's editor, and monitor for any changes to it.","CharSequence getSelectedText(int flags) Gets the selected text, if any.","CharSequence getTextAfterCursor(int n, int flags) Get n characters of text after the current cursor position.","CharSequence getTextBeforeCursor(int n, int flags) Get n characters of text before the current cursor position.","boolean performContextMenuAction(int id) Perform a context menu action on the field.","boolean performEditorAction(int editorAction) Have the editor perform an action it has said it can do.","boolean performPrivateCommand(String action, Bundle data) API to send private commands from an input method to its connected editor.","boolean reportFullscreenMode(boolean enabled) Called by the IME to tell the client when it switches between fullscreen and normal modes.","boolean requestCursorUpdates(int cursorUpdateMode) Called by the input method to ask the editor for calling back updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) to notify cursor/anchor locations.","boolean sendKeyEvent(KeyEvent event) Send a key event to the process that is currently attached through this input connection.","boolean setComposingRegion(int start, int end) Mark a certain region of text as composing text.","boolean setComposingText(CharSequence text, int newCursorPosition) Replace the currently composing text with the given text, and set the new cursor position.","boolean setSelection(int start, int end) Set the selection of the text editor.","void setTarget(InputConnection target) Change the target of the input connection.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.view.inputmethod.InputConnection abstract boolean beginBatchEdit() Tell the editor that you are starting a batch of editor operations. abstract boolean clearMetaKeyStates(int states) Clear the given meta key pressed states in the given input connection. abstract boolean commitCompletion(CompletionInfo text) Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions(CompletionInfo[]) or InputMethodManager#displayCompletions(View, CompletionInfo[]). abstract boolean commitCorrection(CorrectionInfo correctionInfo) Commit a correction automatically performed on the raw user's input. abstract boolean commitText(CharSequence text, int newCursorPosition) Commit text to the text box and set the new cursor position. abstract boolean deleteSurroundingText(int beforeLength, int afterLength) Delete beforeLength characters of text before the current cursor position, and delete afterLength characters of text after the current cursor position, excluding the selection. abstract boolean endBatchEdit() Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit(). abstract boolean finishComposingText() Have the text editor finish whatever composing text is currently active. abstract int getCursorCapsMode(int reqModes) Retrieve the current capitalization mode in effect at the current cursor position in the text. abstract ExtractedText getExtractedText(ExtractedTextRequest request, int flags) Retrieve the current text in the input connection's editor, and monitor for any changes to it. abstract CharSequence getSelectedText(int flags) Gets the selected text, if any. abstract CharSequence getTextAfterCursor(int n, int flags) Get n characters of text after the current cursor position. abstract CharSequence getTextBeforeCursor(int n, int flags) Get n characters of text before the current cursor position. abstract boolean performContextMenuAction(int id) Perform a context menu action on the field. abstract boolean performEditorAction(int editorAction) Have the editor perform an action it has said it can do. abstract boolean performPrivateCommand(String action, Bundle data) API to send private commands from an input method to its connected editor. abstract boolean reportFullscreenMode(boolean enabled) Called by the IME to tell the client when it switches between fullscreen and normal modes. abstract boolean requestCursorUpdates(int cursorUpdateMode) Called by the input method to ask the editor for calling back updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) to notify cursor/anchor locations. abstract boolean sendKeyEvent(KeyEvent event) Send a key event to the process that is currently attached through this input connection. abstract boolean setComposingRegion(int start, int end) Mark a certain region of text as composing text. abstract boolean setComposingText(CharSequence text, int newCursorPosition) Replace the currently composing text with the given text, and set the new cursor position. abstract boolean setSelection(int start, int end) Set the selection of the text editor.","abstract boolean beginBatchEdit() Tell the editor that you are starting a batch of editor operations.","abstract boolean clearMetaKeyStates(int states) Clear the given meta key pressed states in the given input connection.","abstract boolean commitCompletion(CompletionInfo text) Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions(CompletionInfo[]) or InputMethodManager#displayCompletions(View, CompletionInfo[]).","abstract boolean commitCorrection(CorrectionInfo correctionInfo) Commit a correction automatically performed on the raw user's input.","abstract boolean commitText(CharSequence text, int newCursorPosition) Commit text to the text box and set the new cursor position.","abstract boolean deleteSurroundingText(int beforeLength, int afterLength) Delete beforeLength characters of text before the current cursor position, and delete afterLength characters of text after the current cursor position, excluding the selection.","abstract boolean endBatchEdit() Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit().","abstract boolean finishComposingText() Have the text editor finish whatever composing text is currently active.","abstract int getCursorCapsMode(int reqModes) Retrieve the current capitalization mode in effect at the current cursor position in the text.","abstract ExtractedText getExtractedText(ExtractedTextRequest request, int flags) Retrieve the current text in the input connection's editor, and monitor for any changes to it.","abstract CharSequence getSelectedText(int flags) Gets the selected text, if any.","abstract CharSequence getTextAfterCursor(int n, int flags) Get n characters of text after the current cursor position.","abstract CharSequence getTextBeforeCursor(int n, int flags) Get n characters of text before the current cursor position.","abstract boolean performContextMenuAction(int id) Perform a context menu action on the field.","abstract boolean performEditorAction(int editorAction) Have the editor perform an action it has said it can do.","abstract boolean performPrivateCommand(String action, Bundle data) API to send private commands from an input method to its connected editor.","abstract boolean reportFullscreenMode(boolean enabled) Called by the IME to tell the client when it switches between fullscreen and normal modes.","abstract boolean requestCursorUpdates(int cursorUpdateMode) Called by the input method to ask the editor for calling back updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) to notify cursor/anchor locations.","abstract boolean sendKeyEvent(KeyEvent event) Send a key event to the process that is currently attached through this input connection.","abstract boolean setComposingRegion(int start, int end) Mark a certain region of text as composing text.","abstract boolean setComposingText(CharSequence text, int newCursorPosition) Replace the currently composing text with the given text, and set the new cursor position.","abstract boolean setSelection(int start, int end) Set the selection of the text editor."],"package":"android.view.inputmethod","constants":["[Expand] Inherited Constants","From interface android.view.inputmethod.InputConnection int CURSOR_UPDATE_IMMEDIATE The editor is requested to call updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) at once, as soon as possible, regardless of cursor/anchor position changes. int CURSOR_UPDATE_MONITOR The editor is requested to call updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) whenever cursor/anchor position is changed. int GET_EXTRACTED_TEXT_MONITOR Flag for use with getExtractedText(ExtractedTextRequest, int) to indicate you would like to receive updates when the extracted text changes. int GET_TEXT_WITH_STYLES Flag for use with getTextAfterCursor(int, int) and getTextBeforeCursor(int, int) to have style information returned along with the text.","int CURSOR_UPDATE_IMMEDIATE The editor is requested to call updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) at once, as soon as possible, regardless of cursor/anchor position changes.","int CURSOR_UPDATE_MONITOR The editor is requested to call updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) whenever cursor/anchor position is changed.","int GET_EXTRACTED_TEXT_MONITOR Flag for use with getExtractedText(ExtractedTextRequest, int) to indicate you would like to receive updates when the extracted text changes.","int GET_TEXT_WITH_STYLES Flag for use with getTextAfterCursor(int, int) and getTextBeforeCursor(int, int) to have style information returned along with the text."],"class":"InputConnectionWrapper","constructors":[],"fields":[]}