{"methods":["abstract void attachToken(IBinder token) Called first thing after an input method is created, this supplies a unique token for the session it has with the system service.","abstract void bindInput(InputBinding binding) Bind a new application environment in to the input method, so that it can later start and stop input processing.","abstract void changeInputMethodSubtype(InputMethodSubtype subtype) Notify that the input method subtype is being changed in the same input method.","abstract void createSession(InputMethod.SessionCallback callback) Create a new InputMethodSession that can be handed to client applications for interacting with the input method.","abstract void hideSoftInput(int flags, ResultReceiver resultReceiver) Request that any soft input part of the input method be hidden from the user.","abstract void restartInput(InputConnection inputConnection, EditorInfo attribute) This method is called when the state of this input method needs to be reset.","abstract void revokeSession(InputMethodSession session) Disable and destroy a session that was previously created with createSession(android.view.inputmethod.InputMethod.SessionCallback).","abstract void setSessionEnabled(InputMethodSession session, boolean enabled) Control whether a particular input method session is active.","abstract void showSoftInput(int flags, ResultReceiver resultReceiver) Request that any soft input part of the input method be shown to the user.","abstract void startInput(InputConnection inputConnection, EditorInfo info) This method is called when the application starts to receive text and it is ready for this input method to process received events and send result text back to the application.","abstract void unbindInput() Unbind an application environment, called when the information previously set by bindInput(InputBinding) is no longer valid for this input method."],"package":"android.view.inputmethod","constants":["String SERVICE_INTERFACE This is the interface name that a service implementing an input method should say that it supports -- that is, this is the action it uses for its intent filter.","String SERVICE_META_DATA Name under which an InputMethod service component publishes information about itself.","int SHOW_EXPLICIT Flag for showSoftInput(int, ResultReceiver): this show has been explicitly requested by the user.","int SHOW_FORCED Flag for showSoftInput(int, ResultReceiver): this show has been forced to happen by the user."],"class":"InputMethod","constructors":[],"fields":[]}