{"methods":["int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","String toString() Returns a string containing a concise, human-readable description of this object.","void writeToParcel(Parcel dest, int parcelableFlags)","[Expand] Inherited Methods","From class android.content.pm.PackageItemInfo void dumpBack(Printer pw, String prefix) void dumpFront(Printer pw, String prefix) Drawable loadBanner(PackageManager pm) Retrieve the current graphical banner associated with this item. Drawable loadIcon(PackageManager pm) Retrieve the current graphical icon associated with this item. CharSequence loadLabel(PackageManager pm) Retrieve the current textual label associated with this item. Drawable loadLogo(PackageManager pm) Retrieve the current graphical logo associated with this item. XmlResourceParser loadXmlMetaData(PackageManager pm, String name) Load an XML resource attached to the meta-data of this item. void writeToParcel(Parcel dest, int parcelableFlags)","void dumpBack(Printer pw, String prefix)","void dumpFront(Printer pw, String prefix)","Drawable loadBanner(PackageManager pm) Retrieve the current graphical banner associated with this item.","Drawable loadIcon(PackageManager pm) Retrieve the current graphical icon associated with this item.","CharSequence loadLabel(PackageManager pm) Retrieve the current textual label associated with this item.","Drawable loadLogo(PackageManager pm) Retrieve the current graphical logo associated with this item.","XmlResourceParser loadXmlMetaData(PackageManager pm, String name) Load an XML resource attached to the meta-data of this item.","void writeToParcel(Parcel dest, int parcelableFlags)","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.content.pm","constants":["[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"InstrumentationInfo","constructors":[],"fields":["public static final Creator<InstrumentationInfo> CREATOR","public String dataDir Full path to a directory assigned to the package for its persistent data.","public boolean functionalTest Specifies whether or not to run this instrumentation as a functional test","public boolean handleProfiling Specifies whether or not this instrumentation will handle profiling.","public String publicSourceDir Full path to the publicly available parts of sourceDir, including resources and manifest.","public String sourceDir Full path to the base APK for this application.","public String[] splitPublicSourceDirs Full path to the publicly available parts of splitSourceDirs, including resources and manifest.","public String[] splitSourceDirs Full paths to zero or more split APKs that, when combined with the base APK defined in sourceDir, form a complete application.","public String targetPackage The name of the application package being instrumented."]}