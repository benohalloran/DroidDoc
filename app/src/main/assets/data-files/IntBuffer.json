{"methods":["static IntBuffer allocate(int capacity) Creates an int buffer based on a newly allocated int array.","final int[] array() Returns the array that backs this buffer (optional operation).","final int arrayOffset() Returns the offset into the array returned by array of the first element of the buffer (optional operation).","abstract IntBuffer asReadOnlyBuffer() Returns a read-only buffer that shares its content with this buffer.","abstract IntBuffer compact() Compacts this int buffer.","int compareTo(IntBuffer otherBuffer) Compares the remaining ints of this buffer to another int buffer's remaining ints.","abstract IntBuffer duplicate() Returns a duplicated buffer that shares its content with this buffer.","boolean equals(Object other) Checks whether this int buffer is equal to another object.","abstract int get(int index) Returns an int at the specified index; the position is not changed.","IntBuffer get(int[] dst) Reads ints from the current position into the specified int array and increases the position by the number of ints read.","IntBuffer get(int[] dst, int dstOffset, int intCount) Reads ints from the current position into the specified int array, starting from the specified offset, and increases the position by the number of ints read.","abstract int get() Returns the int at the current position and increases the position by 1.","final boolean hasArray() Returns true if array and arrayOffset won't throw.","int hashCode() Calculates this buffer's hash code from the remaining chars.","abstract boolean isDirect() Indicates whether this buffer is direct.","abstract ByteOrder order() Returns the byte order used by this buffer when converting ints from/to bytes.","IntBuffer put(IntBuffer src) Writes all the remaining ints of the src int buffer to this buffer's current position, and increases both buffers' position by the number of ints copied.","IntBuffer put(int[] src, int srcOffset, int intCount) Writes ints from the given int array, starting from the specified offset, to the current position and increases the position by the number of ints written.","abstract IntBuffer put(int index, int i) Write a int to the specified index of this buffer; the position is not changed.","final IntBuffer put(int[] src) Writes ints from the given int array to the current position and increases the position by the number of ints written.","abstract IntBuffer put(int i) Writes the given int to the current position and increases the position by 1.","abstract IntBuffer slice() Returns a sliced buffer that shares its content with this buffer.","static IntBuffer wrap(int[] array) Creates a new int buffer by wrapping the given int array.","static IntBuffer wrap(int[] array, int start, int intCount) Creates a new int buffer by wrapping the given int array.","[Expand] Inherited Methods","From class java.nio.Buffer abstract Object array() Returns the array that backs this buffer (optional operation). abstract int arrayOffset() Returns the offset into the array returned by array of the first element of the buffer (optional operation). final int capacity() Returns the capacity of this buffer. final Buffer clear() Clears this buffer. final Buffer flip() Flips this buffer. abstract boolean hasArray() Returns true if array and arrayOffset won't throw. final boolean hasRemaining() Indicates if there are elements remaining in this buffer, that is if position < limit. abstract boolean isDirect() Returns true if this is a direct buffer. abstract boolean isReadOnly() Indicates whether this buffer is read-only. final int limit() Returns the limit of this buffer. final Buffer limit(int newLimit) Sets the limit of this buffer. final Buffer mark() Marks the current position, so that the position may return to this point later by calling reset(). final Buffer position(int newPosition) Sets the position of this buffer. final int position() Returns the position of this buffer. final int remaining() Returns the number of remaining elements in this buffer, that is limit - position. final Buffer reset() Resets the position of this buffer to the mark. final Buffer rewind() Rewinds this buffer. String toString() Returns a string describing this buffer.","abstract Object array() Returns the array that backs this buffer (optional operation).","abstract int arrayOffset() Returns the offset into the array returned by array of the first element of the buffer (optional operation).","final int capacity() Returns the capacity of this buffer.","final Buffer clear() Clears this buffer.","final Buffer flip() Flips this buffer.","abstract boolean hasArray() Returns true if array and arrayOffset won't throw.","final boolean hasRemaining() Indicates if there are elements remaining in this buffer, that is if position < limit.","abstract boolean isDirect() Returns true if this is a direct buffer.","abstract boolean isReadOnly() Indicates whether this buffer is read-only.","final int limit() Returns the limit of this buffer.","final Buffer limit(int newLimit) Sets the limit of this buffer.","final Buffer mark() Marks the current position, so that the position may return to this point later by calling reset().","final Buffer position(int newPosition) Sets the position of this buffer.","final int position() Returns the position of this buffer.","final int remaining() Returns the number of remaining elements in this buffer, that is limit - position.","final Buffer reset() Resets the position of this buffer to the mark.","final Buffer rewind() Rewinds this buffer.","String toString() Returns a string describing this buffer.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order."],"package":"java.nio","constants":[],"class":"IntBuffer","constructors":[],"fields":[]}