{"methods":["void clear()","int getItemCount() Returns the total number of items in the data set hold by the adapter.","long getItemId(int position) Return the stable ID for the item at position.","int getItemViewType(int position) Return the view type of the item at position for the purposes of view recycling.","ArrayList<Presenter> getPresenterMapper()","ItemBridgeAdapter.Wrapper getWrapper()","void onBindViewHolder(RecyclerView.ViewHolder holder, int position) Called by RecyclerView to display the data at the specified position.","RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) View.OnFocusChangeListener that assigned in onCreateViewHolder(ViewGroup) may be chained, user should never change View.OnFocusChangeListener after that.","void onViewAttachedToWindow(RecyclerView.ViewHolder holder) Called when a view created by this adapter has been attached to a window.","void onViewDetachedFromWindow(RecyclerView.ViewHolder holder) Called when a view created by this adapter has been detached from its window.","void onViewRecycled(RecyclerView.ViewHolder holder) Called when a view created by this adapter has been recycled.","void setAdapter(ObjectAdapter adapter)","void setAdapterListener(ItemBridgeAdapter.AdapterListener listener)","void setPresenterMapper(ArrayList<Presenter> presenters)","void setWrapper(ItemBridgeAdapter.Wrapper wrapper)","[Expand] Inherited Methods","From class android.support.v7.widget.RecyclerView.Adapter final void bindViewHolder(VH holder, int position) This method internally calls onBindViewHolder(ViewHolder, int) to update the RecyclerView.ViewHolder contents with the item at the given position and also sets up some private fields to be used by RecyclerView. final VH createViewHolder(ViewGroup parent, int viewType) This method calls onCreateViewHolder(ViewGroup, int) to create a new RecyclerView.ViewHolder and initializes some private fields to be used by RecyclerView. abstract int getItemCount() Returns the total number of items in the data set hold by the adapter. long getItemId(int position) Return the stable ID for the item at position. int getItemViewType(int position) Return the view type of the item at position for the purposes of view recycling. final boolean hasObservers() Returns true if one or more observers are attached to this adapter. final boolean hasStableIds() Returns true if this adapter publishes a unique long value that can act as a key for the item at a given position in the data set. final void notifyDataSetChanged() Notify any registered observers that the data set has changed. final void notifyItemChanged(int position) Notify any registered observers that the item at position has changed. final void notifyItemInserted(int position) Notify any registered observers that the item reflected at position has been newly inserted. final void notifyItemMoved(int fromPosition, int toPosition) Notify any registered observers that the item reflected at fromPosition has been moved to toPosition. final void notifyItemRangeChanged(int positionStart, int itemCount) Notify any registered observers that the itemCount items starting at position positionStart have changed. final void notifyItemRangeInserted(int positionStart, int itemCount) Notify any registered observers that the currently reflected itemCount items starting at positionStart have been newly inserted. final void notifyItemRangeRemoved(int positionStart, int itemCount) Notify any registered observers that the itemCount items previously located at positionStart have been removed from the data set. final void notifyItemRemoved(int position) Notify any registered observers that the item previously located at position has been removed from the data set. abstract void onBindViewHolder(VH holder, int position) Called by RecyclerView to display the data at the specified position. abstract VH onCreateViewHolder(ViewGroup parent, int viewType) Called when RecyclerView needs a new RecyclerView.ViewHolder of the given type to represent an item. void onViewAttachedToWindow(VH holder) Called when a view created by this adapter has been attached to a window. void onViewDetachedFromWindow(VH holder) Called when a view created by this adapter has been detached from its window. void onViewRecycled(VH holder) Called when a view created by this adapter has been recycled. void registerAdapterDataObserver(RecyclerView.AdapterDataObserver observer) Register a new observer to listen for data changes. void setHasStableIds(boolean hasStableIds) Indicates whether each item in the data set can be represented with a unique identifier of type Long. void unregisterAdapterDataObserver(RecyclerView.AdapterDataObserver observer) Unregister an observer currently listening for data changes.","final void bindViewHolder(VH holder, int position) This method internally calls onBindViewHolder(ViewHolder, int) to update the RecyclerView.ViewHolder contents with the item at the given position and also sets up some private fields to be used by RecyclerView.","final VH createViewHolder(ViewGroup parent, int viewType) This method calls onCreateViewHolder(ViewGroup, int) to create a new RecyclerView.ViewHolder and initializes some private fields to be used by RecyclerView.","abstract int getItemCount() Returns the total number of items in the data set hold by the adapter.","long getItemId(int position) Return the stable ID for the item at position.","int getItemViewType(int position) Return the view type of the item at position for the purposes of view recycling.","final boolean hasObservers() Returns true if one or more observers are attached to this adapter.","final boolean hasStableIds() Returns true if this adapter publishes a unique long value that can act as a key for the item at a given position in the data set.","final void notifyDataSetChanged() Notify any registered observers that the data set has changed.","final void notifyItemChanged(int position) Notify any registered observers that the item at position has changed.","final void notifyItemInserted(int position) Notify any registered observers that the item reflected at position has been newly inserted.","final void notifyItemMoved(int fromPosition, int toPosition) Notify any registered observers that the item reflected at fromPosition has been moved to toPosition.","final void notifyItemRangeChanged(int positionStart, int itemCount) Notify any registered observers that the itemCount items starting at position positionStart have changed.","final void notifyItemRangeInserted(int positionStart, int itemCount) Notify any registered observers that the currently reflected itemCount items starting at positionStart have been newly inserted.","final void notifyItemRangeRemoved(int positionStart, int itemCount) Notify any registered observers that the itemCount items previously located at positionStart have been removed from the data set.","final void notifyItemRemoved(int position) Notify any registered observers that the item previously located at position has been removed from the data set.","abstract void onBindViewHolder(VH holder, int position) Called by RecyclerView to display the data at the specified position.","abstract VH onCreateViewHolder(ViewGroup parent, int viewType) Called when RecyclerView needs a new RecyclerView.ViewHolder of the given type to represent an item.","void onViewAttachedToWindow(VH holder) Called when a view created by this adapter has been attached to a window.","void onViewDetachedFromWindow(VH holder) Called when a view created by this adapter has been detached from its window.","void onViewRecycled(VH holder) Called when a view created by this adapter has been recycled.","void registerAdapterDataObserver(RecyclerView.AdapterDataObserver observer) Register a new observer to listen for data changes.","void setHasStableIds(boolean hasStableIds) Indicates whether each item in the data set can be represented with a unique identifier of type Long.","void unregisterAdapterDataObserver(RecyclerView.AdapterDataObserver observer) Unregister an observer currently listening for data changes.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v17.leanback.widget","constants":[],"class":"ItemBridgeAdapter","constructors":[],"fields":[]}