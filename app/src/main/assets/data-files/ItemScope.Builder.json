{"methods":["ItemScope build() Constructs a ItemScope with the current properties.","ItemScope.Builder setAbout(ItemScope about) The subject matter of the content.","ItemScope.Builder setAdditionalName(List<String> additionalName) An additional name for a Person, can be used for a middle name.","ItemScope.Builder setAddress(ItemScope address) Postal address.","ItemScope.Builder setAddressCountry(String addressCountry) Address country.","ItemScope.Builder setAddressLocality(String addressLocality) Address locality.","ItemScope.Builder setAddressRegion(String addressRegion) Address region.","ItemScope.Builder setAssociated_media(List<ItemScope> associated_media) The encoding.","ItemScope.Builder setAttendeeCount(int attendeeCount) Number of attendees.","ItemScope.Builder setAttendees(List<ItemScope> attendees) A person attending the event.","ItemScope.Builder setAudio(ItemScope audio) From http://schema.org/MusicRecording, the audio file.","ItemScope.Builder setAuthor(List<ItemScope> author) The person or persons who created this result.","ItemScope.Builder setBestRating(String bestRating) Best possible rating value that a result might obtain.","ItemScope.Builder setBirthDate(String birthDate) Date of birth.","ItemScope.Builder setByArtist(ItemScope byArtist) From http://schema.org/MusicRecording, the artist that performed this recording.","ItemScope.Builder setCaption(String caption) The caption for this object.","ItemScope.Builder setContentSize(String contentSize) File size in (mega/kilo) bytes.","ItemScope.Builder setContentUrl(String contentUrl) Actual bytes of the media object, for example the image file or video file.","ItemScope.Builder setContributor(List<ItemScope> contributor) A list of contributors to this result.","ItemScope.Builder setDateCreated(String dateCreated) The date the result was created such as the date that a review was first created.","ItemScope.Builder setDateModified(String dateModified) The date the result was last modified such as the date that a review was last edited.","ItemScope.Builder setDatePublished(String datePublished) The initial date that the result was published.","ItemScope.Builder setDescription(String description) The string that describes the content of the result.","ItemScope.Builder setDuration(String duration) The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format.","ItemScope.Builder setEmbedUrl(String embedUrl) A URL pointing to a player for a specific video.","ItemScope.Builder setEndDate(String endDate) The end date and time of the event (in ISO 8601 date format).","ItemScope.Builder setFamilyName(String familyName) Family name.","ItemScope.Builder setGender(String gender) Gender of the person.","ItemScope.Builder setGeo(ItemScope geo) Geo coordinates.","ItemScope.Builder setGivenName(String givenName) Given name.","ItemScope.Builder setHeight(String height) The height of the media object.","ItemScope.Builder setId(String id) An identifier for the target.","ItemScope.Builder setImage(String image) A URL to the image that represents this result.","ItemScope.Builder setInAlbum(ItemScope inAlbum) From http://schema.org/MusicRecording, which album a song is in.","ItemScope.Builder setLatitude(double latitude) Latitude.","ItemScope.Builder setLocation(ItemScope location) The location of the event or organization.","ItemScope.Builder setLongitude(double longitude) Longitude.","ItemScope.Builder setName(String name) The name of the result.","ItemScope.Builder setPartOfTVSeries(ItemScope partOfTVSeries) Property of http://schema.org/TVEpisode indicating which series the episode belongs to.","ItemScope.Builder setPerformers(List<ItemScope> performers) The main performer or performers of the event-for example, a presenter, musician, or actor.","ItemScope.Builder setPlayerType(String playerType) Player type that is required.","ItemScope.Builder setPostOfficeBoxNumber(String postOfficeBoxNumber) Post office box number.","ItemScope.Builder setPostalCode(String postalCode) Postal code.","ItemScope.Builder setRatingValue(String ratingValue) Rating value.","ItemScope.Builder setReviewRating(ItemScope reviewRating) Review rating.","ItemScope.Builder setStartDate(String startDate) The start date and time of the event (in ISO 8601 date format).","ItemScope.Builder setStreetAddress(String streetAddress) Street address.","ItemScope.Builder setText(String text) The text that is the result of the app activity.","ItemScope.Builder setThumbnail(ItemScope thumbnail) Thumbnail image for an image or video.","ItemScope.Builder setThumbnailUrl(String thumbnailUrl) A URL to a thumbnail image that represents this result.","ItemScope.Builder setTickerSymbol(String tickerSymbol) The exchange traded instrument associated with a Corporation object.","ItemScope.Builder setType(String type) The schema.org URL that best describes the referenced target and matches the type of moment.","ItemScope.Builder setUrl(String url) The URL that points to the result object.","ItemScope.Builder setWidth(String width) The width of the media object.","ItemScope.Builder setWorstRating(String worstRating) Worst possible rating value that a result might obtain.","[Expand] Inherited Methods","From class java.lang.Object Object clone() boolean equals(Object arg0) void finalize() final Class<?> getClass() int hashCode() final void notify() final void notifyAll() String toString() final void wait() final void wait(long arg0, int arg1) final void wait(long arg0)","Object clone()","boolean equals(Object arg0)","void finalize()","final Class<?> getClass()","int hashCode()","final void notify()","final void notifyAll()","String toString()","final void wait()","final void wait(long arg0, int arg1)","final void wait(long arg0)"],"package":"com.google.android.gms.plus.model.moments","constants":[],"class":"ItemScope.Builder","constructors":[],"fields":[]}