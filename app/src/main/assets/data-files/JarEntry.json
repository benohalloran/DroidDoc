{"methods":["Attributes getAttributes() Returns the Attributes object associated with this entry or null if none exists.","Certificate[] getCertificates() Returns an array of Certificate Objects associated with this entry or null if none exists.","CodeSigner[] getCodeSigners() Returns the code signers for the digital signatures associated with the JAR file.","[Expand] Inherited Methods","From class java.util.zip.ZipEntry Object clone() Returns a deep copy of this zip entry. String getComment() Returns the comment for this ZipEntry, or null if there is no comment. long getCompressedSize() Gets the compressed size of this ZipEntry. long getCrc() Gets the checksum for this ZipEntry. byte[] getExtra() Gets the extra information for this ZipEntry. int getMethod() Gets the compression method for this ZipEntry. String getName() Gets the name of this ZipEntry. long getSize() Gets the uncompressed size of this ZipEntry. long getTime() Gets the last modification time of this ZipEntry. int hashCode() Returns the hash code for this ZipEntry. boolean isDirectory() Determine whether or not this ZipEntry is a directory. void setComment(String comment) Sets the comment for this ZipEntry. void setCompressedSize(long value) Sets the compressed size for this ZipEntry. void setCrc(long value) Sets the checksum for this ZipEntry. void setExtra(byte[] data) Sets the extra information for this ZipEntry. void setMethod(int value) Sets the compression method for this entry to either DEFLATED or STORED. void setSize(long value) Sets the uncompressed size of this ZipEntry. void setTime(long value) Sets the modification time of this ZipEntry. String toString() Returns the string representation of this ZipEntry.","Object clone() Returns a deep copy of this zip entry.","String getComment() Returns the comment for this ZipEntry, or null if there is no comment.","long getCompressedSize() Gets the compressed size of this ZipEntry.","long getCrc() Gets the checksum for this ZipEntry.","byte[] getExtra() Gets the extra information for this ZipEntry.","int getMethod() Gets the compression method for this ZipEntry.","String getName() Gets the name of this ZipEntry.","long getSize() Gets the uncompressed size of this ZipEntry.","long getTime() Gets the last modification time of this ZipEntry.","int hashCode() Returns the hash code for this ZipEntry.","boolean isDirectory() Determine whether or not this ZipEntry is a directory.","void setComment(String comment) Sets the comment for this ZipEntry.","void setCompressedSize(long value) Sets the compressed size for this ZipEntry.","void setCrc(long value) Sets the checksum for this ZipEntry.","void setExtra(byte[] data) Sets the extra information for this ZipEntry.","void setMethod(int value) Sets the compression method for this entry to either DEFLATED or STORED.","void setSize(long value) Sets the uncompressed size of this ZipEntry.","void setTime(long value) Sets the modification time of this ZipEntry.","String toString() Returns the string representation of this ZipEntry.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.util.jar","constants":["[Expand] Inherited Constants","From class java.util.zip.ZipEntry int CENATT int CENATX int CENCOM int CENCRC int CENDSK int CENEXT int CENFLG int CENHDR int CENHOW int CENLEN int CENNAM int CENOFF long CENSIG int CENSIZ int CENTIM int CENVEM int CENVER int DEFLATED Zip entry state: Deflated. int ENDCOM int ENDHDR int ENDOFF long ENDSIG int ENDSIZ int ENDSUB int ENDTOT int EXTCRC int EXTHDR int EXTLEN long EXTSIG int EXTSIZ int LOCCRC int LOCEXT int LOCFLG int LOCHDR int LOCHOW int LOCLEN int LOCNAM long LOCSIG int LOCSIZ int LOCTIM int LOCVER int STORED Zip entry state: Stored.","int CENATT","int CENATX","int CENCOM","int CENCRC","int CENDSK","int CENEXT","int CENFLG","int CENHDR","int CENHOW","int CENLEN","int CENNAM","int CENOFF","long CENSIG","int CENSIZ","int CENTIM","int CENVEM","int CENVER","int DEFLATED Zip entry state: Deflated.","int ENDCOM","int ENDHDR","int ENDOFF","long ENDSIG","int ENDSIZ","int ENDSUB","int ENDTOT","int EXTCRC","int EXTHDR","int EXTLEN","long EXTSIG","int EXTSIZ","int LOCCRC","int LOCEXT","int LOCFLG","int LOCHDR","int LOCHOW","int LOCLEN","int LOCNAM","long LOCSIG","int LOCSIZ","int LOCTIM","int LOCVER","int STORED Zip entry state: Stored."],"class":"JarEntry","constructors":[],"fields":[]}