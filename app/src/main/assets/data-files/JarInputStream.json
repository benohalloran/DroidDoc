{"methods":["void closeEntry() Closes the current zip entry and prepares to read the next entry.","Manifest getManifest() Returns the Manifest object associated with this JarInputStream or null if no manifest entry exists.","ZipEntry getNextEntry() Returns the next ZipEntry contained in this stream or null if no more entries are present.","JarEntry getNextJarEntry() Returns the next JarEntry contained in this stream or null if no more entries are present.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes of decompressed data and stores it in buffer starting at byteOffset.","ZipEntry createZipEntry(String name) creates a ZipEntry with the given name.","[Expand] Inherited Methods","From class java.util.zip.ZipInputStream int available() Returns 0 when when this stream has exhausted its input; and 1 otherwise. void close() Closes this ZipInputStream. void closeEntry() Closes the current zip entry and prepares to read the next entry. ZipEntry createZipEntry(String name) creates a ZipEntry with the given name. ZipEntry getNextEntry() Returns the next entry from this ZipInputStream or null if no more entries are present. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount uncompressed bytes into the buffer starting at byteOffset.","int available() Returns 0 when when this stream has exhausted its input; and 1 otherwise.","void close() Closes this ZipInputStream.","void closeEntry() Closes the current zip entry and prepares to read the next entry.","ZipEntry createZipEntry(String name) creates a ZipEntry with the given name.","ZipEntry getNextEntry() Returns the next entry from this ZipInputStream or null if no more entries are present.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount uncompressed bytes into the buffer starting at byteOffset.","From class java.util.zip.InflaterInputStream int available() Returns 0 when when this stream has exhausted its input; and 1 otherwise. void close() Closes the input stream. void fill() Fills the input buffer with data to be decompressed. void mark(int readlimit) Marks the current position in the stream. boolean markSupported() Returns whether the receiver implements mark semantics. int read() Reads a single byte of decompressed data. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes of decompressed data and stores it in buffer starting at byteOffset. void reset() This operation is not supported and throws IOException. long skip(long byteCount) Skips up to byteCount bytes of uncompressed data.","int available() Returns 0 when when this stream has exhausted its input; and 1 otherwise.","void close() Closes the input stream.","void fill() Fills the input buffer with data to be decompressed.","void mark(int readlimit) Marks the current position in the stream.","boolean markSupported() Returns whether the receiver implements mark semantics.","int read() Reads a single byte of decompressed data.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes of decompressed data and stores it in buffer starting at byteOffset.","void reset() This operation is not supported and throws IOException.","long skip(long byteCount) Skips up to byteCount bytes of uncompressed data.","From class java.io.FilterInputStream int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input. void close() Closes this stream. synchronized void mark(int readlimit) Sets a mark position in this stream. boolean markSupported() Indicates whether this stream supports mark() and reset(). int read() Reads a single byte from the filtered stream and returns it as an integer in the range from 0 to 255. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. synchronized void reset() Resets this stream to the last marked location. long skip(long byteCount) Skips byteCount bytes in this stream.","int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input.","void close() Closes this stream.","synchronized void mark(int readlimit) Sets a mark position in this stream.","boolean markSupported() Indicates whether this stream supports mark() and reset().","int read() Reads a single byte from the filtered stream and returns it as an integer in the range from 0 to 255.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset.","synchronized void reset() Resets this stream to the last marked location.","long skip(long byteCount) Skips byteCount bytes in this stream.","From class java.io.InputStream int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input. void close() Closes this stream. void mark(int readlimit) Sets a mark position in this InputStream. boolean markSupported() Indicates whether this stream supports the mark() and reset() methods. int read(byte[] buffer) Equivalent to read(buffer, 0, buffer.length). abstract int read() Reads a single byte from this stream and returns it as an integer in the range from 0 to 255. int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. synchronized void reset() Resets this stream to the last marked location. long skip(long byteCount) Skips at most byteCount bytes in this stream.","int available() Returns an estimated number of bytes that can be read or skipped without blocking for more input.","void close() Closes this stream.","void mark(int readlimit) Sets a mark position in this InputStream.","boolean markSupported() Indicates whether this stream supports the mark() and reset() methods.","int read(byte[] buffer) Equivalent to read(buffer, 0, buffer.length).","abstract int read() Reads a single byte from this stream and returns it as an integer in the range from 0 to 255.","int read(byte[] buffer, int byteOffset, int byteCount) Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset.","synchronized void reset() Resets this stream to the last marked location.","long skip(long byteCount) Skips at most byteCount bytes in this stream.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.io.Closeable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds."],"package":"java.util.jar","constants":["[Expand] Inherited Constants","From class java.util.zip.ZipInputStream int CENATT int CENATX int CENCOM int CENCRC int CENDSK int CENEXT int CENFLG int CENHDR int CENHOW int CENLEN int CENNAM int CENOFF long CENSIG int CENSIZ int CENTIM int CENVEM int CENVER int ENDCOM int ENDHDR int ENDOFF long ENDSIG int ENDSIZ int ENDSUB int ENDTOT int EXTCRC int EXTHDR int EXTLEN long EXTSIG int EXTSIZ int LOCCRC int LOCEXT int LOCFLG int LOCHDR int LOCHOW int LOCLEN int LOCNAM long LOCSIG int LOCSIZ int LOCTIM int LOCVER","int CENATT","int CENATX","int CENCOM","int CENCRC","int CENDSK","int CENEXT","int CENFLG","int CENHDR","int CENHOW","int CENLEN","int CENNAM","int CENOFF","long CENSIG","int CENSIZ","int CENTIM","int CENVEM","int CENVER","int ENDCOM","int ENDHDR","int ENDOFF","long ENDSIG","int ENDSIZ","int ENDSUB","int ENDTOT","int EXTCRC","int EXTHDR","int EXTLEN","long EXTSIG","int EXTSIZ","int LOCCRC","int LOCEXT","int LOCFLG","int LOCHDR","int LOCHOW","int LOCLEN","int LOCNAM","long LOCSIG","int LOCSIZ","int LOCTIM","int LOCVER"],"class":"JarInputStream","constructors":[],"fields":[]}