{"methods":["Attributes getAttributes() Returns all attributes of the JarEntry referenced by this JarURLConnection.","Certificate[] getCertificates() Returns all certificates of the JarEntry referenced by this JarURLConnection instance.","String getEntryName() Gets the name of the entry referenced by this JarURLConnection.","JarEntry getJarEntry() Gets the JarEntry object of the entry referenced by this JarURLConnection.","abstract JarFile getJarFile() Gets the JarFile object referenced by this JarURLConnection.","URL getJarFileURL() Gets the URL to the JAR-file referenced by this JarURLConnection.","Attributes getMainAttributes() Gets all attributes of the manifest file referenced by this JarURLConnection.","Manifest getManifest() Gets the manifest file associated with this JAR-URL.","[Expand] Inherited Methods","From class java.net.URLConnection void addRequestProperty(String field, String newValue) Adds the given property to the request header. abstract void connect() Opens a connection to the resource. boolean getAllowUserInteraction() Returns allowUserInteraction. int getConnectTimeout() Returns the connect timeout in milliseconds. Object getContent(Class[] types) Returns an object representing the content of the resource this URLConnection is connected to. Object getContent() Returns an object representing the content of the resource this URLConnection is connected to. String getContentEncoding() Returns the content encoding type specified by the response header field content-encoding or null if this field is not set. int getContentLength() Returns the content length in bytes specified by the response header field content-length or -1 if this field is not set or cannot be represented as an int. String getContentType() Returns the MIME-type of the content specified by the response header field content-type or null if type is unknown. long getDate() Returns the timestamp when this response has been sent as a date in milliseconds since January 1, 1970 GMT or 0 if this timestamp is unknown. static boolean getDefaultAllowUserInteraction() Returns the default value of allowUserInteraction. static String getDefaultRequestProperty(String field) This method was deprecated in API level 1. Use getRequestProperty(String) instead. boolean getDefaultUseCaches() Returns the default setting whether this connection allows using caches. boolean getDoInput() Returns the value of the option doInput which specifies whether this connection allows to receive data. boolean getDoOutput() Returns the value of the option doOutput which specifies whether this connection allows to send data. long getExpiration() Returns the timestamp when this response will be expired in milliseconds since January 1, 1970 GMT or 0 if this timestamp is unknown. static FileNameMap getFileNameMap() Returns the table which is used by all URLConnection instances to determine the MIME-type according to a file extension. String getHeaderField(String key) Returns the value of the header field specified by key or null if there is no field with this name. String getHeaderField(int pos) Returns the header value at the field position pos or null if the header has fewer than pos fields. long getHeaderFieldDate(String field, long defaultValue) Returns the specified header value as a date in milliseconds since January 1, 1970 GMT. int getHeaderFieldInt(String field, int defaultValue) Returns the specified header value as a number. String getHeaderFieldKey(int posn) Returns the name of the header field at the given position posn or null if there are fewer than posn fields. Map<String, List<String>> getHeaderFields() Returns an unmodifiable map of the response-header fields and values. long getIfModifiedSince() Returns the point of time since when the data must be modified to be transmitted. InputStream getInputStream() Returns an InputStream for reading data from the resource pointed by this URLConnection. long getLastModified() Returns the value of the response header field last-modified or 0 if this value is not set. OutputStream getOutputStream() Returns an OutputStream for writing data to this URLConnection. Permission getPermission() Returns a Permission object representing all needed permissions to open this connection. int getReadTimeout() Returns the read timeout in milliseconds, or 0 if reads never timeout. Map<String, List<String>> getRequestProperties() Returns an unmodifiable map of general request properties used by this connection. String getRequestProperty(String field) Returns the value of the request header property specified by {code field} or null if there is no field with this name. URL getURL() Returns the URL represented by this URLConnection. boolean getUseCaches() Returns the value of the flag which specifies whether this URLConnection allows to use caches. static String guessContentTypeFromName(String url) Determines the MIME-type of the given resource url by resolving the filename extension with the internal FileNameMap. static String guessContentTypeFromStream(InputStream is) Determines the MIME-type of the resource represented by the input stream is by reading its first few characters. void setAllowUserInteraction(boolean newValue) Sets allowUserInteraction. void setConnectTimeout(int timeoutMillis) Sets the maximum time in milliseconds to wait while connecting. synchronized static void setContentHandlerFactory(ContentHandlerFactory contentFactory) Sets the internally used content handler factory. static void setDefaultAllowUserInteraction(boolean allows) Sets the default value for allowUserInteraction. static void setDefaultRequestProperty(String field, String value) This method was deprecated in API level 1. Use setRequestProperty(String, String) instead. void setDefaultUseCaches(boolean newValue) Sets the default value for the flag indicating whether this connection allows to use caches. void setDoInput(boolean newValue) Sets the flag indicating whether this URLConnection allows input. void setDoOutput(boolean newValue) Sets the flag indicating whether this URLConnection allows output. static void setFileNameMap(FileNameMap map) Sets the internal map which is used by all URLConnection instances to determine the MIME-type according to a filename extension. void setIfModifiedSince(long newValue) Sets the point of time since when the data must be modified to be transmitted. void setReadTimeout(int timeoutMillis) Sets the maximum time to wait for an input stream read to complete before giving up. void setRequestProperty(String field, String newValue) Sets the value of the specified request header field. void setUseCaches(boolean newValue) Sets the flag indicating whether this connection allows to use caches or not. String toString() Returns the string representation containing the name of this class and the URL.","void addRequestProperty(String field, String newValue) Adds the given property to the request header.","abstract void connect() Opens a connection to the resource.","boolean getAllowUserInteraction() Returns allowUserInteraction.","int getConnectTimeout() Returns the connect timeout in milliseconds.","Object getContent(Class[] types) Returns an object representing the content of the resource this URLConnection is connected to.","Object getContent() Returns an object representing the content of the resource this URLConnection is connected to.","String getContentEncoding() Returns the content encoding type specified by the response header field content-encoding or null if this field is not set.","int getContentLength() Returns the content length in bytes specified by the response header field content-length or -1 if this field is not set or cannot be represented as an int.","String getContentType() Returns the MIME-type of the content specified by the response header field content-type or null if type is unknown.","long getDate() Returns the timestamp when this response has been sent as a date in milliseconds since January 1, 1970 GMT or 0 if this timestamp is unknown.","static boolean getDefaultAllowUserInteraction() Returns the default value of allowUserInteraction.","static String getDefaultRequestProperty(String field) This method was deprecated in API level 1. Use getRequestProperty(String) instead.","boolean getDefaultUseCaches() Returns the default setting whether this connection allows using caches.","boolean getDoInput() Returns the value of the option doInput which specifies whether this connection allows to receive data.","boolean getDoOutput() Returns the value of the option doOutput which specifies whether this connection allows to send data.","long getExpiration() Returns the timestamp when this response will be expired in milliseconds since January 1, 1970 GMT or 0 if this timestamp is unknown.","static FileNameMap getFileNameMap() Returns the table which is used by all URLConnection instances to determine the MIME-type according to a file extension.","String getHeaderField(String key) Returns the value of the header field specified by key or null if there is no field with this name.","String getHeaderField(int pos) Returns the header value at the field position pos or null if the header has fewer than pos fields.","long getHeaderFieldDate(String field, long defaultValue) Returns the specified header value as a date in milliseconds since January 1, 1970 GMT.","int getHeaderFieldInt(String field, int defaultValue) Returns the specified header value as a number.","String getHeaderFieldKey(int posn) Returns the name of the header field at the given position posn or null if there are fewer than posn fields.","Map<String, List<String>> getHeaderFields() Returns an unmodifiable map of the response-header fields and values.","long getIfModifiedSince() Returns the point of time since when the data must be modified to be transmitted.","InputStream getInputStream() Returns an InputStream for reading data from the resource pointed by this URLConnection.","long getLastModified() Returns the value of the response header field last-modified or 0 if this value is not set.","OutputStream getOutputStream() Returns an OutputStream for writing data to this URLConnection.","Permission getPermission() Returns a Permission object representing all needed permissions to open this connection.","int getReadTimeout() Returns the read timeout in milliseconds, or 0 if reads never timeout.","Map<String, List<String>> getRequestProperties() Returns an unmodifiable map of general request properties used by this connection.","String getRequestProperty(String field) Returns the value of the request header property specified by {code field} or null if there is no field with this name.","URL getURL() Returns the URL represented by this URLConnection.","boolean getUseCaches() Returns the value of the flag which specifies whether this URLConnection allows to use caches.","static String guessContentTypeFromName(String url) Determines the MIME-type of the given resource url by resolving the filename extension with the internal FileNameMap.","static String guessContentTypeFromStream(InputStream is) Determines the MIME-type of the resource represented by the input stream is by reading its first few characters.","void setAllowUserInteraction(boolean newValue) Sets allowUserInteraction.","void setConnectTimeout(int timeoutMillis) Sets the maximum time in milliseconds to wait while connecting.","synchronized static void setContentHandlerFactory(ContentHandlerFactory contentFactory) Sets the internally used content handler factory.","static void setDefaultAllowUserInteraction(boolean allows) Sets the default value for allowUserInteraction.","static void setDefaultRequestProperty(String field, String value) This method was deprecated in API level 1. Use setRequestProperty(String, String) instead.","void setDefaultUseCaches(boolean newValue) Sets the default value for the flag indicating whether this connection allows to use caches.","void setDoInput(boolean newValue) Sets the flag indicating whether this URLConnection allows input.","void setDoOutput(boolean newValue) Sets the flag indicating whether this URLConnection allows output.","static void setFileNameMap(FileNameMap map) Sets the internal map which is used by all URLConnection instances to determine the MIME-type according to a filename extension.","void setIfModifiedSince(long newValue) Sets the point of time since when the data must be modified to be transmitted.","void setReadTimeout(int timeoutMillis) Sets the maximum time to wait for an input stream read to complete before giving up.","void setRequestProperty(String field, String newValue) Sets the value of the specified request header field.","void setUseCaches(boolean newValue) Sets the flag indicating whether this connection allows to use caches or not.","String toString() Returns the string representation containing the name of this class and the URL.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.net","constants":[],"class":"JarURLConnection","constructors":[],"fields":["protected URLConnection jarFileURLConnection The location part of the represented URL."]}