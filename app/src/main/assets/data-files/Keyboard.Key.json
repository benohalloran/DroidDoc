{"methods":["int[] getCurrentDrawableState() Returns the drawable state for the key, based on the current state and type of the key.","boolean isInside(int x, int y) Detects if a point falls inside this key.","void onPressed() Informs the key that it has been pressed, in case it needs to change its appearance or state.","void onReleased(boolean inside) Changes the pressed state of the key.","int squaredDistanceFrom(int x, int y) Returns the square of the distance between the center of the key and the given point.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.inputmethodservice","constants":[],"class":"Keyboard.Key","constructors":[],"fields":["public int[] codes All the key codes (unicode or custom code) that this key could generate, zero'th being the most important.","public int edgeFlags Flags that specify the anchoring to edges of the keyboard for detecting touch events that are just out of the boundary of the key.","public int gap The horizontal gap before this key","public int height Height of the key, not including the gap","public Drawable icon Icon to display instead of a label.","public Drawable iconPreview Preview version of the icon, for the preview popup","public CharSequence label Label to display","public boolean modifier Whether this is a modifier key, such as Shift or Alt","public boolean on If this is a sticky key, is it on?","public CharSequence popupCharacters Popup characters","public int popupResId If this key pops up a mini keyboard, this is the resource id for the XML layout for that keyboard.","public boolean pressed The current pressed state of this key","public boolean repeatable Whether this key repeats itself when held down","public boolean sticky Whether this key is sticky, i.e., a toggle key","public CharSequence text Text to output when pressed.","public int width Width of the key, not including the gap","public int x X coordinate of the key in the keyboard layout","public int y Y coordinate of the key in the keyboard layout"]}