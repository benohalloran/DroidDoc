{"methods":["abstract String getBaseURI() The base URI to be used (see section 5.1.4 in [IETF RFC 2396]) for resolving a relative systemId to an absolute URI.","abstract InputStream getByteStream() An attribute of a language and binding dependent type that represents a stream of bytes.","abstract boolean getCertifiedText() If set to true, assume that the input is certified (see section 2.13 in [XML 1.1]) when parsing [XML 1.1].","abstract Reader getCharacterStream() An attribute of a language and binding dependent type that represents a stream of 16-bit units.","abstract String getEncoding() The character encoding, if known.","abstract String getPublicId() The public identifier for this input source.","abstract String getStringData() String data to parse.","abstract String getSystemId() The system identifier, a URI reference [IETF RFC 2396], for this input source.","abstract void setBaseURI(String baseURI) The base URI to be used (see section 5.1.4 in [IETF RFC 2396]) for resolving a relative systemId to an absolute URI.","abstract void setByteStream(InputStream byteStream) An attribute of a language and binding dependent type that represents a stream of bytes.","abstract void setCertifiedText(boolean certifiedText) If set to true, assume that the input is certified (see section 2.13 in [XML 1.1]) when parsing [XML 1.1].","abstract void setCharacterStream(Reader characterStream) An attribute of a language and binding dependent type that represents a stream of 16-bit units.","abstract void setEncoding(String encoding) The character encoding, if known.","abstract void setPublicId(String publicId) The public identifier for this input source.","abstract void setStringData(String stringData) String data to parse.","abstract void setSystemId(String systemId) The system identifier, a URI reference [IETF RFC 2396], for this input source."],"package":"org.w3c.dom.ls","constants":[],"class":"LSInput","constructors":[],"fields":[]}