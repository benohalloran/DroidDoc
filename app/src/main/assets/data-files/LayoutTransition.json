{"methods":["void addChild(ViewGroup parent, View child) This method is called by ViewGroup when a child view is about to be added to the container.","void addTransitionListener(LayoutTransition.TransitionListener listener) Add a listener that will be called when the bounds of the view change due to layout processing.","void disableTransitionType(int transitionType) Disables the specified transitionType for this LayoutTransition object.","void enableTransitionType(int transitionType) Enables the specified transitionType for this LayoutTransition object.","Animator getAnimator(int transitionType) Gets the animation used during one of the transition types that may run.","long getDuration(int transitionType) Gets the duration on one of the animation objects used by this transition.","TimeInterpolator getInterpolator(int transitionType) Gets the interpolator on one of the animation objects used by this transition.","long getStagger(int transitionType) Gets the length of time to delay between starting each animation during one of the change animations.","long getStartDelay(int transitionType) Gets the start delay on one of the animation objects used by this transition.","List<LayoutTransition.TransitionListener> getTransitionListeners() Gets the current list of listeners for layout changes.","void hideChild(ViewGroup parent, View child, int newVisibility) This method is called by ViewGroup when a child view is about to be hidden in container.","void hideChild(ViewGroup parent, View child) This method was deprecated in API level 16. Use hideChild(android.view.ViewGroup, android.view.View, int).","boolean isChangingLayout() Returns true if animations are running which animate layout-related properties.","boolean isRunning() Returns true if any of the animations in this transition are currently running.","boolean isTransitionTypeEnabled(int transitionType) Returns whether the specified transitionType is enabled for this LayoutTransition object.","void removeChild(ViewGroup parent, View child) This method is called by ViewGroup when a child view is about to be removed from the container.","void removeTransitionListener(LayoutTransition.TransitionListener listener) Remove a listener for layout changes.","void setAnimateParentHierarchy(boolean animateParentHierarchy) This flag controls whether CHANGE_APPEARING or CHANGE_DISAPPEARING animations will cause the default changing animation to be run on the parent hierarchy as well.","void setAnimator(int transitionType, Animator animator) Sets the animation used during one of the transition types that may run.","void setDuration(int transitionType, long duration) Sets the duration on one of the animation objects used by this transition.","void setDuration(long duration) Sets the duration to be used by all animations of this transition object.","void setInterpolator(int transitionType, TimeInterpolator interpolator) Sets the interpolator on one of the animation objects used by this transition.","void setStagger(int transitionType, long duration) Sets the length of time to delay between starting each animation during one of the change animations.","void setStartDelay(int transitionType, long delay) Sets the start delay on one of the animation objects used by this transition.","void showChild(ViewGroup parent, View child, int oldVisibility) This method is called by ViewGroup when a child view is about to be made visible in the container.","void showChild(ViewGroup parent, View child) This method was deprecated in API level 16. Use showChild(android.view.ViewGroup, android.view.View, int).","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.animation","constants":["int APPEARING A flag indicating the animation that runs on those items that are appearing in the container.","int CHANGE_APPEARING A flag indicating the animation that runs on those items that are changing due to a new item appearing in the container.","int CHANGE_DISAPPEARING A flag indicating the animation that runs on those items that are changing due to an item disappearing from the container.","int CHANGING A flag indicating the animation that runs on those items that are changing due to a layout change not caused by items being added to or removed from the container.","int DISAPPEARING A flag indicating the animation that runs on those items that are disappearing from the container."],"class":"LayoutTransition","constructors":[],"fields":[]}