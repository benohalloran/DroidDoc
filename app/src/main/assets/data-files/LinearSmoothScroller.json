{"methods":["int calculateDtToFit(int viewStart, int viewEnd, int boxStart, int boxEnd, int snapPreference) Helper method for calculateDxToMakeVisible(android.view.View, int) and calculateDyToMakeVisible(android.view.View, int)","int calculateDxToMakeVisible(View view, int snapPreference) Calculates the horizontal scroll amount necessary to make the given view fully visible inside the RecyclerView.","int calculateDyToMakeVisible(View view, int snapPreference) Calculates the vertical scroll amount necessary to make the given view fully visible inside the RecyclerView.","abstract PointF computeScrollVectorForPosition(int targetPosition)","float calculateSpeedPerPixel(DisplayMetrics displayMetrics) Calculates the scroll speed.","int calculateTimeForDeceleration(int dx) Calculates the time for deceleration so that transition from LinearInterpolator to DecelerateInterpolator looks smooth.","int calculateTimeForScrolling(int dx) Calculates the time it should take to scroll the given distance (in pixels)","int getHorizontalSnapPreference() When scrolling towards a child view, this method defines whether we should align the left or the right edge of the child with the parent RecyclerView.","int getVerticalSnapPreference() When scrolling towards a child view, this method defines whether we should align the top or the bottom edge of the child with the parent RecyclerView.","void onSeekTargetStep(int dx, int dy, RecyclerView.State state, RecyclerView.SmoothScroller.Action action) RecyclerView will call this method each time it scrolls until it can find the target position in the layout.","void onStart() Called when smooth scroll is started.","void onStop() Called when smooth scroller is stopped.","void onTargetFound(View targetView, RecyclerView.State state, RecyclerView.SmoothScroller.Action action) Called when the target position is laid out.","void updateActionForInterimTarget(RecyclerView.SmoothScroller.Action action) When the target scroll position is not a child of the RecyclerView, this method calculates a direction vector towards that child and triggers a smooth scroll.","[Expand] Inherited Methods","From class android.support.v7.widget.RecyclerView.SmoothScroller View findViewByPosition(int position) int getChildCount() int getChildPosition(View view) RecyclerView.LayoutManager getLayoutManager() int getTargetPosition() Returns the adapter position of the target item void instantScrollToPosition(int position) boolean isPendingInitialRun() Returns true if SmoothScroller has been started but has not received the first animation callback yet. boolean isRunning() void normalize(PointF scrollVector) Normalizes the vector. void onChildAttachedToWindow(View child) abstract void onSeekTargetStep(int dx, int dy, RecyclerView.State state, RecyclerView.SmoothScroller.Action action) RecyclerView will call this method each time it scrolls until it can find the target position in the layout. abstract void onStart() Called when smooth scroll is started. abstract void onStop() Called when smooth scroller is stopped. abstract void onTargetFound(View targetView, RecyclerView.State state, RecyclerView.SmoothScroller.Action action) Called when the target position is laid out. void setTargetPosition(int targetPosition) final void stop() Stops running the SmoothScroller in each animation callback.","View findViewByPosition(int position)","int getChildCount()","int getChildPosition(View view)","RecyclerView.LayoutManager getLayoutManager()","int getTargetPosition() Returns the adapter position of the target item","void instantScrollToPosition(int position)","boolean isPendingInitialRun() Returns true if SmoothScroller has been started but has not received the first animation callback yet.","boolean isRunning()","void normalize(PointF scrollVector) Normalizes the vector.","void onChildAttachedToWindow(View child)","abstract void onSeekTargetStep(int dx, int dy, RecyclerView.State state, RecyclerView.SmoothScroller.Action action) RecyclerView will call this method each time it scrolls until it can find the target position in the layout.","abstract void onStart() Called when smooth scroll is started.","abstract void onStop() Called when smooth scroller is stopped.","abstract void onTargetFound(View targetView, RecyclerView.State state, RecyclerView.SmoothScroller.Action action) Called when the target position is laid out.","void setTargetPosition(int targetPosition)","final void stop() Stops running the SmoothScroller in each animation callback.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v7.widget","constants":["int SNAP_TO_ANY Decides if the child should be snapped from start or end, depending on where it currently is in relation to its parent.","int SNAP_TO_END Align child view's right or bottom with parent view's right or bottom","int SNAP_TO_START Align child view's left or top with parent view's left or top"],"class":"LinearSmoothScroller","constructors":[],"fields":["protected final DecelerateInterpolator mDecelerateInterpolator","protected int mInterimTargetDx","protected int mInterimTargetDy","protected final LinearInterpolator mLinearInterpolator","protected PointF mTargetVector"]}