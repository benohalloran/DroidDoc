{"methods":["abstract void add(E object) Inserts the specified object into the list between next and previous.","abstract boolean hasNext() Returns whether there are more elements to iterate.","abstract boolean hasPrevious() Returns whether there are previous elements to iterate.","abstract E next() Returns the next object in the iteration.","abstract int nextIndex() Returns the index of the next object in the iteration.","abstract E previous() Returns the previous object in the iteration.","abstract int previousIndex() Returns the index of the previous object in the iteration.","abstract void remove() Removes the last object returned by next or previous from the list.","abstract void set(E object) Replaces the last object returned by next or previous with the specified object.","[Expand] Inherited Methods","From interface java.util.Iterator abstract boolean hasNext() Returns true if there is at least one more element, false otherwise. abstract E next() Returns the next object and advances the iterator. abstract void remove() Removes the last object returned by next from the collection.","abstract boolean hasNext() Returns true if there is at least one more element, false otherwise.","abstract E next() Returns the next object and advances the iterator.","abstract void remove() Removes the last object returned by next from the collection."],"package":"java.util","constants":[],"class":"ListIterator","constructors":[],"fields":[]}