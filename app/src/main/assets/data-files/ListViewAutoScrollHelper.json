{"methods":["boolean canTargetScrollHorizontally(int direction) Override this method to return whether the target view can be scrolled horizontally in a certain direction.","boolean canTargetScrollVertically(int direction) Override this method to return whether the target view can be scrolled vertically in a certain direction.","void scrollTargetBy(int deltaX, int deltaY) Override this method to scroll the target view by the specified number of pixels.","[Expand] Inherited Methods","From class android.support.v4.widget.AutoScrollHelper abstract boolean canTargetScrollHorizontally(int direction) Override this method to return whether the target view can be scrolled horizontally in a certain direction. abstract boolean canTargetScrollVertically(int direction) Override this method to return whether the target view can be scrolled vertically in a certain direction. boolean isEnabled() boolean isExclusive() Indicates whether the scroll helper handles touch events exclusively during scrolling. boolean onTouch(View v, MotionEvent event) Handles touch events by activating automatic scrolling, adjusting scroll velocity, or stopping. abstract void scrollTargetBy(int deltaX, int deltaY) Override this method to scroll the target view by the specified number of pixels. AutoScrollHelper setActivationDelay(int delayMillis) Sets the delay after entering an activation edge before activation of auto-scrolling. AutoScrollHelper setEdgeType(int type) Sets the activation edge type, one of: EDGE_TYPE_INSIDE for edges that respond to touches inside the bounds of the host view. AutoScrollHelper setEnabled(boolean enabled) Sets whether the scroll helper is enabled and should respond to touch events. AutoScrollHelper setExclusive(boolean exclusive) Enables or disables exclusive handling of touch events during scrolling. AutoScrollHelper setMaximumEdges(float horizontalMax, float verticalMax) Sets the absolute maximum edge size. AutoScrollHelper setMaximumVelocity(float horizontalMax, float verticalMax) Sets the absolute maximum scrolling velocity. AutoScrollHelper setMinimumVelocity(float horizontalMin, float verticalMin) Sets the absolute minimum scrolling velocity. AutoScrollHelper setRampDownDuration(int durationMillis) Sets the amount of time after de-activation of auto-scrolling that is takes to slow to a stop. AutoScrollHelper setRampUpDuration(int durationMillis) Sets the amount of time after activation of auto-scrolling that is takes to reach target velocity for the current touch position. AutoScrollHelper setRelativeEdges(float horizontal, float vertical) Sets the activation edge size relative to the host view's dimensions. AutoScrollHelper setRelativeVelocity(float horizontal, float vertical) Sets the target scrolling velocity relative to the host view's dimensions.","abstract boolean canTargetScrollHorizontally(int direction) Override this method to return whether the target view can be scrolled horizontally in a certain direction.","abstract boolean canTargetScrollVertically(int direction) Override this method to return whether the target view can be scrolled vertically in a certain direction.","boolean isEnabled()","boolean isExclusive() Indicates whether the scroll helper handles touch events exclusively during scrolling.","boolean onTouch(View v, MotionEvent event) Handles touch events by activating automatic scrolling, adjusting scroll velocity, or stopping.","abstract void scrollTargetBy(int deltaX, int deltaY) Override this method to scroll the target view by the specified number of pixels.","AutoScrollHelper setActivationDelay(int delayMillis) Sets the delay after entering an activation edge before activation of auto-scrolling.","AutoScrollHelper setEdgeType(int type) Sets the activation edge type, one of: EDGE_TYPE_INSIDE for edges that respond to touches inside the bounds of the host view.","AutoScrollHelper setEnabled(boolean enabled) Sets whether the scroll helper is enabled and should respond to touch events.","AutoScrollHelper setExclusive(boolean exclusive) Enables or disables exclusive handling of touch events during scrolling.","AutoScrollHelper setMaximumEdges(float horizontalMax, float verticalMax) Sets the absolute maximum edge size.","AutoScrollHelper setMaximumVelocity(float horizontalMax, float verticalMax) Sets the absolute maximum scrolling velocity.","AutoScrollHelper setMinimumVelocity(float horizontalMin, float verticalMin) Sets the absolute minimum scrolling velocity.","AutoScrollHelper setRampDownDuration(int durationMillis) Sets the amount of time after de-activation of auto-scrolling that is takes to slow to a stop.","AutoScrollHelper setRampUpDuration(int durationMillis) Sets the amount of time after activation of auto-scrolling that is takes to reach target velocity for the current touch position.","AutoScrollHelper setRelativeEdges(float horizontal, float vertical) Sets the activation edge size relative to the host view's dimensions.","AutoScrollHelper setRelativeVelocity(float horizontal, float vertical) Sets the target scrolling velocity relative to the host view's dimensions.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.view.View.OnTouchListener abstract boolean onTouch(View v, MotionEvent event) Called when a touch event is dispatched to a view.","abstract boolean onTouch(View v, MotionEvent event) Called when a touch event is dispatched to a view."],"package":"android.support.v4.widget","constants":["[Expand] Inherited Constants","From class android.support.v4.widget.AutoScrollHelper int EDGE_TYPE_INSIDE Edge type that specifies an activation area starting at the view bounds and extending inward. int EDGE_TYPE_INSIDE_EXTEND Edge type that specifies an activation area starting at the view bounds and extending inward. int EDGE_TYPE_OUTSIDE Edge type that specifies an activation area starting at the view bounds and extending outward. float NO_MAX Constant passed to setMaximumEdges(float, float), setMaximumVelocity(float, float), or setMinimumVelocity(float, float). float NO_MIN Constant passed to setMaximumEdges(float, float), or setMaximumVelocity(float, float), or setMinimumVelocity(float, float). float RELATIVE_UNSPECIFIED Constant passed to setRelativeEdges(float, float) or setRelativeVelocity(float, float).","int EDGE_TYPE_INSIDE Edge type that specifies an activation area starting at the view bounds and extending inward.","int EDGE_TYPE_INSIDE_EXTEND Edge type that specifies an activation area starting at the view bounds and extending inward.","int EDGE_TYPE_OUTSIDE Edge type that specifies an activation area starting at the view bounds and extending outward.","float NO_MAX Constant passed to setMaximumEdges(float, float), setMaximumVelocity(float, float), or setMinimumVelocity(float, float).","float NO_MIN Constant passed to setMaximumEdges(float, float), or setMaximumVelocity(float, float), or setMinimumVelocity(float, float).","float RELATIVE_UNSPECIFIED Constant passed to setRelativeEdges(float, float) or setRelativeVelocity(float, float)."],"class":"ListViewAutoScrollHelper","constructors":[],"fields":[]}