{"methods":["float bearingTo(Location dest) Returns the approximate initial bearing in degrees East of true North when traveling along the shortest path between this location and the given location.","static double convert(String coordinate) Converts a String in one of the formats described by FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS into a double.","static String convert(double coordinate, int outputType) Converts a coordinate to a String representation.","int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","static void distanceBetween(double startLatitude, double startLongitude, double endLatitude, double endLongitude, float[] results) Computes the approximate distance in meters between two locations, and optionally the initial and final bearings of the shortest path between them.","float distanceTo(Location dest) Returns the approximate distance in meters between this location and the given location.","void dump(Printer pw, String prefix)","float getAccuracy() Get the estimated accuracy of this location, in meters.","double getAltitude() Get the altitude if available, in meters above the WGS 84 reference ellipsoid.","float getBearing() Get the bearing, in degrees.","long getElapsedRealtimeNanos() Return the time of this fix, in elapsed real-time since system boot.","Bundle getExtras() Returns additional provider-specific information about the location fix as a Bundle.","double getLatitude() Get the latitude, in degrees.","double getLongitude() Get the longitude, in degrees.","String getProvider() Returns the name of the provider that generated this fix.","float getSpeed() Get the speed if it is available, in meters/second over ground.","long getTime() Return the UTC time of this fix, in milliseconds since January 1, 1970.","boolean hasAccuracy() True if this location has an accuracy.","boolean hasAltitude() True if this location has an altitude.","boolean hasBearing() True if this location has a bearing.","boolean hasSpeed() True if this location has a speed.","boolean isFromMockProvider() Returns true if the Location came from a mock provider.","void removeAccuracy() Remove the accuracy from this location.","void removeAltitude() Remove the altitude from this location.","void removeBearing() Remove the bearing from this location.","void removeSpeed() Remove the speed from this location.","void reset() Clears the contents of the location.","void set(Location l) Sets the contents of the location to the values from the given location.","void setAccuracy(float accuracy) Set the estimated accuracy of this location, meters.","void setAltitude(double altitude) Set the altitude, in meters above the WGS 84 reference ellipsoid.","void setBearing(float bearing) Set the bearing, in degrees.","void setElapsedRealtimeNanos(long time) Set the time of this fix, in elapsed real-time since system boot.","void setExtras(Bundle extras) Sets the extra information associated with this fix to the given Bundle.","void setLatitude(double latitude) Set the latitude, in degrees.","void setLongitude(double longitude) Set the longitude, in degrees.","void setProvider(String provider) Sets the name of the provider that generated this fix.","void setSpeed(float speed) Set the speed, in meters/second over ground.","void setTime(long time) Set the UTC time of this fix, in milliseconds since January 1, 1970.","String toString() Returns a string containing a concise, human-readable description of this object.","void writeToParcel(Parcel parcel, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.location","constants":["int FORMAT_DEGREES Constant used to specify formatting of a latitude or longitude in the form \"[+-]DDD.DDDDD where D indicates degrees.","int FORMAT_MINUTES Constant used to specify formatting of a latitude or longitude in the form \"[+-]DDD:MM.MMMMM\" where D indicates degrees and M indicates minutes of arc (1 minute = 1/60th of a degree).","int FORMAT_SECONDS Constant used to specify formatting of a latitude or longitude in the form \"DDD:MM:SS.SSSSS\" where D indicates degrees, M indicates minutes of arc, and S indicates seconds of arc (1 minute = 1/60th of a degree, 1 second = 1/3600th of a degree).","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"Location","constructors":[],"fields":["public static final Creator<Location> CREATOR"]}