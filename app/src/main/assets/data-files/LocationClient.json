{"methods":["void addGeofences(List<Geofence> geofences, PendingIntent pendingIntent, LocationClient.OnAddGeofencesResultListener listener) Sets alerts to be notified when the device enters or exits one of the specified geofences.","void connect() Connects the client to Google Play services.","void disconnect() Closes the connection to Google Play services.","static int getErrorCode(Intent intent) Returns the error code that explains the error that triggered this intent.","static int getGeofenceTransition(Intent intent) Returns the transition type of geofence transition alert.","Location getLastLocation() Returns the best most recent location currently available.","static List<Geofence> getTriggeringGeofences(Intent intent) Returns a list of geofences that triggers this geofence transition alert.","static Location getTriggeringLocation(Intent intent) Gets the location that triggered geofence transition.","static boolean hasError(Intent intent) Whether an error triggered this intent.","boolean isConnected() Checks if the client is currently connected to the service, so that requests to other methods will succeed.","boolean isConnecting() Checks if the client is attempting to connect to the service.","boolean isConnectionCallbacksRegistered(GooglePlayServicesClient.ConnectionCallbacks listener) Returns true if the specified listener is currently registered to receive connection events.","boolean isConnectionFailedListenerRegistered(GooglePlayServicesClient.OnConnectionFailedListener listener) Returns true if the specified listener is currently registered to receive connection failed events.","void registerConnectionCallbacks(GooglePlayServicesClient.ConnectionCallbacks listener) Registers a listener to receive connection events from this GooglePlayServicesClient.","void registerConnectionFailedListener(GooglePlayServicesClient.OnConnectionFailedListener listener) Registers a listener to receive connection failed events from this GooglePlayServicesClient.","void removeGeofences(List<String> geofenceRequestIds, LocationClient.OnRemoveGeofencesResultListener listener) Removes geofences by their request IDs.","void removeGeofences(PendingIntent pendingIntent, LocationClient.OnRemoveGeofencesResultListener listener) Removes all geofences associated with the given pendingIntent.","void removeLocationUpdates(LocationListener listener) Removes all location updates for the given location listener.","void removeLocationUpdates(PendingIntent callbackIntent) Removes all location updates for the given pending intent.","void requestLocationUpdates(LocationRequest request, PendingIntent callbackIntent) Requests location updates with a callback on the specified PendingIntent.","void requestLocationUpdates(LocationRequest request, LocationListener listener) Requests location updates.","void requestLocationUpdates(LocationRequest request, LocationListener listener, Looper looper) Requests location updates with a callback on the specified Looper thread.","void setMockLocation(Location mockLocation) Sets the mock location to be used for the location provider.","void setMockMode(boolean isMockMode) Sets whether or not the location provider is in mock mode.","void unregisterConnectionCallbacks(GooglePlayServicesClient.ConnectionCallbacks listener) Removes a connection listener from this GooglePlayServicesClient.","void unregisterConnectionFailedListener(GooglePlayServicesClient.OnConnectionFailedListener listener) Removes a connection failed listener from the GooglePlayServicesClient.","[Expand] Inherited Methods","From class java.lang.Object Object clone() boolean equals(Object arg0) void finalize() final Class<?> getClass() int hashCode() final void notify() final void notifyAll() String toString() final void wait() final void wait(long arg0, int arg1) final void wait(long arg0)","Object clone()","boolean equals(Object arg0)","void finalize()","final Class<?> getClass()","int hashCode()","final void notify()","final void notifyAll()","String toString()","final void wait()","final void wait(long arg0, int arg1)","final void wait(long arg0)","From interface com.google.android.gms.common.GooglePlayServicesClient abstract void connect() Connects the client to Google Play services. abstract void disconnect() Closes the connection to Google Play services. abstract boolean isConnected() Checks if the client is currently connected to the service, so that requests to other methods will succeed. abstract boolean isConnecting() Checks if the client is attempting to connect to the service. abstract boolean isConnectionCallbacksRegistered(GooglePlayServicesClient.ConnectionCallbacks listener) Returns true if the specified listener is currently registered to receive connection events. abstract boolean isConnectionFailedListenerRegistered(GooglePlayServicesClient.OnConnectionFailedListener listener) Returns true if the specified listener is currently registered to receive connection failed events. abstract void registerConnectionCallbacks(GooglePlayServicesClient.ConnectionCallbacks listener) Registers a listener to receive connection events from this GooglePlayServicesClient. abstract void registerConnectionFailedListener(GooglePlayServicesClient.OnConnectionFailedListener listener) Registers a listener to receive connection failed events from this GooglePlayServicesClient. abstract void unregisterConnectionCallbacks(GooglePlayServicesClient.ConnectionCallbacks listener) Removes a connection listener from this GooglePlayServicesClient. abstract void unregisterConnectionFailedListener(GooglePlayServicesClient.OnConnectionFailedListener listener) Removes a connection failed listener from the GooglePlayServicesClient.","abstract void connect() Connects the client to Google Play services.","abstract void disconnect() Closes the connection to Google Play services.","abstract boolean isConnected() Checks if the client is currently connected to the service, so that requests to other methods will succeed.","abstract boolean isConnecting() Checks if the client is attempting to connect to the service.","abstract boolean isConnectionCallbacksRegistered(GooglePlayServicesClient.ConnectionCallbacks listener) Returns true if the specified listener is currently registered to receive connection events.","abstract boolean isConnectionFailedListenerRegistered(GooglePlayServicesClient.OnConnectionFailedListener listener) Returns true if the specified listener is currently registered to receive connection failed events.","abstract void registerConnectionCallbacks(GooglePlayServicesClient.ConnectionCallbacks listener) Registers a listener to receive connection events from this GooglePlayServicesClient.","abstract void registerConnectionFailedListener(GooglePlayServicesClient.OnConnectionFailedListener listener) Registers a listener to receive connection failed events from this GooglePlayServicesClient.","abstract void unregisterConnectionCallbacks(GooglePlayServicesClient.ConnectionCallbacks listener) Removes a connection listener from this GooglePlayServicesClient.","abstract void unregisterConnectionFailedListener(GooglePlayServicesClient.OnConnectionFailedListener listener) Removes a connection failed listener from the GooglePlayServicesClient."],"package":"com.google.android.gms.location","constants":["String KEY_LOCATION_CHANGED Key used for a Bundle extra holding a Location value when a location change is broadcast using a PendingIntent.","String KEY_MOCK_LOCATION Key used for the Bundle extra in Location object holding a boolean indicating whether the location was set using setMockLocation(Location)."],"class":"LocationClient","constructors":[],"fields":[]}