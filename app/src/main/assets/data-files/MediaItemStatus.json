{"methods":["Bundle asBundle() Converts this object to a bundle for serialization.","static MediaItemStatus fromBundle(Bundle bundle) Creates an instance from a bundle.","long getContentDuration() Gets the total duration of the content to be played as a long integer number of milliseconds.","long getContentPosition() Gets the content playback position as a long integer number of milliseconds from the beginning of the content.","Bundle getExtras() Gets a bundle of extras for this status object.","int getPlaybackState() Gets the playback state of the media item.","long getTimestamp() Gets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime() time base.","String toString() Returns a string containing a concise, human-readable description of this object.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v7.media","constants":["String EXTRA_HTTP_RESPONSE_HEADERS Bundle extra: HTTP response headers.","String EXTRA_HTTP_STATUS_CODE Integer extra: HTTP status code.","int PLAYBACK_STATE_BUFFERING Playback state: Buffering or seeking to a new position.","int PLAYBACK_STATE_CANCELED Playback state: Canceled.","int PLAYBACK_STATE_ERROR Playback state: Playback halted or aborted due to an error.","int PLAYBACK_STATE_FINISHED Playback state: Finished.","int PLAYBACK_STATE_INVALIDATED Playback state: Invalidated.","int PLAYBACK_STATE_PAUSED Playback state: Paused.","int PLAYBACK_STATE_PENDING Playback state: Pending.","int PLAYBACK_STATE_PLAYING Playback state: Playing."],"class":"MediaItemStatus","constructors":[],"fields":[]}