{"methods":["void addRoute(MediaRouter.RouteInfo route) Add a route to this group.","void addRoute(MediaRouter.RouteInfo route, int insertAt) Add a route to this group before the specified index.","MediaRouter.RouteInfo getRouteAt(int index) Return the route in this group at the specified index","int getRouteCount()","void removeRoute(int index) Remove the route at the specified index from this group.","void removeRoute(MediaRouter.RouteInfo route) Remove a route from this group.","void requestSetVolume(int volume) Request a volume change for this route.","void requestUpdateVolume(int direction) Request an incremental volume update for this route.","void setIconDrawable(Drawable icon) Set an icon that will be used to represent this group.","void setIconResource(int resId) Set an icon that will be used to represent this group.","String toString() Returns a string containing a concise, human-readable description of this object.","[Expand] Inherited Methods","From class android.media.MediaRouter.RouteInfo MediaRouter.RouteCategory getCategory() CharSequence getDescription() Gets the user-visible description of the route. MediaRouter.RouteGroup getGroup() Drawable getIconDrawable() Get the icon representing this route. CharSequence getName(Context context) Return the properly localized/resource user-visible name of this route. CharSequence getName() Gets the user-visible name of the route. int getPlaybackStream() int getPlaybackType() Display getPresentationDisplay() Gets the Display that should be used by the application to show a Presentation on an external display when this route is selected. CharSequence getStatus() int getSupportedTypes() Object getTag() int getVolume() Return the current volume for this route. int getVolumeHandling() int getVolumeMax() boolean isConnecting() Returns true if the route is in the process of connecting and is not yet ready for use. boolean isEnabled() Returns true if this route is enabled and may be selected. void requestSetVolume(int volume) Request a volume change for this route. void requestUpdateVolume(int direction) Request an incremental volume update for this route. void setTag(Object tag) Set an application-specific tag object for this route. String toString() Returns a string containing a concise, human-readable description of this object.","MediaRouter.RouteCategory getCategory()","CharSequence getDescription() Gets the user-visible description of the route.","MediaRouter.RouteGroup getGroup()","Drawable getIconDrawable() Get the icon representing this route.","CharSequence getName(Context context) Return the properly localized/resource user-visible name of this route.","CharSequence getName() Gets the user-visible name of the route.","int getPlaybackStream()","int getPlaybackType()","Display getPresentationDisplay() Gets the Display that should be used by the application to show a Presentation on an external display when this route is selected.","CharSequence getStatus()","int getSupportedTypes()","Object getTag()","int getVolume() Return the current volume for this route.","int getVolumeHandling()","int getVolumeMax()","boolean isConnecting() Returns true if the route is in the process of connecting and is not yet ready for use.","boolean isEnabled() Returns true if this route is enabled and may be selected.","void requestSetVolume(int volume) Request a volume change for this route.","void requestUpdateVolume(int direction) Request an incremental volume update for this route.","void setTag(Object tag) Set an application-specific tag object for this route.","String toString() Returns a string containing a concise, human-readable description of this object.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.media","constants":["[Expand] Inherited Constants","From class android.media.MediaRouter.RouteInfo int PLAYBACK_TYPE_LOCAL The default playback type, \"local\", indicating the presentation of the media is happening on the same device (e.g. int PLAYBACK_TYPE_REMOTE A playback type indicating the presentation of the media is happening on a different device (i.e. int PLAYBACK_VOLUME_FIXED Playback information indicating the playback volume is fixed, i.e. int PLAYBACK_VOLUME_VARIABLE Playback information indicating the playback volume is variable and can be controlled from this object.","int PLAYBACK_TYPE_LOCAL The default playback type, \"local\", indicating the presentation of the media is happening on the same device (e.g.","int PLAYBACK_TYPE_REMOTE A playback type indicating the presentation of the media is happening on a different device (i.e.","int PLAYBACK_VOLUME_FIXED Playback information indicating the playback volume is fixed, i.e.","int PLAYBACK_VOLUME_VARIABLE Playback information indicating the playback volume is variable and can be controlled from this object."],"class":"MediaRouter.RouteGroup","constructors":[],"fields":[]}