{"methods":["Object getMediaSession() Gets the underlying framework MediaSession object.","MediaSessionCompat.Token getSessionToken() Retrieve a token object that can be used by apps to create a MediaControllerCompat for interacting with this session.","boolean isActive() Get the current active state of this session.","static MediaSessionCompat obtain(Object mediaSession) Obtain a compat wrapper for an existing MediaSession.","void release() This must be called when an app has finished performing playback.","void sendSessionEvent(String event, Bundle extras) Send a proprietary event to all MediaControllers listening to this Session.","void setActive(boolean active) Set if this session is currently active and ready to receive commands.","void setCallback(MediaSessionCompat.Callback callback) Add a callback to receive updates on for the MediaSession.","void setCallback(MediaSessionCompat.Callback callback, Handler handler) Set the callback to receive updates for the MediaSession.","void setFlags(int flags) Set any flags for the session.","void setMetadata(MediaMetadataCompat metadata) Update the current metadata.","void setPlaybackState(PlaybackStateCompat state) Update the current playback state.","void setPlaybackToLocal(int stream) Set the stream this session is playing on.","void setPlaybackToRemote(VolumeProviderCompat volumeProvider) Configure this session to use remote volume handling.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v4.media.session","constants":["int FLAG_HANDLES_MEDIA_BUTTONS Set this flag on the session to indicate that it can handle media button events.","int FLAG_HANDLES_TRANSPORT_CONTROLS Set this flag on the session to indicate that it handles transport control commands through its MediaSessionCompat.Callback."],"class":"MediaSessionCompat","constructors":[],"fields":[]}