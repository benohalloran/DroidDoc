{"methods":["long[] getActiveTrackIds() Returns the list of active track IDs, if any, otherwise null.","JSONObject getCustomData() Returns any custom data that is associated with the media item.","int getIdleReason() Gets the player state idle reason.","MediaInfo getMediaInfo() Returns the MediaInfo for this item.","double getPlaybackRate() Gets the current stream playback rate.","int getPlayerState() Gets the current media player state.","long getStreamPosition() Returns the current stream position, in milliseconds.","double getStreamVolume() Returns the stream's volume.","boolean isMediaCommandSupported(long mediaCommand) Tests if the stream supports a given control command.","boolean isMute() Returns the stream's mute state.","[Expand] Inherited Methods","From class java.lang.Object Object clone() boolean equals(Object arg0) void finalize() final Class<?> getClass() int hashCode() final void notify() final void notifyAll() String toString() final void wait() final void wait(long arg0, int arg1) final void wait(long arg0)","Object clone()","boolean equals(Object arg0)","void finalize()","final Class<?> getClass()","int hashCode()","final void notify()","final void notifyAll()","String toString()","final void wait()","final void wait(long arg0, int arg1)","final void wait(long arg0)"],"package":"com.google.android.gms.cast","constants":["long COMMAND_PAUSE A flag (bitmask) indicating that a media item can be paused.","long COMMAND_SEEK A flag (bitmask) indicating that a media item supports seeking.","long COMMAND_SET_VOLUME A flag (bitmask) indicating that a media item's audio volume can be changed.","long COMMAND_SKIP_BACKWARD A flag (bitmask) indicating that a media item supports skipping backward.","long COMMAND_SKIP_FORWARD A flag (bitmask) indicating that a media item supports skipping forward.","long COMMAND_TOGGLE_MUTE A flag (bitmask) indicating that a media item's audio can be muted.","int IDLE_REASON_CANCELED Constant indicating that the player is idle because playback has been canceled in response to a STOP command.","int IDLE_REASON_ERROR Constant indicating that the player is idle because a playback error has occurred.","int IDLE_REASON_FINISHED Constant indicating that the player is idle because playback has finished.","int IDLE_REASON_INTERRUPTED Constant indicating that the player is idle because playback has been interrupted by a LOAD command.","int IDLE_REASON_NONE Constant indicating that the player currently has no idle reason.","int PLAYER_STATE_BUFFERING Constant indicating that the media player is buffering.","int PLAYER_STATE_IDLE Constant indicating that the media player is idle.","int PLAYER_STATE_PAUSED Constant indicating that the media player is paused.","int PLAYER_STATE_PLAYING Constant indicating that the media player is playing.","int PLAYER_STATE_UNKNOWN Constant indicating unknown player state."],"class":"MediaStatus","constructors":[],"fields":[]}