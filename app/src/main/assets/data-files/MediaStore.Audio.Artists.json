{"methods":["static Uri getContentUri(String volumeName) Get the content:// style URI for the artists table on the given volume.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.provider","constants":["String CONTENT_TYPE The MIME type for this table.","String DEFAULT_SORT_ORDER The default sort order for this table","String ENTRY_CONTENT_TYPE The MIME type for entries in this table.","[Expand] Inherited Constants","From interface android.provider.BaseColumns String _COUNT The count of rows in a directory. String _ID The unique ID for a row.","String _COUNT The count of rows in a directory.","String _ID The unique ID for a row.","From interface android.provider.MediaStore.Audio.ArtistColumns String ARTIST The artist who created the audio file, if any Type: TEXT String ARTIST_KEY A non human readable key calculated from the ARTIST, used for searching, sorting and grouping Type: TEXT String NUMBER_OF_ALBUMS The number of albums in the database for this artist String NUMBER_OF_TRACKS The number of albums in the database for this artist","String ARTIST The artist who created the audio file, if any Type: TEXT","String ARTIST_KEY A non human readable key calculated from the ARTIST, used for searching, sorting and grouping Type: TEXT","String NUMBER_OF_ALBUMS The number of albums in the database for this artist","String NUMBER_OF_TRACKS The number of albums in the database for this artist"],"class":"MediaStore.Audio.Artists","constructors":[],"fields":["public static final Uri EXTERNAL_CONTENT_URI The content:// style URI for the \"primary\" external storage volume.","public static final Uri INTERNAL_CONTENT_URI The content:// style URI for the internal storage."]}