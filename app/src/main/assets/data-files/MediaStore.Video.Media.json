{"methods":["static Uri getContentUri(String volumeName) Get the content:// style URI for the video media table on the given volume.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.provider","constants":["String CONTENT_TYPE The MIME type for this table.","String DEFAULT_SORT_ORDER The default sort order for this table","[Expand] Inherited Constants","From interface android.provider.BaseColumns String _COUNT The count of rows in a directory. String _ID The unique ID for a row.","String _COUNT The count of rows in a directory.","String _ID The unique ID for a row.","From interface android.provider.MediaStore.MediaColumns String DATA The data stream for the file Type: DATA STREAM String DATE_ADDED The time the file was added to the media provider Units are seconds since 1970. String DATE_MODIFIED The time the file was last modified Units are seconds since 1970. String DISPLAY_NAME The display name of the file Type: TEXT String HEIGHT The height of the image/video in pixels. String MIME_TYPE The MIME type of the file Type: TEXT String SIZE The size of the file in bytes Type: INTEGER (long) String TITLE The title of the content Type: TEXT String WIDTH The width of the image/video in pixels.","String DATA The data stream for the file Type: DATA STREAM","String DATE_ADDED The time the file was added to the media provider Units are seconds since 1970.","String DATE_MODIFIED The time the file was last modified Units are seconds since 1970.","String DISPLAY_NAME The display name of the file Type: TEXT","String HEIGHT The height of the image/video in pixels.","String MIME_TYPE The MIME type of the file Type: TEXT","String SIZE The size of the file in bytes Type: INTEGER (long)","String TITLE The title of the content Type: TEXT","String WIDTH The width of the image/video in pixels.","From interface android.provider.MediaStore.Video.VideoColumns String ALBUM The album the video file is from, if any Type: TEXT String ARTIST The artist who created the video file, if any Type: TEXT String BOOKMARK The bookmark for the video. String BUCKET_DISPLAY_NAME The bucket display name of the video. String BUCKET_ID The bucket id of the video. String CATEGORY The YouTube category of the video Type: TEXT String DATE_TAKEN The date & time that the video was taken in units of milliseconds since jan 1, 1970. String DESCRIPTION The description of the video recording Type: TEXT String DURATION The duration of the video file, in ms Type: INTEGER (long) String IS_PRIVATE Whether the video should be published as public or private Type: INTEGER String LANGUAGE The language of the video Type: TEXT String LATITUDE The latitude where the video was captured. String LONGITUDE The longitude where the video was captured. String MINI_THUMB_MAGIC The mini thumb id. String RESOLUTION The resolution of the video file, formatted as \"XxY\" Type: TEXT String TAGS The user-added tags associated with a video Type: TEXT","String ALBUM The album the video file is from, if any Type: TEXT","String ARTIST The artist who created the video file, if any Type: TEXT","String BOOKMARK The bookmark for the video.","String BUCKET_DISPLAY_NAME The bucket display name of the video.","String BUCKET_ID The bucket id of the video.","String CATEGORY The YouTube category of the video Type: TEXT","String DATE_TAKEN The date & time that the video was taken in units of milliseconds since jan 1, 1970.","String DESCRIPTION The description of the video recording Type: TEXT","String DURATION The duration of the video file, in ms Type: INTEGER (long)","String IS_PRIVATE Whether the video should be published as public or private Type: INTEGER","String LANGUAGE The language of the video Type: TEXT","String LATITUDE The latitude where the video was captured.","String LONGITUDE The longitude where the video was captured.","String MINI_THUMB_MAGIC The mini thumb id.","String RESOLUTION The resolution of the video file, formatted as \"XxY\" Type: TEXT","String TAGS The user-added tags associated with a video Type: TEXT"],"class":"MediaStore.Video.Media","constructors":[],"fields":["public static final Uri EXTERNAL_CONTENT_URI The content:// style URI for the \"primary\" external storage volume.","public static final Uri INTERNAL_CONTENT_URI The content:// style URI for the internal storage."]}