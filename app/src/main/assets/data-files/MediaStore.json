{"methods":["static Uri getMediaScannerUri() Uri for querying the state of the media scanner.","static String getVersion(Context context) Get the media provider's version.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.provider","constants":["String ACTION_IMAGE_CAPTURE Standard Intent action that can be sent to have the camera application capture an image and return it.","String ACTION_IMAGE_CAPTURE_SECURE Intent action that can be sent to have the camera application capture an image and return it when the device is secured (e.g.","String ACTION_VIDEO_CAPTURE Standard Intent action that can be sent to have the camera application capture a video and return it.","String AUTHORITY","String EXTRA_DURATION_LIMIT Specify the maximum allowed recording duration in seconds.","String EXTRA_FINISH_ON_COMPLETION The name of the Intent-extra used to control the onCompletion behavior of a MovieView.","String EXTRA_FULL_SCREEN The name of an Intent-extra used to control the UI of a ViewImage.","String EXTRA_MEDIA_ALBUM The name of the Intent-extra used to define the album","String EXTRA_MEDIA_ARTIST The name of the Intent-extra used to define the artist","String EXTRA_MEDIA_FOCUS The name of the Intent-extra used to define the search focus.","String EXTRA_MEDIA_GENRE The name of the Intent-extra used to define the genre.","String EXTRA_MEDIA_PLAYLIST The name of the Intent-extra used to define the playlist.","String EXTRA_MEDIA_RADIO_CHANNEL The name of the Intent-extra used to define the radio channel.","String EXTRA_MEDIA_TITLE The name of the Intent-extra used to define the song title","String EXTRA_OUTPUT The name of the Intent-extra used to indicate a content resolver Uri to be used to store the requested image or video.","String EXTRA_SCREEN_ORIENTATION The name of the Intent-extra used to control the orientation of a ViewImage or a MovieView.","String EXTRA_SHOW_ACTION_ICONS The name of an Intent-extra used to control the UI of a ViewImage.","String EXTRA_SIZE_LIMIT Specify the maximum allowed size.","String EXTRA_VIDEO_QUALITY The name of the Intent-extra used to control the quality of a recorded video.","String INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH An intent to perform a search for music media and automatically play content from the result when possible.","String INTENT_ACTION_MEDIA_SEARCH Activity Action: Perform a search for media.","String INTENT_ACTION_MUSIC_PLAYER This constant was deprecated in API level 15. Use CATEGORY_APP_MUSIC instead.","String INTENT_ACTION_STILL_IMAGE_CAMERA The name of the Intent action used to launch a camera in still image mode.","String INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE The name of the Intent action used to launch a camera in still image mode for use when the device is secured (e.g.","String INTENT_ACTION_TEXT_OPEN_FROM_SEARCH An intent to perform a search for readable media and automatically play content from the result when possible.","String INTENT_ACTION_VIDEO_CAMERA The name of the Intent action used to launch a camera in video mode.","String INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH An intent to perform a search for video media and automatically play content from the result when possible.","String MEDIA_IGNORE_FILENAME Name of the file signaling the media scanner to ignore media in the containing directory and its subdirectories.","String MEDIA_SCANNER_VOLUME Name of current volume being scanned by the media scanner.","String UNKNOWN_STRING The string that is used when a media attribute is not known."],"class":"MediaStore","constructors":[],"fields":[]}