{"methods":["int digest(byte[] buf, int offset, int len) Computes and stores the final hash value for this MessageDigest.","byte[] digest() Computes and returns the final hash value for this MessageDigest.","byte[] digest(byte[] input) Performs the final update and then computes and returns the final hash value for this MessageDigest.","final String getAlgorithm() Returns the name of the algorithm of this MessageDigest.","final int getDigestLength() Returns the engine digest length in bytes.","static MessageDigest getInstance(String algorithm, String provider) Returns a new instance of MessageDigest that utilizes the specified algorithm from the specified provider.","static MessageDigest getInstance(String algorithm, Provider provider) Returns a new instance of MessageDigest that utilizes the specified algorithm from the specified provider.","static MessageDigest getInstance(String algorithm) Returns a new instance of MessageDigest that utilizes the specified algorithm.","final Provider getProvider() Returns the provider associated with this MessageDigest.","static boolean isEqual(byte[] digesta, byte[] digestb) Indicates whether to digest are equal by performing a simply byte-per-byte compare of the two digests.","void reset() Puts this MessageDigest back in an initial state, such that it is ready to compute a one way hash value.","String toString() Returns a string containing a concise, human-readable description of this MessageDigest including the name of its algorithm.","final void update(ByteBuffer input) Updates this MessageDigest using the given input.","void update(byte[] input, int offset, int len) Updates this MessageDigest using the given byte[].","void update(byte arg0) Updates this MessageDigest using the given byte.","void update(byte[] input) Updates this MessageDigest using the given byte[].","[Expand] Inherited Methods","From class java.security.MessageDigestSpi Object clone() Creates and returns a copy of this Object. abstract byte[] engineDigest() Computes and returns the final hash value for this MessageDigestSpi. int engineDigest(byte[] buf, int offset, int len) Computes and stores the final hash value for this MessageDigestSpi. int engineGetDigestLength() Returns the engine digest length in bytes. abstract void engineReset() Puts this MessageDigestSpi back in an initial state, such that it is ready to compute a one way hash value. abstract void engineUpdate(byte[] input, int offset, int len) Updates this MessageDigestSpi using the given byte[]. abstract void engineUpdate(byte input) Updates this MessageDigestSpi using the given byte. void engineUpdate(ByteBuffer input) Updates this MessageDigestSpi using the given input.","Object clone() Creates and returns a copy of this Object.","abstract byte[] engineDigest() Computes and returns the final hash value for this MessageDigestSpi.","int engineDigest(byte[] buf, int offset, int len) Computes and stores the final hash value for this MessageDigestSpi.","int engineGetDigestLength() Returns the engine digest length in bytes.","abstract void engineReset() Puts this MessageDigestSpi back in an initial state, such that it is ready to compute a one way hash value.","abstract void engineUpdate(byte[] input, int offset, int len) Updates this MessageDigestSpi using the given byte[].","abstract void engineUpdate(byte input) Updates this MessageDigestSpi using the given byte.","void engineUpdate(ByteBuffer input) Updates this MessageDigestSpi using the given input.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.security","constants":[],"class":"MessageDigest","constructors":[],"fields":[]}