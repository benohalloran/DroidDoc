{"methods":["static long adjustMetaAfterKeypress(long state) Call this method after you handle a keypress so that the meta state will be reset to unshifted (if it is not still down) or primed to be reset to unshifted (once it is released).","static void adjustMetaAfterKeypress(Spannable content) Call this method after you handle a keypress so that the meta state will be reset to unshifted (if it is not still down) or primed to be reset to unshifted (once it is released).","static void clearMetaKeyState(Editable content, int states)","void clearMetaKeyState(View view, Editable content, int states)","long clearMetaKeyState(long state, int which) Clears the state of the specified meta key if it is locked.","final static int getMetaState(CharSequence text) Gets the state of the meta keys.","final static int getMetaState(CharSequence text, KeyEvent event) Gets the state of the meta keys for a specific key event.","final static int getMetaState(long state, int meta) Gets the state of a particular meta key.","final static int getMetaState(long state) Gets the state of the meta keys.","final static int getMetaState(CharSequence text, int meta, KeyEvent event) Gets the state of a particular meta key to use with a particular key event.","final static int getMetaState(CharSequence text, int meta) Gets the state of a particular meta key.","static long handleKeyDown(long state, int keyCode, KeyEvent event) Handles presses of the meta keys.","static long handleKeyUp(long state, int keyCode, KeyEvent event) Handles release of the meta keys.","static boolean isMetaTracker(CharSequence text, Object what) Returns true if this object is one that this class would use to keep track of any meta state in the specified text.","static boolean isSelectingMetaTracker(CharSequence text, Object what) Returns true if this object is one that this class would use to keep track of the selecting meta state in the specified text.","boolean onKeyDown(View view, Editable content, int keyCode, KeyEvent event) Handles presses of the meta keys.","boolean onKeyUp(View view, Editable content, int keyCode, KeyEvent event) Handles release of the meta keys.","static long resetLockedMeta(long state) Call this if you are a method that ignores the locked meta state (arrow keys, for example) and you handle a key.","static void resetMetaState(Spannable text) Resets all meta state to inactive.","static void resetLockedMeta(Spannable content) Call this if you are a method that ignores the locked meta state (arrow keys, for example) and you handle a key.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.text.method","constants":["int META_ALT_LOCKED Flag that indicates that the ALT key is locked.","int META_ALT_ON Flag that indicates that the ALT key is on.","int META_CAP_LOCKED Flag that indicates that the SHIFT key is locked in CAPS mode.","int META_SHIFT_ON Flag that indicates that the SHIFT key is on.","int META_SYM_LOCKED Flag that indicates that the SYM key is locked.","int META_SYM_ON Flag that indicates that the SYM key is on."],"class":"MetaKeyKeyListener","constructors":[],"fields":[]}