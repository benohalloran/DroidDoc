{"methods":["void disableForegroundDispatch(Activity activity) Disable foreground dispatch to the given activity.","void disableForegroundNdefPush(Activity activity) This method was deprecated in API level 14. use setNdefPushMessage(NdefMessage, Activity, Activity...) instead","void disableReaderMode(Activity activity) Restore the NFC adapter to normal mode of operation: supporting peer-to-peer (Android Beam), card emulation, and polling for all supported tag technologies.","void enableForegroundDispatch(Activity activity, PendingIntent intent, IntentFilter[] filters, String[][] techLists) Enable foreground dispatch to the given Activity.","void enableForegroundNdefPush(Activity activity, NdefMessage message) This method was deprecated in API level 14. use setNdefPushMessage(NdefMessage, Activity, Activity...) instead","void enableReaderMode(Activity activity, NfcAdapter.ReaderCallback callback, int flags, Bundle extras) Limit the NFC controller to reader mode while this Activity is in the foreground.","static NfcAdapter getDefaultAdapter(Context context) Helper to get the default NFC Adapter.","boolean invokeBeam(Activity activity) Manually invoke Android Beam to share data.","boolean isEnabled() Return true if this NFC Adapter has any features enabled.","boolean isNdefPushEnabled() Return true if the NDEF Push (Android Beam) feature is enabled.","void setBeamPushUris(Uri[] uris, Activity activity) Set one or more Uris to send using Android Beam (TM).","void setBeamPushUrisCallback(NfcAdapter.CreateBeamUrisCallback callback, Activity activity) Set a callback that will dynamically generate one or more Uris to send using Android Beam (TM).","void setNdefPushMessage(NdefMessage message, Activity activity, Activity... activities) Set a static NdefMessage to send using Android Beam (TM).","void setNdefPushMessageCallback(NfcAdapter.CreateNdefMessageCallback callback, Activity activity, Activity... activities) Set a callback that dynamically generates NDEF messages to send using Android Beam (TM).","void setOnNdefPushCompleteCallback(NfcAdapter.OnNdefPushCompleteCallback callback, Activity activity, Activity... activities) Set a callback on successful Android Beam (TM).","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.nfc","constants":["String ACTION_ADAPTER_STATE_CHANGED Broadcast Action: The state of the local NFC adapter has been changed.","String ACTION_NDEF_DISCOVERED Intent to start an activity when a tag with NDEF payload is discovered.","String ACTION_TAG_DISCOVERED Intent to start an activity when a tag is discovered.","String ACTION_TECH_DISCOVERED Intent to start an activity when a tag is discovered and activities are registered for the specific technologies on the tag.","String EXTRA_ADAPTER_STATE Used as an int extra field in ACTION_ADAPTER_STATE_CHANGED intents to request the current power state.","String EXTRA_ID Optional extra containing a byte array containing the ID of the discovered tag for the ACTION_NDEF_DISCOVERED, ACTION_TECH_DISCOVERED, and ACTION_TAG_DISCOVERED intents.","String EXTRA_NDEF_MESSAGES Extra containing an array of NdefMessage present on the discovered tag.","String EXTRA_READER_PRESENCE_CHECK_DELAY Int Extra for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","String EXTRA_TAG Mandatory extra containing the Tag that was discovered for the ACTION_NDEF_DISCOVERED, ACTION_TECH_DISCOVERED, and ACTION_TAG_DISCOVERED intents.","int FLAG_READER_NFC_A Flag for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","int FLAG_READER_NFC_B Flag for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","int FLAG_READER_NFC_BARCODE Flag for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","int FLAG_READER_NFC_F Flag for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","int FLAG_READER_NFC_V Flag for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","int FLAG_READER_NO_PLATFORM_SOUNDS Flag for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","int FLAG_READER_SKIP_NDEF_CHECK Flag for use with enableReaderMode(Activity, ReaderCallback, int, Bundle).","int STATE_OFF","int STATE_ON","int STATE_TURNING_OFF","int STATE_TURNING_ON"],"class":"NfcAdapter","constructors":[],"fields":[]}