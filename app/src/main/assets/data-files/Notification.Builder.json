{"methods":["Notification.Builder addAction(Notification.Action action) Add an action to this notification.","Notification.Builder addAction(int icon, CharSequence title, PendingIntent intent) Add an action to this notification.","Notification.Builder addExtras(Bundle extras) Merge additional metadata into this notification.","Notification.Builder addPerson(String uri) Add a person that is relevant to this notification.","Notification build() Combine all of the options that have been set and return a new Notification object.","Notification.Builder extend(Notification.Extender extender) Apply an extender to this notification builder.","Bundle getExtras() Get the current metadata Bundle used by this notification Builder.","Notification getNotification() This method was deprecated in API level 16. Use build() instead.","Notification.Builder setAutoCancel(boolean autoCancel) Make this notification automatically dismissed when the user touches it.","Notification.Builder setCategory(String category) Set the notification category.","Notification.Builder setColor(int argb) Sets color.","Notification.Builder setContent(RemoteViews views) Supply a custom RemoteViews to use instead of the platform template.","Notification.Builder setContentInfo(CharSequence info) A small piece of additional information pertaining to this notification.","Notification.Builder setContentIntent(PendingIntent intent) Supply a PendingIntent to be sent when the notification is clicked.","Notification.Builder setContentText(CharSequence text) Set the second line of text in the platform notification template.","Notification.Builder setContentTitle(CharSequence title) Set the first line of text in the platform notification template.","Notification.Builder setDefaults(int defaults) Set which notification properties will be inherited from system defaults.","Notification.Builder setDeleteIntent(PendingIntent intent) Supply a PendingIntent to send when the notification is cleared explicitly by the user.","Notification.Builder setExtras(Bundle extras) Set metadata for this notification.","Notification.Builder setFullScreenIntent(PendingIntent intent, boolean highPriority) An intent to launch instead of posting the notification to the status bar.","Notification.Builder setGroup(String groupKey) Set this notification to be part of a group of notifications sharing the same key.","Notification.Builder setGroupSummary(boolean isGroupSummary) Set this notification to be the group summary for a group of notifications.","Notification.Builder setLargeIcon(Bitmap icon) Add a large icon to the notification (and the ticker on some devices).","Notification.Builder setLights(int argb, int onMs, int offMs) Set the desired color for the indicator LED on the device, as well as the blink duty cycle (specified in milliseconds).","Notification.Builder setLocalOnly(boolean localOnly) Set whether or not this notification should not bridge to other devices.","Notification.Builder setNumber(int number) Set the large number at the right-hand side of the notification.","Notification.Builder setOngoing(boolean ongoing) Set whether this is an \"ongoing\" notification.","Notification.Builder setOnlyAlertOnce(boolean onlyAlertOnce) Set this flag if you would only like the sound, vibrate and ticker to be played if the notification is not already showing.","Notification.Builder setPriority(int pri) Set the priority of this notification.","Notification.Builder setProgress(int max, int progress, boolean indeterminate) Set the progress this notification represents.","Notification.Builder setPublicVersion(Notification n) Supply a replacement Notification whose contents should be shown in insecure contexts (i.e.","Notification.Builder setShowWhen(boolean show) Control whether the timestamp set with setWhen is shown in the content view.","Notification.Builder setSmallIcon(int icon, int level) A variant of setSmallIcon(int) that takes an additional level parameter for when the icon is a LevelListDrawable.","Notification.Builder setSmallIcon(int icon) Set the small icon resource, which will be used to represent the notification in the status bar.","Notification.Builder setSortKey(String sortKey) Set a sort key that orders this notification among other notifications from the same package.","Notification.Builder setSound(Uri sound, AudioAttributes audioAttributes) Set the sound to play, along with specific audio attributes to use during playback.","Notification.Builder setSound(Uri sound) Set the sound to play.","Notification.Builder setSound(Uri sound, int streamType) This method was deprecated in API level 21. use setSound(Uri, AudioAttributes) instead.","Notification.Builder setStyle(Notification.Style style) Add a rich notification style to be applied at build time.","Notification.Builder setSubText(CharSequence text) Set the third line of text in the platform notification template.","Notification.Builder setTicker(CharSequence tickerText, RemoteViews views) Obsolete version of setTicker(CharSequence).","Notification.Builder setTicker(CharSequence tickerText) Set the \"ticker\" text which is sent to accessibility services.","Notification.Builder setUsesChronometer(boolean b) Show the when field as a stopwatch.","Notification.Builder setVibrate(long[] pattern) Set the vibration pattern to use.","Notification.Builder setVisibility(int visibility) Specify the value of visibility.","Notification.Builder setWhen(long when) Add a timestamp pertaining to the notification (usually the time the event occurred).","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.app","constants":[],"class":"Notification.Builder","constructors":[],"fields":[]}