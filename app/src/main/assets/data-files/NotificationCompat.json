{"methods":["static NotificationCompat.Action getAction(Notification notif, int actionIndex) Get an action on this notification in a backwards compatible manner.","static int getActionCount(Notification notif) Get the number of actions in this notification in a backwards compatible manner.","static String getCategory(Notification notif) Get the category of this notification in a backwards compatible manner.","static Bundle getExtras(Notification notif) Gets the extras field from a notification in a backwards compatible manner.","static String getGroup(Notification notif) Get the key used to group this notification into a cluster or stack with other notifications on devices which support such rendering.","static boolean getLocalOnly(Notification notif) Get whether or not this notification is only relevant to the current device.","static String getSortKey(Notification notif) Get a sort key that orders this notification among other notifications from the same package.","static boolean isGroupSummary(Notification notif) Get whether this notification to be the group summary for a group of notifications.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.support.v4.app","constants":["String CATEGORY_ALARM Notification category: alarm or timer.","String CATEGORY_CALL Notification category: incoming call (voice or video) or similar synchronous communication request.","String CATEGORY_EMAIL Notification category: asynchronous bulk message (email).","String CATEGORY_ERROR Notification category: error in background operation or authentication status.","String CATEGORY_EVENT Notification category: calendar event.","String CATEGORY_MESSAGE Notification category: incoming direct message (SMS, instant message, etc.).","String CATEGORY_PROGRESS Notification category: progress of a long-running background operation.","String CATEGORY_PROMO Notification category: promotion or advertisement.","String CATEGORY_RECOMMENDATION Notification category: a specific, timely recommendation for a single thing.","String CATEGORY_SERVICE Notification category: indication of running background service.","String CATEGORY_SOCIAL Notification category: social network or sharing update.","String CATEGORY_STATUS Notification category: ongoing information about device or contextual status.","String CATEGORY_SYSTEM Notification category: system or device status update.","String CATEGORY_TRANSPORT Notification category: media transport control for playback.","int COLOR_DEFAULT Value of color equal to 0 (also known as Color.TRANSPARENT), telling the system not to decorate this notification with any special color but instead use default colors when presenting this notification.","int DEFAULT_ALL Use all default values (where applicable).","int DEFAULT_LIGHTS Use the default notification lights.","int DEFAULT_SOUND Use the default notification sound.","int DEFAULT_VIBRATE Use the default notification vibrate.","String EXTRA_BACKGROUND_IMAGE_URI Notification extras key: A content URI pointing to an image that can be displayed in the background when the notification is selected.","String EXTRA_BIG_TEXT Notification extras key: this is the longer text shown in the big form of a NotificationCompat.BigTextStyle notification, as supplied to bigText(CharSequence).","String EXTRA_COMPACT_ACTIONS Notification extras key: the indices of actions to be shown in the compact view, as supplied to (e.g.) setShowActionsInCompactView(int).","String EXTRA_INFO_TEXT Notification extras key: this is a small piece of additional text as supplied to setContentInfo(CharSequence).","String EXTRA_LARGE_ICON Notification extras key: this is a bitmap to be used instead of the small icon when showing the notification payload, as supplied to setLargeIcon(android.graphics.Bitmap).","String EXTRA_LARGE_ICON_BIG Notification extras key: this is a bitmap to be used instead of the one from setLargeIcon(android.graphics.Bitmap) when the notification is shown in its expanded form, as supplied to bigLargeIcon(android.graphics.Bitmap).","String EXTRA_MEDIA_SESSION Notification key: A MediaSession.Token associated with a Notification.MediaStyle notification.","String EXTRA_PEOPLE Notification extras key: A String array containing the people that this notification relates to, each of which was supplied to addPerson(String).","String EXTRA_PICTURE Notification extras key: this is a bitmap to be shown in NotificationCompat.BigPictureStyle expanded notifications, supplied to bigPicture(android.graphics.Bitmap).","String EXTRA_PROGRESS Notification extras key: this is the progress value supplied to setProgress(int, int, boolean).","String EXTRA_PROGRESS_INDETERMINATE Notification extras key: whether the progress bar is indeterminate, supplied to setProgress(int, int, boolean).","String EXTRA_PROGRESS_MAX Notification extras key: this is the maximum value supplied to setProgress(int, int, boolean).","String EXTRA_SHOW_CHRONOMETER Notification extras key: whether the when field set using setWhen(long) should be shown as a count-up timer (specifically a Chronometer) instead of a timestamp, as supplied to setUsesChronometer(boolean).","String EXTRA_SHOW_WHEN Notification extras key: whether the when field set using setWhen(long) should be shown, as supplied to setShowWhen(boolean).","String EXTRA_SMALL_ICON Notification extras key: this is the resource ID of the notification's main small icon, as supplied to setSmallIcon(int).","String EXTRA_SUB_TEXT Notification extras key: this is a third line of text, as supplied to setSubText(CharSequence).","String EXTRA_SUMMARY_TEXT Notification extras key: this is a line of summary information intended to be shown alongside expanded notifications, as supplied to (e.g.) setSummaryText(CharSequence).","String EXTRA_TEMPLATE Notification extras key: A string representing the name of the specific Notification.Style used to create this notification.","String EXTRA_TEXT Notification extras key: this is the main text payload, as supplied to setContentText(CharSequence).","String EXTRA_TEXT_LINES Notification extras key: An array of CharSequences to show in NotificationCompat.InboxStyle expanded notifications, each of which was supplied to addLine(CharSequence).","String EXTRA_TITLE Notification extras key: this is the title of the notification, as supplied to setContentTitle(CharSequence).","String EXTRA_TITLE_BIG Notification extras key: this is the title of the notification when shown in expanded form, e.g.","int FLAG_AUTO_CANCEL Bit set in the Notification flags field if the notification should be canceled when it is clicked by the user.","int FLAG_FOREGROUND_SERVICE Bit set in the Notification flags field if this notification represents a currently running service.","int FLAG_GROUP_SUMMARY Bit set in the Notification flags field if this notification is the group summary for a group of notifications.","int FLAG_HIGH_PRIORITY This constant is deprecated. Use setPriority(int) with a positive value.","int FLAG_INSISTENT Bit set in the Notification flags field if the audio will be repeated until the notification is cancelled or the notification window is opened.","int FLAG_LOCAL_ONLY Bit set in the Notification flags field if this notification is relevant to the current device only and it is not recommended that it bridge to other devices.","int FLAG_NO_CLEAR Bit set in the Notification flags field if the notification should not be canceled when the user clicks the Clear all button.","int FLAG_ONGOING_EVENT Bit set in the Notification flags field if this notification is in reference to something that is ongoing, like a phone call.","int FLAG_ONLY_ALERT_ONCE Bit set in the Notification flags field if the notification's sound, vibrate and ticker should only be played if the notification is not already showing.","int FLAG_SHOW_LIGHTS Bit set in the Notification flags field when LEDs should be turned on for this notification.","int PRIORITY_DEFAULT Default notification priority for setPriority(int).","int PRIORITY_HIGH Higher notification priority for setPriority(int), for more important notifications or alerts.","int PRIORITY_LOW Lower notification priority for setPriority(int), for items that are less important.","int PRIORITY_MAX Highest notification priority for setPriority(int), for your application's most important items that require the user's prompt attention or input.","int PRIORITY_MIN Lowest notification priority for setPriority(int); these items might not be shown to the user except under special circumstances, such as detailed notification logs.","int STREAM_DEFAULT Use this constant as the value for audioStreamType to request that the default stream type for notifications be used.","int VISIBILITY_PRIVATE Notification visibility: Show this notification on all lockscreens, but conceal sensitive or private information on secure lockscreens.","int VISIBILITY_PUBLIC Notification visibility: Show this notification in its entirety on all lockscreens.","int VISIBILITY_SECRET Notification visibility: Do not reveal any part of this notification on a secure lockscreen."],"class":"NotificationCompat","constructors":[],"fields":[]}