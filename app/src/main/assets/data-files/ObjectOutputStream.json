{"methods":["void close() Closes this stream.","void defaultWriteObject() Default method to write objects to this stream.","void flush() Writes buffered data to the target stream and calls the flush method of the target stream.","ObjectOutputStream.PutField putFields() Gets this stream's PutField object.","void reset() Resets the state of this stream.","void useProtocolVersion(int version) Sets the specified protocol version to be used by this stream.","void write(int value) Writes a single byte to the target stream.","void write(byte[] buffer, int offset, int length) Writes count bytes from the byte array buffer starting at offset index to the target stream.","void writeBoolean(boolean value) Writes a boolean to the target stream.","void writeByte(int value) Writes a byte (8 bit) to the target stream.","void writeBytes(String value) Writes the string value as a sequence of bytes to the target stream.","void writeChar(int value) Writes a character (16 bit) to the target stream.","void writeChars(String value) Writes the string value as a sequence of characters to the target stream.","void writeDouble(double value) Writes a double (64 bit) to the target stream.","void writeFields() Writes the fields of the object currently being written to the target stream.","void writeFloat(float value) Writes a float (32 bit) to the target stream.","void writeInt(int value) Writes an integer (32 bit) to the target stream.","void writeLong(long value) Writes a long (64 bit) to the target stream.","final void writeObject(Object object) Writes an object to the target stream.","void writeShort(int value) Writes a short (16 bit) to the target stream.","void writeUTF(String value) Writes a string encoded with modified UTF-8 to the target stream.","void writeUnshared(Object object) Writes an unshared object to the target stream.","void annotateClass(Class<?> aClass) Writes optional information for class aClass to the output stream.","void annotateProxyClass(Class<?> aClass) Writes optional information for a proxy class to the target stream.","void drain() Writes buffered data to the target stream.","boolean enableReplaceObject(boolean enable) Enables object replacement for this stream.","Object replaceObject(Object object) Allows trusted subclasses to substitute the specified original object with a new object.","void writeClassDescriptor(ObjectStreamClass classDesc) Writes a class descriptor to the target stream.","void writeObjectOverride(Object object) Method to be overridden by subclasses to write object to the target stream.","void writeStreamHeader() Writes the ObjectOutputStream header to the target stream.","[Expand] Inherited Methods","From class java.io.OutputStream void close() Closes this stream. void flush() Flushes this stream. void write(byte[] buffer, int offset, int count) Writes count bytes from the byte array buffer starting at position offset to this stream. void write(byte[] buffer) Equivalent to write(buffer, 0, buffer.length). abstract void write(int oneByte) Writes a single byte to this stream.","void close() Closes this stream.","void flush() Flushes this stream.","void write(byte[] buffer, int offset, int count) Writes count bytes from the byte array buffer starting at position offset to this stream.","void write(byte[] buffer) Equivalent to write(buffer, 0, buffer.length).","abstract void write(int oneByte) Writes a single byte to this stream.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.io.Closeable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.io.DataOutput abstract void write(int oneByte) Writes the specified 8-bit byte. abstract void write(byte[] buffer, int offset, int count) Writes count bytes from the byte array buffer starting at offset index. abstract void write(byte[] buffer) Writes the entire contents of the byte array buffer to this stream. abstract void writeBoolean(boolean val) Writes the specified boolean. abstract void writeByte(int val) Writes the specified 8-bit byte. abstract void writeBytes(String str) Writes the low order 8-bit bytes from the specified string. abstract void writeChar(int val) Writes the specified 16-bit character in big-endian order. abstract void writeChars(String str) Writes the 16-bit characters contained in str in big-endian order. abstract void writeDouble(double val) Writes the specified 64-bit double in big-endian order. abstract void writeFloat(float val) Writes the specified 32-bit float in big-endian order. abstract void writeInt(int val) Writes the specified 32-bit int in big-endian order. abstract void writeLong(long val) Writes the specified 64-bit long in big-endian order. abstract void writeShort(int val) Writes the specified 16-bit short in big-endian order. abstract void writeUTF(String str) Writes the specified string encoded in modified UTF-8.","abstract void write(int oneByte) Writes the specified 8-bit byte.","abstract void write(byte[] buffer, int offset, int count) Writes count bytes from the byte array buffer starting at offset index.","abstract void write(byte[] buffer) Writes the entire contents of the byte array buffer to this stream.","abstract void writeBoolean(boolean val) Writes the specified boolean.","abstract void writeByte(int val) Writes the specified 8-bit byte.","abstract void writeBytes(String str) Writes the low order 8-bit bytes from the specified string.","abstract void writeChar(int val) Writes the specified 16-bit character in big-endian order.","abstract void writeChars(String str) Writes the 16-bit characters contained in str in big-endian order.","abstract void writeDouble(double val) Writes the specified 64-bit double in big-endian order.","abstract void writeFloat(float val) Writes the specified 32-bit float in big-endian order.","abstract void writeInt(int val) Writes the specified 32-bit int in big-endian order.","abstract void writeLong(long val) Writes the specified 64-bit long in big-endian order.","abstract void writeShort(int val) Writes the specified 16-bit short in big-endian order.","abstract void writeUTF(String str) Writes the specified string encoded in modified UTF-8.","From interface java.io.Flushable abstract void flush() Flushes the object by writing out any buffered data to the underlying output.","abstract void flush() Flushes the object by writing out any buffered data to the underlying output.","From interface java.io.ObjectOutput abstract void close() Closes the target stream. abstract void flush() Flushes the target stream. abstract void write(byte[] buffer, int offset, int count) Writes count bytes from the byte array buffer starting at position offset to the target stream. abstract void write(byte[] buffer) Writes the entire contents of the byte array buffer to the output stream. abstract void write(int value) Writes a single byte to the target stream. abstract void writeObject(Object obj) Writes the specified object obj to the target stream.","abstract void close() Closes the target stream.","abstract void flush() Flushes the target stream.","abstract void write(byte[] buffer, int offset, int count) Writes count bytes from the byte array buffer starting at position offset to the target stream.","abstract void write(byte[] buffer) Writes the entire contents of the byte array buffer to the output stream.","abstract void write(int value) Writes a single byte to the target stream.","abstract void writeObject(Object obj) Writes the specified object obj to the target stream.","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds."],"package":"java.io","constants":["[Expand] Inherited Constants","From interface java.io.ObjectStreamConstants int PROTOCOL_VERSION_1 Stream protocol version 1. int PROTOCOL_VERSION_2 Stream protocol version 2. byte SC_BLOCK_DATA Bit mask for the flag field in ObjectStreamClass. byte SC_ENUM Bit mask for the flag field in ObjectStreamClass. byte SC_EXTERNALIZABLE Bit mask for the flag field in ObjectStreamClass. byte SC_SERIALIZABLE Bit mask for the flag field in ObjectStreamClass. byte SC_WRITE_METHOD Bit mask for the flag field in ObjectStreamClass. short STREAM_MAGIC The stream header's magic number. short STREAM_VERSION The stream header's version number. byte TC_ARRAY Tag to mark a new array. byte TC_BASE The minimum tag value. byte TC_BLOCKDATA Tag to mark a block of optional data. byte TC_BLOCKDATALONG Tag to mark a long block of data. byte TC_CLASS Tag to mark a reference to a class. byte TC_CLASSDESC Tag to mark a new class descriptor. byte TC_ENDBLOCKDATA Tag to mark the end of block data blocks for an object. byte TC_ENUM Tag to mark a new enum. byte TC_EXCEPTION Tag to mark an exception. byte TC_LONGSTRING Tag to mark a long string. byte TC_MAX The maximum tag value. byte TC_NULL Tag to mark a null object reference. byte TC_OBJECT Tag to mark a new object. byte TC_PROXYCLASSDESC Tag to mark a new proxy class descriptor. byte TC_REFERENCE Tag to mark a reference to an object that has already been written to the stream. byte TC_RESET Tag to mark a stream reset. byte TC_STRING Tag to mark a new string. int baseWireHandle Handle for the first object that gets serialized.","int PROTOCOL_VERSION_1 Stream protocol version 1.","int PROTOCOL_VERSION_2 Stream protocol version 2.","byte SC_BLOCK_DATA Bit mask for the flag field in ObjectStreamClass.","byte SC_ENUM Bit mask for the flag field in ObjectStreamClass.","byte SC_EXTERNALIZABLE Bit mask for the flag field in ObjectStreamClass.","byte SC_SERIALIZABLE Bit mask for the flag field in ObjectStreamClass.","byte SC_WRITE_METHOD Bit mask for the flag field in ObjectStreamClass.","short STREAM_MAGIC The stream header's magic number.","short STREAM_VERSION The stream header's version number.","byte TC_ARRAY Tag to mark a new array.","byte TC_BASE The minimum tag value.","byte TC_BLOCKDATA Tag to mark a block of optional data.","byte TC_BLOCKDATALONG Tag to mark a long block of data.","byte TC_CLASS Tag to mark a reference to a class.","byte TC_CLASSDESC Tag to mark a new class descriptor.","byte TC_ENDBLOCKDATA Tag to mark the end of block data blocks for an object.","byte TC_ENUM Tag to mark a new enum.","byte TC_EXCEPTION Tag to mark an exception.","byte TC_LONGSTRING Tag to mark a long string.","byte TC_MAX The maximum tag value.","byte TC_NULL Tag to mark a null object reference.","byte TC_OBJECT Tag to mark a new object.","byte TC_PROXYCLASSDESC Tag to mark a new proxy class descriptor.","byte TC_REFERENCE Tag to mark a reference to an object that has already been written to the stream.","byte TC_RESET Tag to mark a stream reset.","byte TC_STRING Tag to mark a new string.","int baseWireHandle Handle for the first object that gets serialized."],"class":"ObjectOutputStream","constructors":[],"fields":[]}