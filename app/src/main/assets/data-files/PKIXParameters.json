{"methods":["void addCertPathChecker(PKIXCertPathChecker checker) Adds the specified PKIXCertPathChecker to the list of certification path checkers.","void addCertStore(CertStore store) Adds a certificate store to the list of certificate stores that are used to find certificates and CRLs.","Object clone() Clones this PKIXParameters instance.","List<PKIXCertPathChecker> getCertPathCheckers() Returns the list of checkers for the certification path.","List<CertStore> getCertStores() Returns the list of certificate stores that are used to find certificates and CRLs.","Date getDate() Returns the time for which the validation of the certification path should be evaluated.","Set<String> getInitialPolicies() Returns the list of policies (as OID strings) that would be acceptable for the purpose of certification path processing.","boolean getPolicyQualifiersRejected() Returns whether certificates are rejected that include policy qualifiers in a certificate policy extension that is marked as critical.","String getSigProvider() Returns the name of the signature provider.","CertSelector getTargetCertConstraints() Returns the constraints that are required for the target certificate.","Set<TrustAnchor> getTrustAnchors() Returns a unmodifiable set of the trusted certificate authorities.","boolean isAnyPolicyInhibited() Returns whether the any policy OID will be inhibited if it's included in a certificate.","boolean isExplicitPolicyRequired() Returns whether an acceptable policy needs to be explicit identified in every certificate.","boolean isPolicyMappingInhibited() Returns whether policy mapping is inhibited.","boolean isRevocationEnabled() Returns whether the default revocation checking mechanism of the underlying service provider is used.","void setAnyPolicyInhibited(boolean anyPolicyInhibited) Sets whether the any policy OID should be inhibited if it's included in a certificate.","void setCertPathCheckers(List<PKIXCertPathChecker> certPathCheckers) Sets the list of checkers for the certification path.","void setCertStores(List<CertStore> certStores) Set the list of certificate stores that are used to find certificates and CRLs.","void setDate(Date date) Sets the time for which the validation of the certification path should be evaluated.","void setExplicitPolicyRequired(boolean explicitPolicyRequired) Sets whether an an acceptable policy needs to be explicit identified in every certificate.","void setInitialPolicies(Set<String> initialPolicies) Sets the list of policies (as OID strings) that would be acceptable for the purpose of certification path processing.","void setPolicyMappingInhibited(boolean policyMappingInhibited) Sets whether policy mapping is to be inhibited.","void setPolicyQualifiersRejected(boolean policyQualifiersRejected) Sets whether certificates should be rejected that include policy qualifiers in a certificate policy extension that is marked as critical.","void setRevocationEnabled(boolean revocationEnabled) Sets whether the default revocation checking mechanism of the underlying service provider should be used.","void setSigProvider(String sigProvider) Sets the name of the preferred signature provider.","void setTargetCertConstraints(CertSelector targetCertConstraints) Sets the constraints that are required for the target certificate.","void setTrustAnchors(Set<TrustAnchor> trustAnchors) Sets the set of trusted certificate authorities.","String toString() Returns a string representation of this PKIXParameters instance.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.security.cert.CertPathParameters abstract Object clone() Clones this CertPathParameters instance.","abstract Object clone() Clones this CertPathParameters instance."],"package":"java.security.cert","constants":[],"class":"PKIXParameters","constructors":[],"fields":[]}