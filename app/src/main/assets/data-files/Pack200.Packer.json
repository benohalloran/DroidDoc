{"methods":["abstract void addPropertyChangeListener(PropertyChangeListener listener) add a listener for PropertyChange events","abstract void pack(JarFile in, OutputStream out) Pack the specified JAR file to the specified output stream.","abstract void pack(JarInputStream in, OutputStream out) Pack the data from the specified jar input stream to the specified output stream.","abstract SortedMap<String, String> properties() Returns a sorted map of the properties of this packer.","abstract void removePropertyChangeListener(PropertyChangeListener listener) remove a listener"],"package":"java.util.jar","constants":["String CLASS_ATTRIBUTE_PFX the format of a class attribute name.","String CODE_ATTRIBUTE_PFX the format of a code attribute name.","String DEFLATE_HINT the deflation hint to set in the output archive.","String EFFORT the indicated amount of effort to use in compressing the archive.","String ERROR a String representation for error.","String FALSE a String representation of false.","String FIELD_ATTRIBUTE_PFX the format of a field attribute name.","String KEEP a String representation for keep.","String KEEP_FILE_ORDER decide if all elements shall transmit in their original order.","String LATEST a String representation for latest.","String METHOD_ATTRIBUTE_PFX the format of a method attribute name.","String MODIFICATION_TIME if it shall attempt to determine the latest modification time if this is set to LATEST.","String PASS a String representation of pass.","String PASS_FILE_PFX the file that will not be compressed.","String PROGRESS packer progress as a percentage.","String SEGMENT_LIMIT The number of bytes of each archive segment.","String STRIP a String representation of strip.","String TRUE a String representation of true.","String UNKNOWN_ATTRIBUTE the action to take if an unknown attribute is encountered."],"class":"Pack200.Packer","constructors":[],"fields":[]}