{"methods":["abstract String getParameterClassName(int paramIndex) Gets the fully-qualified name of the Java class which should be passed as a parameter to the method PreparedStatement.setObject.","abstract int getParameterCount() Gets the number of parameters in the PreparedStatement for which this ParameterMetaData contains information.","abstract int getParameterMode(int paramIndex) Gets the mode of the specified parameter.","abstract int getParameterType(int paramIndex) Gets the SQL type of a specified parameter.","abstract String getParameterTypeName(int paramIndex) Gets the database-specific type name of a specified parameter.","abstract int getPrecision(int paramIndex) Gets the number of decimal digits for a specified parameter.","abstract int getScale(int paramIndex) Gets the number of digits after the decimal point for a specified parameter.","abstract int isNullable(int paramIndex) Gets whether null values are allowed for the specified parameter.","abstract boolean isSigned(int paramIndex) Gets whether values for the specified parameter can be signed numbers.","[Expand] Inherited Methods","From interface java.sql.Wrapper abstract boolean isWrapperFor(Class<?> iface) If the caller is a wrapper of the class or implements the given interface, the methods return false and vice versa. abstract <T> T unwrap(Class<T> iface) Returns an object that implements the given interface.","abstract boolean isWrapperFor(Class<?> iface) If the caller is a wrapper of the class or implements the given interface, the methods return false and vice versa.","abstract <T> T unwrap(Class<T> iface) Returns an object that implements the given interface."],"package":"java.sql","constants":["int parameterModeIn Indicates that the parameter mode is IN.","int parameterModeInOut Indicates that the parameter mode is INOUT.","int parameterModeOut Indicates that the parameter mode is OUT.","int parameterModeUnknown Indicates that the parameter mode is not known.","int parameterNoNulls Indicates that a parameter is not permitted to be NULL.","int parameterNullable Indicates that a parameter is permitted to be NULL.","int parameterNullableUnknown Indicates that whether a parameter is allowed to be null or not is not known."],"class":"ParameterMetaData","constructors":[],"fields":[]}