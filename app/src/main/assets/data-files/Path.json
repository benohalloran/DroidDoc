{"methods":["void addArc(RectF oval, float startAngle, float sweepAngle) Add the specified arc to the path as a new contour.","void addArc(float left, float top, float right, float bottom, float startAngle, float sweepAngle) Add the specified arc to the path as a new contour.","void addCircle(float x, float y, float radius, Path.Direction dir) Add a closed circle contour to the path","void addOval(float left, float top, float right, float bottom, Path.Direction dir) Add a closed oval contour to the path","void addOval(RectF oval, Path.Direction dir) Add a closed oval contour to the path","void addPath(Path src, float dx, float dy) Add a copy of src to the path, offset by (dx,dy)","void addPath(Path src) Add a copy of src to the path","void addPath(Path src, Matrix matrix) Add a copy of src to the path, transformed by matrix","void addRect(float left, float top, float right, float bottom, Path.Direction dir) Add a closed rectangle contour to the path","void addRect(RectF rect, Path.Direction dir) Add a closed rectangle contour to the path","void addRoundRect(float left, float top, float right, float bottom, float rx, float ry, Path.Direction dir) Add a closed round-rectangle contour to the path","void addRoundRect(float left, float top, float right, float bottom, float[] radii, Path.Direction dir) Add a closed round-rectangle contour to the path.","void addRoundRect(RectF rect, float[] radii, Path.Direction dir) Add a closed round-rectangle contour to the path.","void addRoundRect(RectF rect, float rx, float ry, Path.Direction dir) Add a closed round-rectangle contour to the path","void arcTo(float left, float top, float right, float bottom, float startAngle, float sweepAngle, boolean forceMoveTo) Append the specified arc to the path as a new contour.","void arcTo(RectF oval, float startAngle, float sweepAngle) Append the specified arc to the path as a new contour.","void arcTo(RectF oval, float startAngle, float sweepAngle, boolean forceMoveTo) Append the specified arc to the path as a new contour.","void close() Close the current contour.","void computeBounds(RectF bounds, boolean exact) Compute the bounds of the control points of the path, and write the answer into bounds.","void cubicTo(float x1, float y1, float x2, float y2, float x3, float y3) Add a cubic bezier from the last point, approaching control points (x1,y1) and (x2,y2), and ending at (x3,y3).","Path.FillType getFillType() Return the path's fill type.","void incReserve(int extraPtCount) Hint to the path to prepare for adding more points.","boolean isConvex() Returns the path's convexity, as defined by the content of the path.","boolean isEmpty() Returns true if the path is empty (contains no lines or curves)","boolean isInverseFillType() Returns true if the filltype is one of the INVERSE variants","boolean isRect(RectF rect) Returns true if the path specifies a rectangle.","void lineTo(float x, float y) Add a line from the last point to the specified point (x,y).","void moveTo(float x, float y) Set the beginning of the next contour to the point (x,y).","void offset(float dx, float dy, Path dst) Offset the path by (dx,dy), returning true on success","void offset(float dx, float dy) Offset the path by (dx,dy), returning true on success","boolean op(Path path1, Path path2, Path.Op op) Set this path to the result of applying the Op to the two specified paths.","boolean op(Path path, Path.Op op) Set this path to the result of applying the Op to this path and the specified path.","void quadTo(float x1, float y1, float x2, float y2) Add a quadratic bezier from the last point, approaching control point (x1,y1), and ending at (x2,y2).","void rCubicTo(float x1, float y1, float x2, float y2, float x3, float y3) Same as cubicTo, but the coordinates are considered relative to the current point on this contour.","void rLineTo(float dx, float dy) Same as lineTo, but the coordinates are considered relative to the last point on this contour.","void rMoveTo(float dx, float dy) Set the beginning of the next contour relative to the last point on the previous contour.","void rQuadTo(float dx1, float dy1, float dx2, float dy2) Same as quadTo, but the coordinates are considered relative to the last point on this contour.","void reset() Clear any lines and curves from the path, making it empty.","void rewind() Rewinds the path: clears any lines and curves from the path but keeps the internal data structure for faster reuse.","void set(Path src) Replace the contents of this with the contents of src.","void setFillType(Path.FillType ft) Set the path's fill type.","void setLastPoint(float dx, float dy) Sets the last point of the path.","void toggleInverseFillType() Toggles the INVERSE state of the filltype","void transform(Matrix matrix, Path dst) Transform the points in this path by matrix, and write the answer into dst.","void transform(Matrix matrix) Transform the points in this path by matrix.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.graphics","constants":[],"class":"Path","constructors":[],"fields":[]}