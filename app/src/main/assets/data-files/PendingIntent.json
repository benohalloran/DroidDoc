{"methods":["void cancel() Cancel a currently active PendingIntent.","int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","boolean equals(Object otherObj) Comparison operator on two PendingIntent objects, such that true is returned then they both represent the same operation from the same package.","static PendingIntent getActivities(Context context, int requestCode, Intent[] intents, int flags) Like getActivity(Context, int, Intent, int), but allows an array of Intents to be supplied.","static PendingIntent getActivities(Context context, int requestCode, Intent[] intents, int flags, Bundle options) Like getActivity(Context, int, Intent, int), but allows an array of Intents to be supplied.","static PendingIntent getActivity(Context context, int requestCode, Intent intent, int flags) Retrieve a PendingIntent that will start a new activity, like calling Context.startActivity(Intent).","static PendingIntent getActivity(Context context, int requestCode, Intent intent, int flags, Bundle options) Retrieve a PendingIntent that will start a new activity, like calling Context.startActivity(Intent).","static PendingIntent getBroadcast(Context context, int requestCode, Intent intent, int flags) Retrieve a PendingIntent that will perform a broadcast, like calling Context.sendBroadcast().","String getCreatorPackage() Return the package name of the application that created this PendingIntent, that is the identity under which you will actually be sending the Intent.","int getCreatorUid() Return the uid of the application that created this PendingIntent, that is the identity under which you will actually be sending the Intent.","UserHandle getCreatorUserHandle() Return the user handle of the application that created this PendingIntent, that is the user under which you will actually be sending the Intent.","IntentSender getIntentSender() Retrieve a IntentSender object that wraps the existing sender of the PendingIntent","static PendingIntent getService(Context context, int requestCode, Intent intent, int flags) Retrieve a PendingIntent that will start a service, like calling Context.startService().","String getTargetPackage() This method was deprecated in API level 17. Renamed to getCreatorPackage().","int hashCode() Returns an integer hash code for this object.","static PendingIntent readPendingIntentOrNullFromParcel(Parcel in) Convenience function for reading either a Messenger or null pointer from a Parcel.","void send(int code) Perform the operation associated with this PendingIntent.","void send(Context context, int code, Intent intent, PendingIntent.OnFinished onFinished, Handler handler, String requiredPermission) Perform the operation associated with this PendingIntent, allowing the caller to specify information about the Intent to use and be notified when the send has completed.","void send() Perform the operation associated with this PendingIntent.","void send(Context context, int code, Intent intent) Perform the operation associated with this PendingIntent, allowing the caller to specify information about the Intent to use.","void send(int code, PendingIntent.OnFinished onFinished, Handler handler) Perform the operation associated with this PendingIntent, allowing the caller to be notified when the send has completed.","void send(Context context, int code, Intent intent, PendingIntent.OnFinished onFinished, Handler handler) Perform the operation associated with this PendingIntent, allowing the caller to specify information about the Intent to use and be notified when the send has completed.","String toString() Returns a string containing a concise, human-readable description of this object.","static void writePendingIntentOrNullToParcel(PendingIntent sender, Parcel out) Convenience function for writing either a PendingIntent or null pointer to a Parcel.","void writeToParcel(Parcel out, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.app","constants":["int FLAG_CANCEL_CURRENT Flag indicating that if the described PendingIntent already exists, the current one should be canceled before generating a new one.","int FLAG_NO_CREATE Flag indicating that if the described PendingIntent does not already exist, then simply return null instead of creating it.","int FLAG_ONE_SHOT Flag indicating that this PendingIntent can be used only once.","int FLAG_UPDATE_CURRENT Flag indicating that if the described PendingIntent already exists, then keep it but replace its extra data with what is in this new Intent.","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"PendingIntent","constructors":[],"fields":["public static final Creator<PendingIntent> CREATOR"]}