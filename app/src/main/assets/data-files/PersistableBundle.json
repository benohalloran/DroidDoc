{"methods":["Object clone() Clones the current PersistableBundle.","int describeContents() Report the nature of this Parcelable's contents","PersistableBundle getPersistableBundle(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.","void putPersistableBundle(String key, PersistableBundle value) Inserts a PersistableBundle value into the mapping of this Bundle, replacing any existing value for the given key.","synchronized String toString() Returns a string containing a concise, human-readable description of this object.","void writeToParcel(Parcel parcel, int flags) Writes the PersistableBundle contents to a Parcel, typically in order for it to be passed through an IBinder connection.","[Expand] Inherited Methods","From class android.os.BaseBundle void clear() Removes all elements from the mapping of this Bundle. boolean containsKey(String key) Returns true if the given key is contained in the mapping of this Bundle. Object get(String key) Returns the entry with the given key as an object. double getDouble(String key, double defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. double getDouble(String key) Returns the value associated with the given key, or 0.0 if no mapping of the desired type exists for the given key. double[] getDoubleArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. int getInt(String key) Returns the value associated with the given key, or 0 if no mapping of the desired type exists for the given key. int getInt(String key, int defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. int[] getIntArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. long getLong(String key, long defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. long getLong(String key) Returns the value associated with the given key, or 0L if no mapping of the desired type exists for the given key. long[] getLongArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. String getString(String key, String defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associated with the given key. String getString(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. String[] getStringArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. boolean isEmpty() Returns true if the mapping of this Bundle is empty, false otherwise. Set<String> keySet() Returns a Set containing the Strings used as keys in this Bundle. void putAll(PersistableBundle bundle) Inserts all mappings from the given PersistableBundle into this BaseBundle. void putDouble(String key, double value) Inserts a double value into the mapping of this Bundle, replacing any existing value for the given key. void putDoubleArray(String key, double[] value) Inserts a double array value into the mapping of this Bundle, replacing any existing value for the given key. void putInt(String key, int value) Inserts an int value into the mapping of this Bundle, replacing any existing value for the given key. void putIntArray(String key, int[] value) Inserts an int array value into the mapping of this Bundle, replacing any existing value for the given key. void putLong(String key, long value) Inserts a long value into the mapping of this Bundle, replacing any existing value for the given key. void putLongArray(String key, long[] value) Inserts a long array value into the mapping of this Bundle, replacing any existing value for the given key. void putString(String key, String value) Inserts a String value into the mapping of this Bundle, replacing any existing value for the given key. void putStringArray(String key, String[] value) Inserts a String array value into the mapping of this Bundle, replacing any existing value for the given key. void remove(String key) Removes any entry with the given key from the mapping of this Bundle. int size() Returns the number of mappings contained in this Bundle.","void clear() Removes all elements from the mapping of this Bundle.","boolean containsKey(String key) Returns true if the given key is contained in the mapping of this Bundle.","Object get(String key) Returns the entry with the given key as an object.","double getDouble(String key, double defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key.","double getDouble(String key) Returns the value associated with the given key, or 0.0 if no mapping of the desired type exists for the given key.","double[] getDoubleArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.","int getInt(String key) Returns the value associated with the given key, or 0 if no mapping of the desired type exists for the given key.","int getInt(String key, int defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key.","int[] getIntArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.","long getLong(String key, long defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key.","long getLong(String key) Returns the value associated with the given key, or 0L if no mapping of the desired type exists for the given key.","long[] getLongArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.","String getString(String key, String defaultValue) Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associated with the given key.","String getString(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.","String[] getStringArray(String key) Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key.","boolean isEmpty() Returns true if the mapping of this Bundle is empty, false otherwise.","Set<String> keySet() Returns a Set containing the Strings used as keys in this Bundle.","void putAll(PersistableBundle bundle) Inserts all mappings from the given PersistableBundle into this BaseBundle.","void putDouble(String key, double value) Inserts a double value into the mapping of this Bundle, replacing any existing value for the given key.","void putDoubleArray(String key, double[] value) Inserts a double array value into the mapping of this Bundle, replacing any existing value for the given key.","void putInt(String key, int value) Inserts an int value into the mapping of this Bundle, replacing any existing value for the given key.","void putIntArray(String key, int[] value) Inserts an int array value into the mapping of this Bundle, replacing any existing value for the given key.","void putLong(String key, long value) Inserts a long value into the mapping of this Bundle, replacing any existing value for the given key.","void putLongArray(String key, long[] value) Inserts a long array value into the mapping of this Bundle, replacing any existing value for the given key.","void putString(String key, String value) Inserts a String value into the mapping of this Bundle, replacing any existing value for the given key.","void putStringArray(String key, String[] value) Inserts a String array value into the mapping of this Bundle, replacing any existing value for the given key.","void remove(String key) Removes any entry with the given key from the mapping of this Bundle.","int size() Returns the number of mappings contained in this Bundle.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.os","constants":["[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"PersistableBundle","constructors":[],"fields":["public static final Creator<PersistableBundle> CREATOR","public static final PersistableBundle EMPTY"]}