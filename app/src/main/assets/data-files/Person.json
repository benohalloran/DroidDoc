{"methods":["abstract String getAboutMe() A short biography for this person.","abstract Person.AgeRange getAgeRange() The age range of the person.","abstract String getBirthday() The person's date of birth, represented as YYYY-MM-DD.","abstract String getBraggingRights() The \"bragging rights\" line of this person.","abstract int getCircledByCount() If a Google+ Page and for followers who are visible, the number of people who have added this page to a circle.","abstract Person.Cover getCover() The cover photo content.","abstract String getCurrentLocation() The current location for this person.","abstract String getDisplayName() The name of this person, which is suitable for display.","abstract int getGender() The person's gender.","abstract String getId() The ID of this person.","abstract Person.Image getImage() The representation of the person's profile photo.","abstract String getLanguage() The user's preferred language for rendering.","abstract Person.Name getName() An object representation of the individual components of a person's name.","abstract String getNickname() The nickname of this person.","abstract int getObjectType() Type of person within Google+.","abstract List<Person.Organizations> getOrganizations() A list of current or past organizations with which this person is associated.","abstract List<Person.PlacesLived> getPlacesLived() A list of places where this person has lived.","abstract int getPlusOneCount() If a Google+ Page, the number of people who have +1'd this page.","abstract int getRelationshipStatus() The person's relationship status.","abstract String getTagline() The brief description (tagline) of this person.","abstract String getUrl() The URL of this person's profile.","abstract List<Person.Urls> getUrls() A list of URLs for this person.","abstract boolean hasAboutMe() Indicates whether the \"aboutMe\" field is explicitly set to a value.","abstract boolean hasAgeRange() Indicates whether the \"ageRange\" field is explicitly set to a value.","abstract boolean hasBirthday() Indicates whether the \"birthday\" field is explicitly set to a value.","abstract boolean hasBraggingRights() Indicates whether the \"braggingRights\" field is explicitly set to a value.","abstract boolean hasCircledByCount() Indicates whether the \"circledByCount\" field is explicitly set to a value.","abstract boolean hasCover() Indicates whether the \"cover\" field is explicitly set to a value.","abstract boolean hasCurrentLocation() Indicates whether the \"currentLocation\" field is explicitly set to a value.","abstract boolean hasDisplayName() Indicates whether the \"displayName\" field is explicitly set to a value.","abstract boolean hasGender() Indicates whether the \"gender\" field is explicitly set to a value.","abstract boolean hasId() Indicates whether the \"id\" field is explicitly set to a value.","abstract boolean hasImage() Indicates whether the \"image\" field is explicitly set to a value.","abstract boolean hasIsPlusUser() Indicates whether the \"isPlusUser\" field is explicitly set to a value.","abstract boolean hasLanguage() Indicates whether the \"language\" field is explicitly set to a value.","abstract boolean hasName() Indicates whether the \"name\" field is explicitly set to a value.","abstract boolean hasNickname() Indicates whether the \"nickname\" field is explicitly set to a value.","abstract boolean hasObjectType() Indicates whether the \"objectType\" field is explicitly set to a value.","abstract boolean hasOrganizations() Indicates whether the \"organizations\" field is explicitly set to a value.","abstract boolean hasPlacesLived() Indicates whether the \"placesLived\" field is explicitly set to a value.","abstract boolean hasPlusOneCount() Indicates whether the \"plusOneCount\" field is explicitly set to a value.","abstract boolean hasRelationshipStatus() Indicates whether the \"relationshipStatus\" field is explicitly set to a value.","abstract boolean hasTagline() Indicates whether the \"tagline\" field is explicitly set to a value.","abstract boolean hasUrl() Indicates whether the \"url\" field is explicitly set to a value.","abstract boolean hasUrls() Indicates whether the \"urls\" field is explicitly set to a value.","abstract boolean hasVerified() Indicates whether the \"verified\" field is explicitly set to a value.","abstract boolean isPlusUser() Whether this user has signed up for Google+.","abstract boolean isVerified() Whether the person or Google+ Page has been verified.","[Expand] Inherited Methods","From interface com.google.android.gms.common.data.Freezable abstract T freeze() Freeze a volatile representation into an immutable representation. abstract boolean isDataValid() Check to see if this object is valid for use.","abstract T freeze() Freeze a volatile representation into an immutable representation.","abstract boolean isDataValid() Check to see if this object is valid for use."],"package":"com.google.android.gms.plus.model.people","constants":[],"class":"Person","constructors":[],"fields":[]}