{"methods":["static String calledPartyBCDFragmentToString(byte[] bytes, int offset, int length) Like calledPartyBCDToString, but field does not start with a TOA byte.","static String calledPartyBCDToString(byte[] bytes, int offset, int length) 3GPP TS 24.008 10.5.4.7 Called Party BCD Number See Also TS 51.011 10.5.1 \"dialing number/ssc string\" and TS 11.11 \"10.3.1 EF adn (Abbreviated dialing numbers)\"","static boolean compare(String a, String b) Compare phone numbers a and b, return true if they're identical enough for caller ID purposes.","static boolean compare(Context context, String a, String b) Compare phone numbers a and b, and return true if they're identical enough for caller ID purposes.","static String convertKeypadLettersToDigits(String input) Translates any alphabetic letters (i.e.","static String extractNetworkPortion(String phoneNumber) Extracts the network address portion and canonicalizes (filters out separators.) Network address portion is everything up to DTMF control digit separators (pause or wait), but without non-dialable characters.","static String extractPostDialPortion(String phoneNumber) Extracts the post-dial sequence of DTMF control digits, pauses, and waits.","static void formatJapaneseNumber(Editable text) This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead","static void formatNanpNumber(Editable text) This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead","static String formatNumber(String source) This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead","static String formatNumber(String phoneNumber, String defaultCountryIso) Format a phone number.","static String formatNumber(String phoneNumber, String phoneNumberE164, String defaultCountryIso) Format the phone number only if the given number hasn't been formatted.","static void formatNumber(Editable text, int defaultFormattingType) This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead","static String formatNumberToE164(String phoneNumber, String defaultCountryIso) Format the given phoneNumber to the E.164 representation.","static int getFormatTypeForLocale(Locale locale) This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead","static String getNumberFromIntent(Intent intent, Context context) Extracts the phone number from an Intent.","static String getStrippedReversed(String phoneNumber) Returns the network portion reversed.","final static boolean is12Key(char c) True if c is ISO-LATIN characters 0-9, *, #","final static boolean isDialable(char c) True if c is ISO-LATIN characters 0-9, *, # , +, WILD","static boolean isEmergencyNumber(String number) Checks a given number against the list of emergency numbers provided by the RIL and SIM card.","static boolean isGlobalPhoneNumber(String phoneNumber)","static boolean isISODigit(char c) True if c is ISO-LATIN characters 0-9","static boolean isLocalEmergencyNumber(Context context, String number) Checks if a given number is an emergency number for the country that the user is in.","final static boolean isNonSeparator(char c) True if c is ISO-LATIN characters 0-9, *, # , +, WILD, WAIT, PAUSE","final static boolean isReallyDialable(char c) True if c is ISO-LATIN characters 0-9, *, # , + (no WILD)","final static boolean isStartsPostDial(char c) This any anything to the right of this char is part of the post-dial string (eg this is PAUSE or WAIT)","static boolean isVoiceMailNumber(String number) isVoiceMailNumber: checks a given number against the voicemail number provided by the RIL and SIM card.","static boolean isWellFormedSmsAddress(String address) Return true iff the network portion of address is, as far as we can tell on the device, suitable for use as an SMS destination address.","static byte[] networkPortionToCalledPartyBCD(String s) Note: calls extractNetworkPortion(), so do not use for SIM EF[ADN] style records Returns null if network portion is empty.","static byte[] networkPortionToCalledPartyBCDWithLength(String s) Same as networkPortionToCalledPartyBCD(String), but includes a one-byte length prefix.","static String normalizeNumber(String phoneNumber) Normalize a phone number by removing the characters other than digits.","static byte[] numberToCalledPartyBCD(String number) Convert a dialing number to BCD byte array","static String replaceUnicodeDigits(String number) Replaces all unicode(e.g.","static String stringFromStringAndTOA(String s, int TOA) Basically: makes sure there's a + in front of a TOA_International number Returns null if s == null","static String stripSeparators(String phoneNumber) Strips separators from a phone number string.","static String toCallerIDMinMatch(String phoneNumber) Returns the rightmost MIN_MATCH (5) characters in the network portion in *reversed* order This can be used to do a database lookup against the column that stores getStrippedReversed() Returns null if phoneNumber == null","static int toaFromString(String s) Returns the TOA for the given dial string Basically, returns TOA_International if there's a + prefix","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.telephony","constants":["int FORMAT_JAPAN Japanese formatting","int FORMAT_NANP NANP formatting","int FORMAT_UNKNOWN The current locale is unknown, look for a country code or don't format","char PAUSE","int TOA_International","int TOA_Unknown","char WAIT","char WILD"],"class":"PhoneNumberUtils","constructors":[],"fields":[]}