{"methods":["void bind(ListView listView) Binds a ListView to the preferences contained in this PreferenceScreen via getRootAdapter().","Dialog getDialog() Used to get a handle to the dialog.","ListAdapter getRootAdapter() Returns an adapter that can be attached to a PreferenceActivity or PreferenceFragment to show the preferences contained in this PreferenceScreen.","void onDismiss(DialogInterface dialog) This method will be invoked when the dialog is dismissed.","void onItemClick(AdapterView parent, View view, int position, long id)","boolean isOnSameScreenAsChildren() Whether this preference group should be shown on the same screen as its contained preferences.","void onClick() Processes a click on the preference.","ListAdapter onCreateRootAdapter() Creates the root adapter.","void onRestoreInstanceState(Parcelable state) Hook allowing a Preference to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState().","Parcelable onSaveInstanceState() Hook allowing a Preference to generate a representation of its internal state that can later be used to create a new instance with that same state.","[Expand] Inherited Methods","From class android.preference.PreferenceGroup void addItemFromInflater(Preference preference) Called by the inflater to add an item to this group. abstract void addItemFromInflater(T child) boolean addPreference(Preference preference) Adds a Preference at the correct position based on the preference's order. void dispatchRestoreInstanceState(Bundle container) Called by restoreHierarchyState(Bundle) to retrieve the saved state for this Preference and its children. void dispatchSaveInstanceState(Bundle container) Called by saveHierarchyState(Bundle) to store the instance for this Preference and its children. Preference findPreference(CharSequence key) Finds a Preference based on its key. Preference getPreference(int index) Returns the Preference at a particular index. int getPreferenceCount() Returns the number of children Preferences. boolean isOnSameScreenAsChildren() Whether this preference group should be shown on the same screen as its contained preferences. boolean isOrderingAsAdded() Whether this group is ordering preferences in the order they are added. void notifyDependencyChange(boolean disableDependents) Notifies any listening dependents of a change that affects the dependency. void onAttachedToActivity() Called when the Preference hierarchy has been attached to the PreferenceActivity. boolean onPrepareAddPreference(Preference preference) Prepares a Preference to be added to the group. void onPrepareForRemoval() Called when this Preference is being removed from the hierarchy. void removeAll() Removes all Preferences from this group. boolean removePreference(Preference preference) Removes a Preference from this group. void setOrderingAsAdded(boolean orderingAsAdded) Whether to order the Preference children of this group as they are added.","void addItemFromInflater(Preference preference) Called by the inflater to add an item to this group.","abstract void addItemFromInflater(T child)","boolean addPreference(Preference preference) Adds a Preference at the correct position based on the preference's order.","void dispatchRestoreInstanceState(Bundle container) Called by restoreHierarchyState(Bundle) to retrieve the saved state for this Preference and its children.","void dispatchSaveInstanceState(Bundle container) Called by saveHierarchyState(Bundle) to store the instance for this Preference and its children.","Preference findPreference(CharSequence key) Finds a Preference based on its key.","Preference getPreference(int index) Returns the Preference at a particular index.","int getPreferenceCount() Returns the number of children Preferences.","boolean isOnSameScreenAsChildren() Whether this preference group should be shown on the same screen as its contained preferences.","boolean isOrderingAsAdded() Whether this group is ordering preferences in the order they are added.","void notifyDependencyChange(boolean disableDependents) Notifies any listening dependents of a change that affects the dependency.","void onAttachedToActivity() Called when the Preference hierarchy has been attached to the PreferenceActivity.","boolean onPrepareAddPreference(Preference preference) Prepares a Preference to be added to the group.","void onPrepareForRemoval() Called when this Preference is being removed from the hierarchy.","void removeAll() Removes all Preferences from this group.","boolean removePreference(Preference preference) Removes a Preference from this group.","void setOrderingAsAdded(boolean orderingAsAdded) Whether to order the Preference children of this group as they are added.","From class android.preference.Preference boolean callChangeListener(Object newValue) Call this method after the user changes the preference, but before the internal state is set. int compareTo(Preference another) Compares Preference objects based on order (if set), otherwise alphabetically on the titles. Preference findPreferenceInHierarchy(String key) Finds a Preference in this hierarchy (the whole thing, even above/below your PreferenceScreen screen break) with the given key. Context getContext() Returns the Context of this Preference. String getDependency() Returns the key of the dependency on this Preference. SharedPreferences.Editor getEditor() Returns an SharedPreferences.Editor where this Preference can save its value(s). Bundle getExtras() Return the extras Bundle object associated with this preference, creating a new Bundle if there currently isn't one. String getFragment() Return the fragment class name associated with this Preference. Drawable getIcon() Returns the icon of this Preference. Intent getIntent() Return the Intent associated with this Preference. String getKey() Gets the key for this Preference, which is also the key used for storing values into SharedPreferences. int getLayoutResource() Gets the layout resource that will be shown as the View for this Preference. Preference.OnPreferenceChangeListener getOnPreferenceChangeListener() Returns the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated). Preference.OnPreferenceClickListener getOnPreferenceClickListener() Returns the callback to be invoked when this Preference is clicked. int getOrder() Gets the order of this Preference with respect to other Preference objects on the same level. boolean getPersistedBoolean(boolean defaultReturnValue) Attempts to get a persisted boolean from the SharedPreferences. float getPersistedFloat(float defaultReturnValue) Attempts to get a persisted float from the SharedPreferences. int getPersistedInt(int defaultReturnValue) Attempts to get a persisted int from the SharedPreferences. long getPersistedLong(long defaultReturnValue) Attempts to get a persisted long from the SharedPreferences. String getPersistedString(String defaultReturnValue) Attempts to get a persisted String from the SharedPreferences. PreferenceManager getPreferenceManager() Gets the PreferenceManager that manages this Preference object's tree. SharedPreferences getSharedPreferences() Returns the SharedPreferences where this Preference can read its value(s). boolean getShouldDisableView() Checks whether this Preference should disable its view when it's action is disabled. CharSequence getSummary() Returns the summary of this Preference. CharSequence getTitle() Returns the title of this Preference. int getTitleRes() Returns the title resource ID of this Preference. View getView(View convertView, ViewGroup parent) Gets the View that will be shown in the PreferenceActivity. int getWidgetLayoutResource() Gets the layout resource for the controllable widget portion of this Preference. boolean hasKey() Checks whether this Preference has a valid key. boolean isEnabled() Checks whether this Preference should be enabled in the list. boolean isPersistent() Checks whether this Preference is persistent. boolean isSelectable() Checks whether this Preference should be selectable in the list. void notifyChanged() Should be called when the data of this Preference has changed. void notifyDependencyChange(boolean disableDependents) Notifies any listening dependents of a change that affects the dependency. void notifyHierarchyChanged() Should be called when a Preference has been added/removed from this group, or the ordering should be re-evaluated. void onAttachedToActivity() Called when the Preference hierarchy has been attached to the PreferenceActivity. void onAttachedToHierarchy(PreferenceManager preferenceManager) Called when this Preference has been attached to a Preference hierarchy. void onBindView(View view) Binds the created View to the data for this Preference. void onClick() Processes a click on the preference. View onCreateView(ViewGroup parent) Creates the View to be shown for this Preference in the PreferenceActivity. void onDependencyChanged(Preference dependency, boolean disableDependent) Called when the dependency changes. Object onGetDefaultValue(TypedArray a, int index) Called when a Preference is being inflated and the default value attribute needs to be read. void onParentChanged(Preference parent, boolean disableChild) Called when the implicit parent dependency changes. void onPrepareForRemoval() Called when this Preference is being removed from the hierarchy. void onRestoreInstanceState(Parcelable state) Hook allowing a Preference to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). Parcelable onSaveInstanceState() Hook allowing a Preference to generate a representation of its internal state that can later be used to create a new instance with that same state. void onSetInitialValue(boolean restorePersistedValue, Object defaultValue) Implement this to set the initial value of the Preference. Bundle peekExtras() Return the extras Bundle object associated with this preference, returning null if there is not currently one. boolean persistBoolean(boolean value) Attempts to persist a boolean to the SharedPreferences. boolean persistFloat(float value) Attempts to persist a float to the SharedPreferences. boolean persistInt(int value) Attempts to persist an int to the SharedPreferences. boolean persistLong(long value) Attempts to persist a long to the SharedPreferences. boolean persistString(String value) Attempts to persist a String to the SharedPreferences. void restoreHierarchyState(Bundle container) Restore this Preference hierarchy's previously saved state from the given container. void saveHierarchyState(Bundle container) Store this Preference hierarchy's frozen state into the given container. void setDefaultValue(Object defaultValue) Sets the default value for this Preference, which will be set either if persistence is off or persistence is on and the preference is not found in the persistent storage. void setDependency(String dependencyKey) Sets the key of a Preference that this Preference will depend on. void setEnabled(boolean enabled) Sets whether this Preference is enabled. void setFragment(String fragment) Sets the class name of a fragment to be shown when this Preference is clicked. void setIcon(Drawable icon) Sets the icon for this Preference with a Drawable. void setIcon(int iconResId) Sets the icon for this Preference with a resource ID. void setIntent(Intent intent) Sets an Intent to be used for startActivity(Intent) when this Preference is clicked. void setKey(String key) Sets the key for this Preference, which is used as a key to the SharedPreferences. void setLayoutResource(int layoutResId) Sets the layout resource that is inflated as the View to be shown for this Preference. void setOnPreferenceChangeListener(Preference.OnPreferenceChangeListener onPreferenceChangeListener) Sets the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated). void setOnPreferenceClickListener(Preference.OnPreferenceClickListener onPreferenceClickListener) Sets the callback to be invoked when this Preference is clicked. void setOrder(int order) Sets the order of this Preference with respect to other Preference objects on the same level. void setPersistent(boolean persistent) Sets whether this Preference is persistent. void setSelectable(boolean selectable) Sets whether this Preference is selectable. void setShouldDisableView(boolean shouldDisableView) Sets whether this Preference should disable its view when it gets disabled. void setSummary(int summaryResId) Sets the summary for this Preference with a resource ID. void setSummary(CharSequence summary) Sets the summary for this Preference with a CharSequence. void setTitle(int titleResId) Sets the title for this Preference with a resource ID. void setTitle(CharSequence title) Sets the title for this Preference with a CharSequence. void setWidgetLayoutResource(int widgetLayoutResId) Sets the layout for the controllable widget portion of this Preference. boolean shouldCommit() Returns whether the Preference should commit its saved value(s) in getEditor(). boolean shouldDisableDependents() Checks whether this preference's dependents should currently be disabled. boolean shouldPersist() Checks whether, at the given time this method is called, this Preference should store/restore its value(s) into the SharedPreferences. String toString() Returns a string containing a concise, human-readable description of this object.","boolean callChangeListener(Object newValue) Call this method after the user changes the preference, but before the internal state is set.","int compareTo(Preference another) Compares Preference objects based on order (if set), otherwise alphabetically on the titles.","Preference findPreferenceInHierarchy(String key) Finds a Preference in this hierarchy (the whole thing, even above/below your PreferenceScreen screen break) with the given key.","Context getContext() Returns the Context of this Preference.","String getDependency() Returns the key of the dependency on this Preference.","SharedPreferences.Editor getEditor() Returns an SharedPreferences.Editor where this Preference can save its value(s).","Bundle getExtras() Return the extras Bundle object associated with this preference, creating a new Bundle if there currently isn't one.","String getFragment() Return the fragment class name associated with this Preference.","Drawable getIcon() Returns the icon of this Preference.","Intent getIntent() Return the Intent associated with this Preference.","String getKey() Gets the key for this Preference, which is also the key used for storing values into SharedPreferences.","int getLayoutResource() Gets the layout resource that will be shown as the View for this Preference.","Preference.OnPreferenceChangeListener getOnPreferenceChangeListener() Returns the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated).","Preference.OnPreferenceClickListener getOnPreferenceClickListener() Returns the callback to be invoked when this Preference is clicked.","int getOrder() Gets the order of this Preference with respect to other Preference objects on the same level.","boolean getPersistedBoolean(boolean defaultReturnValue) Attempts to get a persisted boolean from the SharedPreferences.","float getPersistedFloat(float defaultReturnValue) Attempts to get a persisted float from the SharedPreferences.","int getPersistedInt(int defaultReturnValue) Attempts to get a persisted int from the SharedPreferences.","long getPersistedLong(long defaultReturnValue) Attempts to get a persisted long from the SharedPreferences.","String getPersistedString(String defaultReturnValue) Attempts to get a persisted String from the SharedPreferences.","PreferenceManager getPreferenceManager() Gets the PreferenceManager that manages this Preference object's tree.","SharedPreferences getSharedPreferences() Returns the SharedPreferences where this Preference can read its value(s).","boolean getShouldDisableView() Checks whether this Preference should disable its view when it's action is disabled.","CharSequence getSummary() Returns the summary of this Preference.","CharSequence getTitle() Returns the title of this Preference.","int getTitleRes() Returns the title resource ID of this Preference.","View getView(View convertView, ViewGroup parent) Gets the View that will be shown in the PreferenceActivity.","int getWidgetLayoutResource() Gets the layout resource for the controllable widget portion of this Preference.","boolean hasKey() Checks whether this Preference has a valid key.","boolean isEnabled() Checks whether this Preference should be enabled in the list.","boolean isPersistent() Checks whether this Preference is persistent.","boolean isSelectable() Checks whether this Preference should be selectable in the list.","void notifyChanged() Should be called when the data of this Preference has changed.","void notifyDependencyChange(boolean disableDependents) Notifies any listening dependents of a change that affects the dependency.","void notifyHierarchyChanged() Should be called when a Preference has been added/removed from this group, or the ordering should be re-evaluated.","void onAttachedToActivity() Called when the Preference hierarchy has been attached to the PreferenceActivity.","void onAttachedToHierarchy(PreferenceManager preferenceManager) Called when this Preference has been attached to a Preference hierarchy.","void onBindView(View view) Binds the created View to the data for this Preference.","void onClick() Processes a click on the preference.","View onCreateView(ViewGroup parent) Creates the View to be shown for this Preference in the PreferenceActivity.","void onDependencyChanged(Preference dependency, boolean disableDependent) Called when the dependency changes.","Object onGetDefaultValue(TypedArray a, int index) Called when a Preference is being inflated and the default value attribute needs to be read.","void onParentChanged(Preference parent, boolean disableChild) Called when the implicit parent dependency changes.","void onPrepareForRemoval() Called when this Preference is being removed from the hierarchy.","void onRestoreInstanceState(Parcelable state) Hook allowing a Preference to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState().","Parcelable onSaveInstanceState() Hook allowing a Preference to generate a representation of its internal state that can later be used to create a new instance with that same state.","void onSetInitialValue(boolean restorePersistedValue, Object defaultValue) Implement this to set the initial value of the Preference.","Bundle peekExtras() Return the extras Bundle object associated with this preference, returning null if there is not currently one.","boolean persistBoolean(boolean value) Attempts to persist a boolean to the SharedPreferences.","boolean persistFloat(float value) Attempts to persist a float to the SharedPreferences.","boolean persistInt(int value) Attempts to persist an int to the SharedPreferences.","boolean persistLong(long value) Attempts to persist a long to the SharedPreferences.","boolean persistString(String value) Attempts to persist a String to the SharedPreferences.","void restoreHierarchyState(Bundle container) Restore this Preference hierarchy's previously saved state from the given container.","void saveHierarchyState(Bundle container) Store this Preference hierarchy's frozen state into the given container.","void setDefaultValue(Object defaultValue) Sets the default value for this Preference, which will be set either if persistence is off or persistence is on and the preference is not found in the persistent storage.","void setDependency(String dependencyKey) Sets the key of a Preference that this Preference will depend on.","void setEnabled(boolean enabled) Sets whether this Preference is enabled.","void setFragment(String fragment) Sets the class name of a fragment to be shown when this Preference is clicked.","void setIcon(Drawable icon) Sets the icon for this Preference with a Drawable.","void setIcon(int iconResId) Sets the icon for this Preference with a resource ID.","void setIntent(Intent intent) Sets an Intent to be used for startActivity(Intent) when this Preference is clicked.","void setKey(String key) Sets the key for this Preference, which is used as a key to the SharedPreferences.","void setLayoutResource(int layoutResId) Sets the layout resource that is inflated as the View to be shown for this Preference.","void setOnPreferenceChangeListener(Preference.OnPreferenceChangeListener onPreferenceChangeListener) Sets the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated).","void setOnPreferenceClickListener(Preference.OnPreferenceClickListener onPreferenceClickListener) Sets the callback to be invoked when this Preference is clicked.","void setOrder(int order) Sets the order of this Preference with respect to other Preference objects on the same level.","void setPersistent(boolean persistent) Sets whether this Preference is persistent.","void setSelectable(boolean selectable) Sets whether this Preference is selectable.","void setShouldDisableView(boolean shouldDisableView) Sets whether this Preference should disable its view when it gets disabled.","void setSummary(int summaryResId) Sets the summary for this Preference with a resource ID.","void setSummary(CharSequence summary) Sets the summary for this Preference with a CharSequence.","void setTitle(int titleResId) Sets the title for this Preference with a resource ID.","void setTitle(CharSequence title) Sets the title for this Preference with a CharSequence.","void setWidgetLayoutResource(int widgetLayoutResId) Sets the layout for the controllable widget portion of this Preference.","boolean shouldCommit() Returns whether the Preference should commit its saved value(s) in getEditor().","boolean shouldDisableDependents() Checks whether this preference's dependents should currently be disabled.","boolean shouldPersist() Checks whether, at the given time this method is called, this Preference should store/restore its value(s) into the SharedPreferences.","String toString() Returns a string containing a concise, human-readable description of this object.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.content.DialogInterface.OnDismissListener abstract void onDismiss(DialogInterface dialog) This method will be invoked when the dialog is dismissed.","abstract void onDismiss(DialogInterface dialog) This method will be invoked when the dialog is dismissed.","From interface android.widget.AdapterView.OnItemClickListener abstract void onItemClick(AdapterView<?> parent, View view, int position, long id) Callback method to be invoked when an item in this AdapterView has been clicked.","abstract void onItemClick(AdapterView<?> parent, View view, int position, long id) Callback method to be invoked when an item in this AdapterView has been clicked.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order."],"package":"android.preference","constants":["[Expand] Inherited Constants","From class android.preference.Preference int DEFAULT_ORDER Specify for setOrder(int) if a specific order is not required.","int DEFAULT_ORDER Specify for setOrder(int) if a specific order is not required."],"class":"PreferenceScreen","constructors":[],"fields":[]}