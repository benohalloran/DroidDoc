{"methods":["abstract void addBatch() Add a set of parameters to the PreparedStatement's command batch.","abstract void clearParameters() Clear the current parameter values.","abstract boolean execute() Executes the SQL statement in this PreparedStatement.","abstract ResultSet executeQuery() Executes the SQL query in the PreparedStatement and returns the ResultSet generated by the query.","abstract int executeUpdate() Invokes the SQL command contained within the prepared statement.","abstract ResultSetMetaData getMetaData() Returns a ResultSetMetaData describing the ResultSet that would be produced by execution of the PreparedStatement.","abstract ParameterMetaData getParameterMetaData() Gets information about the parameters of the PreparedStatement.","abstract void setArray(int parameterIndex, Array theArray) Sets the value of a specified parameter to the supplied Array.","abstract void setAsciiStream(int parameterIndex, InputStream theInputStream, int length) Sets the value of a specified parameter to the content of a supplied InputStream, which has a specified number of bytes.","abstract void setAsciiStream(int parameterIndex, InputStream inputStream) Sets the value of the specified parameter to the bytes from inputStream.","abstract void setAsciiStream(int parameterIndex, InputStream inputStream, long length) Sets the value of the specified parameter to the next length bytes from inputStream.","abstract void setBigDecimal(int parameterIndex, BigDecimal theBigDecimal) Sets the value of a specified parameter to a supplied java.math.BigDecimal value.","abstract void setBinaryStream(int parameterIndex, InputStream inputStream) Sets the value of the specified parameter to the bytes from inputStream.","abstract void setBinaryStream(int parameterIndex, InputStream inputStream, long length) Sets the value of the specified parameter to the next length bytes from inputStream.","abstract void setBinaryStream(int parameterIndex, InputStream theInputStream, int length) Sets the value of a specified parameter to the content of a supplied binary InputStream, which has a specified number of bytes.","abstract void setBlob(int parameterIndex, InputStream inputStream, long length) Sets the value of the specified parameter to the next length bytes from inputStream.","abstract void setBlob(int parameterIndex, InputStream inputStream) Sets the value of the specified parameter to the bytes from inputStream.","abstract void setBlob(int parameterIndex, Blob theBlob) Sets the value of a specified parameter to the given Blob object.","abstract void setBoolean(int parameterIndex, boolean theBoolean) Sets the value of a specified parameter to a supplied boolean value.","abstract void setByte(int parameterIndex, byte theByte) Sets the value of a specified parameter to a supplied byte value.","abstract void setBytes(int parameterIndex, byte[] theBytes) Sets the value of a specified parameter to a supplied array of bytes.","abstract void setCharacterStream(int parameterIndex, Reader reader) Sets the value of the specified parameter to the characters from reader.","abstract void setCharacterStream(int parameterIndex, Reader reader, int length) Sets the value of a specified parameter to the character content of a Reader object, with the specified length of character data.","abstract void setCharacterStream(int parameterIndex, Reader reader, long length) Sets the value of the specified parameter to the next length characters from reader.","abstract void setClob(int parameterIndex, Reader reader) Sets the value of the specified parameter to the characters from reader.","abstract void setClob(int parameterIndex, Reader reader, long length) Sets the value of the specified parameter to the next length characters from reader.","abstract void setClob(int parameterIndex, Clob theClob) Sets the value of a specified parameter to the given Clob object.","abstract void setDate(int parameterIndex, Date theDate, Calendar cal) Sets the value of a specified parameter to a supplied java.sql.Date value, using a supplied Calendar to map the Date.","abstract void setDate(int parameterIndex, Date theDate) Sets the value of a specified parameter to a supplied java.sql.Date value.","abstract void setDouble(int parameterIndex, double theDouble) Sets the value of a specified parameter to a supplied double value.","abstract void setFloat(int parameterIndex, float theFloat) Sets the value of a specified parameter to to a supplied float value.","abstract void setInt(int parameterIndex, int theInt) Sets the value of a specified parameter to a supplied int value.","abstract void setLong(int parameterIndex, long theLong) Sets the value of a specified parameter to a supplied long value.","abstract void setNCharacterStream(int parameterIndex, Reader reader) Sets the value of the specified parameter to the characters from reader.","abstract void setNCharacterStream(int parameterIndex, Reader reader, long length) Sets the value of the specified parameter to the next length characters from reader.","abstract void setNClob(int parameterIndex, Reader reader) Sets the value of the specified parameter to the characters from reader.","abstract void setNClob(int parameterIndex, NClob value) Sets the value of the specified parameter to value.","abstract void setNClob(int parameterIndex, Reader reader, long length) Sets the value of the specified parameter to the next length characters from reader.","abstract void setNString(int parameterIndex, String theString) Sets the value of a specified parameter to a supplied string.","abstract void setNull(int parameterIndex, int sqlType) Sets the value of a specified parameter to SQL NULL.","abstract void setNull(int paramIndex, int sqlType, String typeName) Sets the value of a specified parameter to SQL NULL.","abstract void setObject(int parameterIndex, Object theObject) Sets the value of a specified parameter using a supplied object.","abstract void setObject(int parameterIndex, Object theObject, int targetSqlType, int scale) Sets the value of a specified parameter using a supplied object.","abstract void setObject(int parameterIndex, Object theObject, int targetSqlType) Sets the value of a specified parameter using a supplied object.","abstract void setRef(int parameterIndex, Ref theRef) Sets the value of a specified parameter to a supplied REF() value.","abstract void setRowId(int parameterIndex, RowId theRowId) Sets the value of a specified parameter to a supplied java.sql.RowId.","abstract void setSQLXML(int parameterIndex, SQLXML xmlObject) Sets the value of the specified parameter to the value of xmlObject.","abstract void setShort(int parameterIndex, short theShort) Sets the value of a specified parameter to a supplied short value.","abstract void setString(int parameterIndex, String theString) Sets the value of a specified parameter to a supplied string.","abstract void setTime(int parameterIndex, Time theTime) Sets the value of a specified parameter to a supplied java.sql.Time value.","abstract void setTime(int parameterIndex, Time theTime, Calendar cal) Sets the value of a specified parameter to a supplied java.sql.Time value, using a supplied Calendar.","abstract void setTimestamp(int parameterIndex, Timestamp theTimestamp, Calendar cal) Sets the value of a specified parameter to a supplied java.sql.Timestamp value, using the supplied Calendar.","abstract void setTimestamp(int parameterIndex, Timestamp theTimestamp) Sets the value of a specified parameter to a supplied java.sql.Timestamp value.","abstract void setURL(int parameterIndex, URL theURL) Sets the value of a specified parameter to a supplied java.net.URL.","abstract void setUnicodeStream(int parameterIndex, InputStream theInputStream, int length) This method was deprecated in API level 1. Use setCharacterStream(int, Reader, int)","[Expand] Inherited Methods","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.sql.Statement abstract void addBatch(String sql) Adds a specified SQL command to the list of commands for this Statement. abstract void cancel() Cancels this statement's execution if both the database and the JDBC driver support aborting an SQL statement in flight. abstract void clearBatch() Clears the current list of SQL commands for this statement. abstract void clearWarnings() Clears all SQLWarnings from this statement. abstract void close() Releases this statement's database and JDBC driver resources. abstract boolean execute(String sql) Executes a supplied SQL statement. abstract boolean execute(String sql, int autoGeneratedKeys) Executes a supplied SQL statement. abstract boolean execute(String sql, String[] columnNames) Executes the supplied SQL statement. abstract boolean execute(String sql, int[] columnIndexes) Executes the supplied SQL statement. abstract int[] executeBatch() Submits a batch of SQL commands to the database. abstract ResultSet executeQuery(String sql) Executes a supplied SQL statement. abstract int executeUpdate(String sql, int autoGeneratedKeys) Executes the supplied SQL statement. abstract int executeUpdate(String sql, String[] columnNames) Executes the supplied SQL statement. abstract int executeUpdate(String sql) Executes the supplied SQL statement. abstract int executeUpdate(String sql, int[] columnIndexes) Executes the supplied SQL statement. abstract Connection getConnection() Gets the Connection object which created this statement. abstract int getFetchDirection() Gets the default direction for fetching rows for ResultSets generated from this statement. abstract int getFetchSize() Gets the default number of rows for a fetch for the ResultSet objects returned from this statement. abstract ResultSet getGeneratedKeys() Returns auto generated keys created by executing this statement. abstract int getMaxFieldSize() Gets the maximum number of bytes which can be returned as values from character and binary type columns in a ResultSet derived from this statement. abstract int getMaxRows() Gets the maximum number of rows that a ResultSet can contain when produced from this statement. abstract boolean getMoreResults(int current) Moves to this statement's next result. abstract boolean getMoreResults() Moves to this statement's next result. abstract int getQueryTimeout() Gets the timeout value for the statement's execution time. abstract ResultSet getResultSet() Gets the current result. abstract int getResultSetConcurrency() Gets the concurrency setting for ResultSet objects generated by this statement. abstract int getResultSetHoldability() Gets the cursor hold setting for ResultSet objects generated by this statement. abstract int getResultSetType() Gets the ResultSet type setting for ResultSets derived from this statement. abstract int getUpdateCount() Gets an update count for the current result if it is not a ResultSet. abstract SQLWarning getWarnings() Retrieves the first SQLWarning reported by calls on this statement. abstract boolean isClosed() Returns true if this statement has been closed, false otherwise. abstract boolean isPoolable() Returns true if this statement is poolable, false otherwise. abstract void setCursorName(String name) Sets the SQL cursor name. abstract void setEscapeProcessing(boolean enable) Sets Escape Processing mode. abstract void setFetchDirection(int direction) Sets the fetch direction - a hint to the JDBC driver about the direction of processing of rows in ResultSets created by this statement. abstract void setFetchSize(int rows) Sets the fetch size. abstract void setMaxFieldSize(int max) Sets the maximum number of bytes for ResultSet columns that contain character or binary values. abstract void setMaxRows(int max) Sets the maximum number of rows that any ResultSet can contain. abstract void setPoolable(boolean poolable) Hints whether this statement should be pooled. abstract void setQueryTimeout(int seconds) Sets the timeout, in seconds, for queries - how long the driver will allow for completion of a statement execution.","abstract void addBatch(String sql) Adds a specified SQL command to the list of commands for this Statement.","abstract void cancel() Cancels this statement's execution if both the database and the JDBC driver support aborting an SQL statement in flight.","abstract void clearBatch() Clears the current list of SQL commands for this statement.","abstract void clearWarnings() Clears all SQLWarnings from this statement.","abstract void close() Releases this statement's database and JDBC driver resources.","abstract boolean execute(String sql) Executes a supplied SQL statement.","abstract boolean execute(String sql, int autoGeneratedKeys) Executes a supplied SQL statement.","abstract boolean execute(String sql, String[] columnNames) Executes the supplied SQL statement.","abstract boolean execute(String sql, int[] columnIndexes) Executes the supplied SQL statement.","abstract int[] executeBatch() Submits a batch of SQL commands to the database.","abstract ResultSet executeQuery(String sql) Executes a supplied SQL statement.","abstract int executeUpdate(String sql, int autoGeneratedKeys) Executes the supplied SQL statement.","abstract int executeUpdate(String sql, String[] columnNames) Executes the supplied SQL statement.","abstract int executeUpdate(String sql) Executes the supplied SQL statement.","abstract int executeUpdate(String sql, int[] columnIndexes) Executes the supplied SQL statement.","abstract Connection getConnection() Gets the Connection object which created this statement.","abstract int getFetchDirection() Gets the default direction for fetching rows for ResultSets generated from this statement.","abstract int getFetchSize() Gets the default number of rows for a fetch for the ResultSet objects returned from this statement.","abstract ResultSet getGeneratedKeys() Returns auto generated keys created by executing this statement.","abstract int getMaxFieldSize() Gets the maximum number of bytes which can be returned as values from character and binary type columns in a ResultSet derived from this statement.","abstract int getMaxRows() Gets the maximum number of rows that a ResultSet can contain when produced from this statement.","abstract boolean getMoreResults(int current) Moves to this statement's next result.","abstract boolean getMoreResults() Moves to this statement's next result.","abstract int getQueryTimeout() Gets the timeout value for the statement's execution time.","abstract ResultSet getResultSet() Gets the current result.","abstract int getResultSetConcurrency() Gets the concurrency setting for ResultSet objects generated by this statement.","abstract int getResultSetHoldability() Gets the cursor hold setting for ResultSet objects generated by this statement.","abstract int getResultSetType() Gets the ResultSet type setting for ResultSets derived from this statement.","abstract int getUpdateCount() Gets an update count for the current result if it is not a ResultSet.","abstract SQLWarning getWarnings() Retrieves the first SQLWarning reported by calls on this statement.","abstract boolean isClosed() Returns true if this statement has been closed, false otherwise.","abstract boolean isPoolable() Returns true if this statement is poolable, false otherwise.","abstract void setCursorName(String name) Sets the SQL cursor name.","abstract void setEscapeProcessing(boolean enable) Sets Escape Processing mode.","abstract void setFetchDirection(int direction) Sets the fetch direction - a hint to the JDBC driver about the direction of processing of rows in ResultSets created by this statement.","abstract void setFetchSize(int rows) Sets the fetch size.","abstract void setMaxFieldSize(int max) Sets the maximum number of bytes for ResultSet columns that contain character or binary values.","abstract void setMaxRows(int max) Sets the maximum number of rows that any ResultSet can contain.","abstract void setPoolable(boolean poolable) Hints whether this statement should be pooled.","abstract void setQueryTimeout(int seconds) Sets the timeout, in seconds, for queries - how long the driver will allow for completion of a statement execution.","From interface java.sql.Wrapper abstract boolean isWrapperFor(Class<?> iface) If the caller is a wrapper of the class or implements the given interface, the methods return false and vice versa. abstract <T> T unwrap(Class<T> iface) Returns an object that implements the given interface.","abstract boolean isWrapperFor(Class<?> iface) If the caller is a wrapper of the class or implements the given interface, the methods return false and vice versa.","abstract <T> T unwrap(Class<T> iface) Returns an object that implements the given interface."],"package":"java.sql","constants":["[Expand] Inherited Constants","From interface java.sql.Statement int CLOSE_ALL_RESULTS Passing this constant to getMoreResults() implies that all ResultSet objects previously kept open should be closed. int CLOSE_CURRENT_RESULT Passing this constant to getMoreResults() implies that the current ResultSet object should be closed. int EXECUTE_FAILED Indicates that an error was encountered during execution of a batch statement. int KEEP_CURRENT_RESULT Passing this constant to getMoreResults implies that the current ResultSet object should not be closed. int NO_GENERATED_KEYS Indicates that generated keys should not be accessible for retrieval. int RETURN_GENERATED_KEYS Indicates that generated keys should be accessible for retrieval. int SUCCESS_NO_INFO Indicates that a batch statement was executed with a successful result, but a count of the number of rows it affected is unavailable.","int CLOSE_ALL_RESULTS Passing this constant to getMoreResults() implies that all ResultSet objects previously kept open should be closed.","int CLOSE_CURRENT_RESULT Passing this constant to getMoreResults() implies that the current ResultSet object should be closed.","int EXECUTE_FAILED Indicates that an error was encountered during execution of a batch statement.","int KEEP_CURRENT_RESULT Passing this constant to getMoreResults implies that the current ResultSet object should not be closed.","int NO_GENERATED_KEYS Indicates that generated keys should not be accessible for retrieval.","int RETURN_GENERATED_KEYS Indicates that generated keys should be accessible for retrieval.","int SUCCESS_NO_INFO Indicates that a batch statement was executed with a successful result, but a count of the number of rows it affected is unavailable."],"class":"PreparedStatement","constructors":[],"fields":[]}