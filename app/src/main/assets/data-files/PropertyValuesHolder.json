{"methods":["PropertyValuesHolder clone() Creates and returns a copy of this Object.","String getPropertyName() Gets the name of the property that will be animated.","static PropertyValuesHolder ofFloat(String propertyName, float... values) Constructs and returns a PropertyValuesHolder with a given property name and set of float values.","static PropertyValuesHolder ofFloat(Property<?, Float> property, float... values) Constructs and returns a PropertyValuesHolder with a given property and set of float values.","static PropertyValuesHolder ofInt(Property<?, Integer> property, int... values) Constructs and returns a PropertyValuesHolder with a given property and set of int values.","static PropertyValuesHolder ofInt(String propertyName, int... values) Constructs and returns a PropertyValuesHolder with a given property name and set of int values.","static PropertyValuesHolder ofKeyframe(String propertyName, Keyframe... values) Constructs and returns a PropertyValuesHolder object with the specified property name and set of values.","static PropertyValuesHolder ofKeyframe(Property property, Keyframe... values) Constructs and returns a PropertyValuesHolder object with the specified property and set of values.","static PropertyValuesHolder ofMultiFloat(String propertyName, Path path) Constructs and returns a PropertyValuesHolder with a given property name to use as a multi-float setter.","static <V> PropertyValuesHolder ofMultiFloat(String propertyName, TypeConverter<V, float[]> converter, TypeEvaluator<V> evaluator, V... values) Constructs and returns a PropertyValuesHolder with a given property and set of Object values for use with ObjectAnimator multi-value setters.","static <T> PropertyValuesHolder ofMultiFloat(String propertyName, TypeConverter<T, float[]> converter, TypeEvaluator<T> evaluator, Keyframe... values) Constructs and returns a PropertyValuesHolder object with the specified property name or setter name for use in a multi-float setter function using ObjectAnimator.","static PropertyValuesHolder ofMultiFloat(String propertyName, float[][] values) Constructs and returns a PropertyValuesHolder with a given property name and set of float[] values.","static PropertyValuesHolder ofMultiInt(String propertyName, Path path) Constructs and returns a PropertyValuesHolder with a given property name to use as a multi-int setter.","static <T> PropertyValuesHolder ofMultiInt(String propertyName, TypeConverter<T, int[]> converter, TypeEvaluator<T> evaluator, Keyframe... values) Constructs and returns a PropertyValuesHolder object with the specified property name or setter name for use in a multi-int setter function using ObjectAnimator.","static <V> PropertyValuesHolder ofMultiInt(String propertyName, TypeConverter<V, int[]> converter, TypeEvaluator<V> evaluator, V... values) Constructs and returns a PropertyValuesHolder with a given property and set of Object values for use with ObjectAnimator multi-value setters.","static PropertyValuesHolder ofMultiInt(String propertyName, int[][] values) Constructs and returns a PropertyValuesHolder with a given property name and set of int[] values.","static <V> PropertyValuesHolder ofObject(Property<?, V> property, TypeConverter<PointF, V> converter, Path path) Constructs and returns a PropertyValuesHolder with a given property and a Path along which the values should be animated.","static PropertyValuesHolder ofObject(String propertyName, TypeConverter<PointF, ?> converter, Path path) Constructs and returns a PropertyValuesHolder with a given property name and a Path along which the values should be animated.","static <V> PropertyValuesHolder ofObject(Property property, TypeEvaluator<V> evaluator, V... values) Constructs and returns a PropertyValuesHolder with a given property and set of Object values.","static PropertyValuesHolder ofObject(String propertyName, TypeEvaluator evaluator, Object... values) Constructs and returns a PropertyValuesHolder with a given property name and set of Object values.","static <T, V> PropertyValuesHolder ofObject(Property<?, V> property, TypeConverter<T, V> converter, TypeEvaluator<T> evaluator, T... values) Constructs and returns a PropertyValuesHolder with a given property and set of Object values.","void setConverter(TypeConverter converter) Sets the converter to convert from the values type to the setter's parameter type.","void setEvaluator(TypeEvaluator evaluator) The TypeEvaluator will be automatically determined based on the type of values supplied to PropertyValuesHolder.","void setFloatValues(float... values) Set the animated values for this object to this set of floats.","void setIntValues(int... values) Set the animated values for this object to this set of ints.","void setKeyframes(Keyframe... values) Set the animated values for this object to this set of Keyframes.","void setObjectValues(Object... values) Set the animated values for this object to this set of Objects.","void setProperty(Property property) Sets the property that will be animated.","void setPropertyName(String propertyName) Sets the name of the property that will be animated.","String toString() Returns a string containing a concise, human-readable description of this object.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.animation","constants":[],"class":"PropertyValuesHolder","constructors":[],"fields":[]}