{"methods":["int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","void dump(Printer pw, String prefix)","String toString() Returns a string containing a concise, human-readable description of this object.","void writeToParcel(Parcel out, int parcelableFlags)","[Expand] Inherited Methods","From class android.content.pm.ComponentInfo void dumpBack(Printer pw, String prefix) void dumpFront(Printer pw, String prefix) final int getBannerResource() Return the banner resource identifier to use for this component. final int getIconResource() Return the icon resource identifier to use for this component. final int getLogoResource() Return the logo resource identifier to use for this component. boolean isEnabled() Return whether this component and its enclosing application are enabled. CharSequence loadLabel(PackageManager pm) Retrieve the current textual label associated with this item. void writeToParcel(Parcel dest, int parcelableFlags)","void dumpBack(Printer pw, String prefix)","void dumpFront(Printer pw, String prefix)","final int getBannerResource() Return the banner resource identifier to use for this component.","final int getIconResource() Return the icon resource identifier to use for this component.","final int getLogoResource() Return the logo resource identifier to use for this component.","boolean isEnabled() Return whether this component and its enclosing application are enabled.","CharSequence loadLabel(PackageManager pm) Retrieve the current textual label associated with this item.","void writeToParcel(Parcel dest, int parcelableFlags)","From class android.content.pm.PackageItemInfo void dumpBack(Printer pw, String prefix) void dumpFront(Printer pw, String prefix) Drawable loadBanner(PackageManager pm) Retrieve the current graphical banner associated with this item. Drawable loadIcon(PackageManager pm) Retrieve the current graphical icon associated with this item. CharSequence loadLabel(PackageManager pm) Retrieve the current textual label associated with this item. Drawable loadLogo(PackageManager pm) Retrieve the current graphical logo associated with this item. XmlResourceParser loadXmlMetaData(PackageManager pm, String name) Load an XML resource attached to the meta-data of this item. void writeToParcel(Parcel dest, int parcelableFlags)","void dumpBack(Printer pw, String prefix)","void dumpFront(Printer pw, String prefix)","Drawable loadBanner(PackageManager pm) Retrieve the current graphical banner associated with this item.","Drawable loadIcon(PackageManager pm) Retrieve the current graphical icon associated with this item.","CharSequence loadLabel(PackageManager pm) Retrieve the current textual label associated with this item.","Drawable loadLogo(PackageManager pm) Retrieve the current graphical logo associated with this item.","XmlResourceParser loadXmlMetaData(PackageManager pm, String name) Load an XML resource attached to the meta-data of this item.","void writeToParcel(Parcel dest, int parcelableFlags)","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.content.pm","constants":["int FLAG_SINGLE_USER Bit in flags: If set, a single instance of the provider will run for all users on the device.","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"ProviderInfo","constructors":[],"fields":["public static final Creator<ProviderInfo> CREATOR","public String authority The name provider is published under content://","public int flags Options that have been set in the provider declaration in the manifest.","public boolean grantUriPermissions If true, additional permissions to specific Uris in this content provider can be granted, as per the grantUriPermissions attribute.","public int initOrder Used to control initialization order of single-process providers running in the same process.","public boolean isSyncable This field was deprecated in API level 5. This flag is now being ignored. The current way to make a provider syncable is to provide a SyncAdapter service for a given provider/account type.","public boolean multiprocess If true, this content provider allows multiple instances of itself to run in different process.","public PathPermission[] pathPermissions If non-null, these are path-specific permissions that are allowed for accessing the provider.","public String readPermission Optional permission required for read-only access this content provider.","public PatternMatcher[] uriPermissionPatterns If non-null, these are the patterns that are allowed for granting URI permissions.","public String writePermission Optional permission required for read/write access this content provider."]}