{"methods":["final int centerX()","final int centerY()","boolean contains(int x, int y) Returns true if (x,y) is inside the rectangle.","boolean contains(int left, int top, int right, int bottom) Returns true iff the 4 specified sides of a rectangle are inside or equal to this rectangle.","boolean contains(Rect r) Returns true iff the specified rectangle r is inside or equal to this rectangle.","int describeContents() Parcelable interface methods","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","final float exactCenterX()","final float exactCenterY()","String flattenToString() Return a string representation of the rectangle in a well-defined format.","int hashCode() Returns an integer hash code for this object.","final int height()","void inset(int dx, int dy) Inset the rectangle by (dx,dy).","boolean intersect(Rect r) If the specified rectangle intersects this rectangle, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle.","boolean intersect(int left, int top, int right, int bottom) If the rectangle specified by left,top,right,bottom intersects this rectangle, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle.","boolean intersects(int left, int top, int right, int bottom) Returns true if this rectangle intersects the specified rectangle.","static boolean intersects(Rect a, Rect b) Returns true iff the two specified rectangles intersect.","final boolean isEmpty() Returns true if the rectangle is empty (left >= right or top >= bottom)","void offset(int dx, int dy) Offset the rectangle by adding dx to its left and right coordinates, and adding dy to its top and bottom coordinates.","void offsetTo(int newLeft, int newTop) Offset the rectangle to a specific (left, top) position, keeping its width and height the same.","void readFromParcel(Parcel in) Set the rectangle's coordinates from the data stored in the specified parcel.","void set(int left, int top, int right, int bottom) Set the rectangle's coordinates to the specified values.","void set(Rect src) Copy the coordinates from src into this rectangle.","void setEmpty() Set the rectangle to (0,0,0,0)","boolean setIntersect(Rect a, Rect b) If rectangles a and b intersect, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle.","void sort() Swap top/bottom or left/right if there are flipped (i.e.","String toShortString() Return a string representation of the rectangle in a compact form.","String toString() Returns a string containing a concise, human-readable description of this object.","static Rect unflattenFromString(String str) Returns a Rect from a string of the form returned by flattenToString(), or null if the string is not of that form.","void union(int left, int top, int right, int bottom) Update this Rect to enclose itself and the specified rectangle.","void union(Rect r) Update this Rect to enclose itself and the specified rectangle.","void union(int x, int y) Update this Rect to enclose itself and the [x,y] coordinate.","final int width()","void writeToParcel(Parcel out, int flags) Write this rectangle to the specified parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.graphics","constants":["[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"Rect","constructors":[],"fields":["public static final Creator<Rect> CREATOR","public int bottom","public int left","public int right","public int top"]}