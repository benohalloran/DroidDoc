{"methods":["synchronized void apply() Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created with editMetadata() or since clear() was called.","[Expand] Inherited Methods","From class android.media.MediaMetadataEditor synchronized void addEditableKey(int key) Flags the given key as being editable. abstract void apply() Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created or since clear() was called. synchronized void clear() Clears all the pending metadata changes set since the MediaMetadataEditor instance was created or since this method was last called. synchronized Bitmap getBitmap(int key, Bitmap defaultValue) Returns the Bitmap value for the key. synchronized int[] getEditableKeys() Retrieves the keys flagged as editable. synchronized long getLong(int key, long defaultValue) Returns the long value for the key. synchronized Object getObject(int key, Object defaultValue) Returns an object representation of the value for the key synchronized String getString(int key, String defaultValue) Returns the String value for the key. synchronized MediaMetadataEditor putBitmap(int key, Bitmap bitmap) Adds image. synchronized MediaMetadataEditor putLong(int key, long value) Adds numerical information. synchronized MediaMetadataEditor putObject(int key, Object value) Adds information stored as an instance. synchronized MediaMetadataEditor putString(int key, String value) Adds textual information. synchronized void removeEditableKeys() Causes all metadata fields to be read-only.","synchronized void addEditableKey(int key) Flags the given key as being editable.","abstract void apply() Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created or since clear() was called.","synchronized void clear() Clears all the pending metadata changes set since the MediaMetadataEditor instance was created or since this method was last called.","synchronized Bitmap getBitmap(int key, Bitmap defaultValue) Returns the Bitmap value for the key.","synchronized int[] getEditableKeys() Retrieves the keys flagged as editable.","synchronized long getLong(int key, long defaultValue) Returns the long value for the key.","synchronized Object getObject(int key, Object defaultValue) Returns an object representation of the value for the key","synchronized String getString(int key, String defaultValue) Returns the String value for the key.","synchronized MediaMetadataEditor putBitmap(int key, Bitmap bitmap) Adds image.","synchronized MediaMetadataEditor putLong(int key, long value) Adds numerical information.","synchronized MediaMetadataEditor putObject(int key, Object value) Adds information stored as an instance.","synchronized MediaMetadataEditor putString(int key, String value) Adds textual information.","synchronized void removeEditableKeys() Causes all metadata fields to be read-only.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.media","constants":["[Expand] Inherited Constants","From class android.media.MediaMetadataEditor int BITMAP_KEY_ARTWORK The metadata key for the content artwork / album art. int RATING_KEY_BY_OTHERS The metadata key for the content's average rating, not the user's rating. int RATING_KEY_BY_USER The metadata key for the content's user rating.","int BITMAP_KEY_ARTWORK The metadata key for the content artwork / album art.","int RATING_KEY_BY_OTHERS The metadata key for the content's average rating, not the user's rating.","int RATING_KEY_BY_USER The metadata key for the content's user rating."],"class":"RemoteController.MetadataEditor","constructors":[],"fields":[]}