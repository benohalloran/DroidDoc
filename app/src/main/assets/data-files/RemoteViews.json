{"methods":["void addView(int viewId, RemoteViews nestedView) Equivalent to calling addView(View) after inflating the given RemoteViews.","View apply(Context context, ViewGroup parent) Inflates the view hierarchy represented by this object and applies all of the actions.","RemoteViews clone() Creates and returns a copy of this Object.","int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","int getLayoutId() Reutrns the layout id of the root layout associated with this RemoteViews.","String getPackage()","boolean onLoadClass(Class clazz) Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated.","void reapply(Context context, View v) Applies all of the actions to the provided view.","void removeAllViews(int viewId) Equivalent to calling removeAllViews().","void setBitmap(int viewId, String methodName, Bitmap value) Call a method taking one Bitmap on a view in the layout for this RemoteViews.","void setBoolean(int viewId, String methodName, boolean value) Call a method taking one boolean on a view in the layout for this RemoteViews.","void setBundle(int viewId, String methodName, Bundle value) Call a method taking one Bundle on a view in the layout for this RemoteViews.","void setByte(int viewId, String methodName, byte value) Call a method taking one byte on a view in the layout for this RemoteViews.","void setChar(int viewId, String methodName, char value) Call a method taking one char on a view in the layout for this RemoteViews.","void setCharSequence(int viewId, String methodName, CharSequence value) Call a method taking one CharSequence on a view in the layout for this RemoteViews.","void setChronometer(int viewId, long base, String format, boolean started) Equivalent to calling Chronometer.setBase, Chronometer.setFormat, and Chronometer.start() or Chronometer.stop().","void setContentDescription(int viewId, CharSequence contentDescription) Equivalent to calling View.setContentDescription(CharSequence).","void setDisplayedChild(int viewId, int childIndex) Equivalent to calling setDisplayedChild(int)","void setDouble(int viewId, String methodName, double value) Call a method taking one double on a view in the layout for this RemoteViews.","void setEmptyView(int viewId, int emptyViewId) Equivalent to calling AdapterView.setEmptyView","void setFloat(int viewId, String methodName, float value) Call a method taking one float on a view in the layout for this RemoteViews.","void setImageViewBitmap(int viewId, Bitmap bitmap) Equivalent to calling ImageView.setImageBitmap","void setImageViewResource(int viewId, int srcId) Equivalent to calling ImageView.setImageResource","void setImageViewUri(int viewId, Uri uri) Equivalent to calling ImageView.setImageURI","void setInt(int viewId, String methodName, int value) Call a method taking one int on a view in the layout for this RemoteViews.","void setIntent(int viewId, String methodName, Intent value) Call a method taking one Intent on a view in the layout for this RemoteViews.","void setLabelFor(int viewId, int labeledId) Equivalent to calling View.setLabelFor(int).","void setLong(int viewId, String methodName, long value) Call a method taking one long on a view in the layout for this RemoteViews.","void setOnClickFillInIntent(int viewId, Intent fillInIntent) When using collections (eg.","void setOnClickPendingIntent(int viewId, PendingIntent pendingIntent) Equivalent to calling setOnClickListener(android.view.View.OnClickListener) to launch the provided PendingIntent.","void setPendingIntentTemplate(int viewId, PendingIntent pendingIntentTemplate) When using collections (eg.","void setProgressBar(int viewId, int max, int progress, boolean indeterminate) Equivalent to calling ProgressBar.setMax, ProgressBar.setProgress, and ProgressBar.setIndeterminate If indeterminate is true, then the values for max and progress are ignored.","void setRelativeScrollPosition(int viewId, int offset) Equivalent to calling smoothScrollToPosition(int, int).","void setRemoteAdapter(int viewId, Intent intent) Equivalent to calling setRemoteViewsAdapter(Intent).","void setRemoteAdapter(int appWidgetId, int viewId, Intent intent) This method was deprecated in API level 14. This method has been deprecated. See setRemoteAdapter(int, Intent)","void setScrollPosition(int viewId, int position) Equivalent to calling smoothScrollToPosition(int, int).","void setShort(int viewId, String methodName, short value) Call a method taking one short on a view in the layout for this RemoteViews.","void setString(int viewId, String methodName, String value) Call a method taking one String on a view in the layout for this RemoteViews.","void setTextColor(int viewId, int color) Equivalent to calling setTextColor(int).","void setTextViewCompoundDrawables(int viewId, int left, int top, int right, int bottom) Equivalent to calling setCompoundDrawablesWithIntrinsicBounds(int, int, int, int).","void setTextViewCompoundDrawablesRelative(int viewId, int start, int top, int end, int bottom) Equivalent to calling setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int).","void setTextViewText(int viewId, CharSequence text) Equivalent to calling TextView.setText","void setTextViewTextSize(int viewId, int units, float size) Equivalent to calling setTextSize(int, float)","void setUri(int viewId, String methodName, Uri value) Call a method taking one Uri on a view in the layout for this RemoteViews.","void setViewPadding(int viewId, int left, int top, int right, int bottom) Equivalent to calling setPadding(int, int, int, int).","void setViewVisibility(int viewId, int visibility) Equivalent to calling View.setVisibility","void showNext(int viewId) Equivalent to calling showNext()","void showPrevious(int viewId) Equivalent to calling showPrevious()","void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","From interface android.view.LayoutInflater.Filter abstract boolean onLoadClass(Class clazz) Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated.","abstract boolean onLoadClass(Class clazz) Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated."],"package":"android.widget","constants":["[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"RemoteViews","constructors":[],"fields":["public static final Creator<RemoteViews> CREATOR Parcelable.Creator that instantiates RemoteViews objects"]}