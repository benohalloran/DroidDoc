{"methods":["abstract PendingResult<Requests.UpdateRequestsResult> acceptRequest(GoogleApiClient apiClient, String requestId) Accepts the specified request.","abstract PendingResult<Requests.UpdateRequestsResult> acceptRequests(GoogleApiClient apiClient, List<String> requestIds) Accepts the specified requests as a batch operation.","abstract PendingResult<Requests.UpdateRequestsResult> dismissRequest(GoogleApiClient apiClient, String requestId) Dismisses the specified request.","abstract PendingResult<Requests.UpdateRequestsResult> dismissRequests(GoogleApiClient apiClient, List<String> requestIds) Dismisses the specified requests as a batch operation.","abstract ArrayList<GameRequest> getGameRequestsFromBundle(Bundle extras) This method takes a Bundle object and extracts the GameRequest list provided.","abstract ArrayList<GameRequest> getGameRequestsFromInboxResponse(Intent response) This method takes an Intent object and extracts the GameRequest list provided as an extra.","abstract Intent getInboxIntent(GoogleApiClient apiClient) Returns an intent that will let the user see and manage any outstanding requests.","abstract int getMaxLifetimeDays(GoogleApiClient apiClient) Gets the maximum lifetime of a request in days.","abstract int getMaxPayloadSize(GoogleApiClient apiClient) Gets the maximum data size of a request payload in bytes.","abstract Intent getSendIntent(GoogleApiClient apiClient, int type, byte[] payload, int requestLifetimeDays, Bitmap icon, String description) Returns an intent that will let the user send a request to another player.","abstract PendingResult<Requests.LoadRequestsResult> loadRequests(GoogleApiClient apiClient, int requestDirection, int types, int sortOrder) Loads requests for the current game.","abstract void registerRequestListener(GoogleApiClient apiClient, OnRequestReceivedListener listener) Register a listener to intercept incoming requests for the currently signed-in user.","abstract void unregisterRequestListener(GoogleApiClient apiClient) Unregisters this client's request listener, if any."],"package":"com.google.android.gms.games.request","constants":["String EXTRA_REQUESTS Used to return a list of GameRequest objects.","int REQUEST_DEFAULT_LIFETIME_DAYS Value used to signal the server to use the default request lifetime.","int REQUEST_DIRECTION_INBOUND Load only inbound requests (where the loading player is the recipient).","int REQUEST_DIRECTION_OUTBOUND Load only outbound requests (where the loading player is the sender).","int REQUEST_UPDATE_OUTCOME_FAIL Constant indicating that the request update failed.","int REQUEST_UPDATE_OUTCOME_RETRY Constant indicating that the request update failed but should be retried.","int REQUEST_UPDATE_OUTCOME_SUCCESS Constant indicating that the request update was a success.","int REQUEST_UPDATE_TYPE_ACCEPT Constant indicating that the request should be accepted.","int REQUEST_UPDATE_TYPE_DISMISS Constant indicating that the request should be dismissed.","int SORT_ORDER_EXPIRING_SOON_FIRST Sort requests with the requests expiring soonest first.","int SORT_ORDER_SOCIAL_AGGREGATION Sort requests such that requests from players in the user's circles are returned first."],"class":"Requests","constructors":[],"fields":[]}