{"methods":["int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","void dump(Printer pw, String prefix)","final int getIconResource() Return the icon resource identifier to use for this match.","Drawable loadIcon(PackageManager pm) Retrieve the current graphical icon associated with this resolution.","CharSequence loadLabel(PackageManager pm) Retrieve the current textual label associated with this resolution.","String toString() Returns a string containing a concise, human-readable description of this object.","void writeToParcel(Parcel dest, int parcelableFlags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel."],"package":"android.content.pm","constants":["[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"ResolveInfo","constructors":[],"fields":["public static final Creator<ResolveInfo> CREATOR","public ActivityInfo activityInfo The activity or broadcast receiver that corresponds to this resolution match, if this resolution is for an activity or broadcast receiver.","public IntentFilter filter The IntentFilter that was matched for this ResolveInfo.","public int icon A drawable resource identifier (in the package's resources) of this match's icon.","public boolean isDefault This filter has specified the Intent.CATEGORY_DEFAULT, meaning it would like to be considered a default action that the user can perform on this data.","public int labelRes A string resource identifier (in the package's resources) of this match's label.","public int match The system's evaluation of how well the activity matches the IntentFilter.","public CharSequence nonLocalizedLabel The actual string retrieve from labelRes or null if none was provided.","public int preferredOrder Order of result according to the user's preference.","public int priority The declared priority of this match.","public ProviderInfo providerInfo The provider that corresponds to this resolution match, if this resolution is for a provider.","public String resolvePackageName Optional -- if non-null, the labelRes and icon resources will be loaded from this package, rather than the one containing the resolved component.","public ServiceInfo serviceInfo The service that corresponds to this resolution match, if this resolution is for a service.","public int specificIndex Only set when returned by queryIntentActivityOptions(ComponentName, Intent[], Intent, int), this tells you which of the given specific intents this result came from."]}