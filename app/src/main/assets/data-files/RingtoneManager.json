{"methods":["static Uri getActualDefaultRingtoneUri(Context context, int type) Gets the current default sound's Uri.","Cursor getCursor() Returns a Cursor of all the ringtones available.","static int getDefaultType(Uri defaultRingtoneUri) Returns the type of a default Uri.","static Uri getDefaultUri(int type) Returns the Uri for the default ringtone of a particular type.","boolean getIncludeDrm() This method was deprecated in API level 19. DRM ringtones are no longer supported","Ringtone getRingtone(int position) Gets a Ringtone for the ringtone at the given position in the Cursor.","static Ringtone getRingtone(Context context, Uri ringtoneUri) Returns a Ringtone for a given sound URI.","int getRingtonePosition(Uri ringtoneUri) Gets the position of a Uri within this RingtoneManager.","Uri getRingtoneUri(int position) Gets a Uri for the ringtone at the given position in the Cursor.","boolean getStopPreviousRingtone()","static Uri getValidRingtoneUri(Context context) Returns a valid ringtone URI.","int inferStreamType() Infers the playback stream type based on what type of ringtones this manager is returning.","static boolean isDefault(Uri ringtoneUri) Returns whether the given Uri is one of the default ringtones.","static void setActualDefaultRingtoneUri(Context context, int type, Uri ringtoneUri) Sets the Uri of the default sound for a given sound type.","void setIncludeDrm(boolean includeDrm) This method was deprecated in API level 19. DRM ringtones are no longer supported","void setStopPreviousRingtone(boolean stopPreviousRingtone) Whether retrieving another Ringtone will stop playing the previously retrieved Ringtone.","void setType(int type) Sets which type(s) of ringtones will be listed by this.","void stopPreviousRingtone() Stops playing the last Ringtone retrieved from this.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.media","constants":["String ACTION_RINGTONE_PICKER Activity Action: Shows a ringtone picker.","String EXTRA_RINGTONE_DEFAULT_URI Given to the ringtone picker as a Uri.","String EXTRA_RINGTONE_EXISTING_URI Given to the ringtone picker as a Uri.","String EXTRA_RINGTONE_INCLUDE_DRM This constant was deprecated in API level 19. DRM ringtones are no longer supported","String EXTRA_RINGTONE_PICKED_URI Returned from the ringtone picker as a Uri.","String EXTRA_RINGTONE_SHOW_DEFAULT Given to the ringtone picker as a boolean.","String EXTRA_RINGTONE_SHOW_SILENT Given to the ringtone picker as a boolean.","String EXTRA_RINGTONE_TITLE Given to the ringtone picker as a CharSequence.","String EXTRA_RINGTONE_TYPE Given to the ringtone picker as an int.","int ID_COLUMN_INDEX The column index (in the cursor returned by getCursor() for the row ID.","int TITLE_COLUMN_INDEX The column index (in the cursor returned by getCursor() for the title.","int TYPE_ALARM Type that refers to sounds that are used for the alarm.","int TYPE_ALL All types of sounds.","int TYPE_NOTIFICATION Type that refers to sounds that are used for notifications.","int TYPE_RINGTONE Type that refers to sounds that are used for the phone ringer.","int URI_COLUMN_INDEX The column index (in the cursor returned by getCursor() for the media provider's URI."],"class":"RingtoneManager","constructors":[],"fields":[]}