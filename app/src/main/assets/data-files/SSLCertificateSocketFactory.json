{"methods":["Socket createSocket(String host, int port) Creates a new socket which is connected to the remote host specified by the parameters host and port. This method verifies the peer's certificate hostname after connecting (unless created with getInsecure(int, SSLSessionCache)).","Socket createSocket(String host, int port, InetAddress localAddr, int localPort) Creates a new socket which is connected to the remote host specified by the parameters host and port. This method verifies the peer's certificate hostname after connecting (unless created with getInsecure(int, SSLSessionCache)).","Socket createSocket(InetAddress addr, int port, InetAddress localAddr, int localPort) Creates a new socket which is connected to the remote host specified by the InetAddress address. Warning: Hostname verification is not performed with this method.","Socket createSocket(InetAddress addr, int port) Creates a new socket which is connected to the remote host specified by the InetAddress host. Warning: Hostname verification is not performed with this method.","Socket createSocket(Socket k, String host, int port, boolean close) Creates an SSLSocket over the specified socket that is connected to the specified host at the specified port. This method verifies the peer's certificate hostname after connecting (unless created with getInsecure(int, SSLSessionCache)).","Socket createSocket() Creates a new socket which is not connected to any remote host.","static SocketFactory getDefault(int handshakeTimeoutMillis) Returns a new socket factory instance with an optional handshake timeout.","static SSLSocketFactory getDefault(int handshakeTimeoutMillis, SSLSessionCache cache) Returns a new socket factory instance with an optional handshake timeout and SSL session cache.","String[] getDefaultCipherSuites() Returns the names of the cipher suites that are enabled by default.","static SSLSocketFactory getHttpSocketFactory(int handshakeTimeoutMillis, SSLSessionCache cache) Returns a socket factory (also named SSLSocketFactory, but in a different namespace) for use with the Apache HTTP stack.","static SSLSocketFactory getInsecure(int handshakeTimeoutMillis, SSLSessionCache cache) Returns a new instance of a socket factory with all SSL security checks disabled, using an optional handshake timeout and SSL session cache.","byte[] getNpnSelectedProtocol(Socket socket) Returns the Next Protocol Negotiation (NPN) protocol selected by client and server, or null if no protocol was negotiated.","String[] getSupportedCipherSuites() Returns the names of the cipher suites that are supported and could be enabled for an SSL connection.","void setHostname(Socket socket, String hostName) Turns on Server Name Indication (SNI) on a given socket.","void setKeyManagers(KeyManager[] keyManagers) Sets the KeyManagers to be used for connections made by this factory.","void setNpnProtocols(byte[][] npnProtocols) Sets the Next Protocol Negotiation (NPN) protocols that this peer is interested in.","void setTrustManagers(TrustManager[] trustManager) Sets the TrustManagers to be used for connections made by this factory.","void setUseSessionTickets(Socket socket, boolean useSessionTickets) Enables session ticket support on the given socket.","[Expand] Inherited Methods","From class javax.net.ssl.SSLSocketFactory abstract Socket createSocket(Socket s, String host, int port, boolean autoClose) Creates an SSLSocket over the specified socket that is connected to the specified host at the specified port. synchronized static SocketFactory getDefault() Returns the default SSLSocketFactory instance. abstract String[] getDefaultCipherSuites() Returns the names of the cipher suites that are enabled by default. abstract String[] getSupportedCipherSuites() Returns the names of the cipher suites that are supported and could be enabled for an SSL connection.","abstract Socket createSocket(Socket s, String host, int port, boolean autoClose) Creates an SSLSocket over the specified socket that is connected to the specified host at the specified port.","synchronized static SocketFactory getDefault() Returns the default SSLSocketFactory instance.","abstract String[] getDefaultCipherSuites() Returns the names of the cipher suites that are enabled by default.","abstract String[] getSupportedCipherSuites() Returns the names of the cipher suites that are supported and could be enabled for an SSL connection.","From class javax.net.SocketFactory abstract Socket createSocket(String host, int port, InetAddress localHost, int localPort) Creates a new socket which is connected to the remote host specified by the parameters host and port. abstract Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) Creates a new socket which is connected to the remote host specified by the InetAddress address. abstract Socket createSocket(InetAddress host, int port) Creates a new socket which is connected to the remote host specified by the InetAddress host. abstract Socket createSocket(String host, int port) Creates a new socket which is connected to the remote host specified by the parameters host and port. Socket createSocket() Creates a new socket which is not connected to any remote host. synchronized static SocketFactory getDefault() Gets the default socket factory of the system which can be used to create new sockets without creating a subclass of this factory.","abstract Socket createSocket(String host, int port, InetAddress localHost, int localPort) Creates a new socket which is connected to the remote host specified by the parameters host and port.","abstract Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) Creates a new socket which is connected to the remote host specified by the InetAddress address.","abstract Socket createSocket(InetAddress host, int port) Creates a new socket which is connected to the remote host specified by the InetAddress host.","abstract Socket createSocket(String host, int port) Creates a new socket which is connected to the remote host specified by the parameters host and port.","Socket createSocket() Creates a new socket which is not connected to any remote host.","synchronized static SocketFactory getDefault() Gets the default socket factory of the system which can be used to create new sockets without creating a subclass of this factory.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.net","constants":[],"class":"SSLCertificateSocketFactory","constructors":[],"fields":[]}