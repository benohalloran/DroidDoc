{"methods":["byte[] generateSeed(int numBytes) Generates and returns the specified number of seed bytes, computed using the seed generation algorithm used by this SecureRandom.","String getAlgorithm() Returns the name of the algorithm of this SecureRandom.","static SecureRandom getInstance(String algorithm, String provider) Returns a new instance of SecureRandom that utilizes the specified algorithm from the specified provider.","static SecureRandom getInstance(String algorithm, Provider provider) Returns a new instance of SecureRandom that utilizes the specified algorithm from the specified provider.","static SecureRandom getInstance(String algorithm) Returns a new instance of SecureRandom that utilizes the specified algorithm.","final Provider getProvider() Returns the provider associated with this SecureRandom.","static byte[] getSeed(int numBytes) Generates and returns the specified number of seed bytes, computed using the seed generation algorithm used by this SecureRandom.","synchronized void nextBytes(byte[] bytes) Generates and stores random bytes in the given byte[] for each array element.","synchronized void setSeed(byte[] seed) Seeds this SecureRandom instance with the specified seed.","void setSeed(long seed) Seeds this SecureRandom instance with the specified eight-byte seed.","final int next(int numBits) Generates and returns an int containing the specified number of random bits (right justified, with leading zeros).","[Expand] Inherited Methods","From class java.util.Random synchronized int next(int bits) Returns a pseudo-random uniformly distributed int value of the number of bits specified by the argument bits as described by Donald E. boolean nextBoolean() Returns a pseudo-random uniformly distributed boolean. void nextBytes(byte[] buf) Fills buf with random bytes. double nextDouble() Returns a pseudo-random uniformly distributed double in the half-open range [0.0, 1.0). float nextFloat() Returns a pseudo-random uniformly distributed float in the half-open range [0.0, 1.0). synchronized double nextGaussian() Returns a pseudo-random (approximately) normally distributed double with mean 0.0 and standard deviation 1.0. int nextInt(int n) Returns a pseudo-random uniformly distributed int in the half-open range [0, n). int nextInt() Returns a pseudo-random uniformly distributed int. long nextLong() Returns a pseudo-random uniformly distributed long. synchronized void setSeed(long seed) Modifies the seed using a linear congruential formula presented in The Art of Computer Programming, Volume 2, Section 3.2.1.","synchronized int next(int bits) Returns a pseudo-random uniformly distributed int value of the number of bits specified by the argument bits as described by Donald E.","boolean nextBoolean() Returns a pseudo-random uniformly distributed boolean.","void nextBytes(byte[] buf) Fills buf with random bytes.","double nextDouble() Returns a pseudo-random uniformly distributed double in the half-open range [0.0, 1.0).","float nextFloat() Returns a pseudo-random uniformly distributed float in the half-open range [0.0, 1.0).","synchronized double nextGaussian() Returns a pseudo-random (approximately) normally distributed double with mean 0.0 and standard deviation 1.0.","int nextInt(int n) Returns a pseudo-random uniformly distributed int in the half-open range [0, n).","int nextInt() Returns a pseudo-random uniformly distributed int.","long nextLong() Returns a pseudo-random uniformly distributed long.","synchronized void setSeed(long seed) Modifies the seed using a linear congruential formula presented in The Art of Computer Programming, Volume 2, Section 3.2.1.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.security","constants":[],"class":"SecureRandom","constructors":[],"fields":[]}