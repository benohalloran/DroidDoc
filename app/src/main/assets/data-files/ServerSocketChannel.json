{"methods":["abstract SocketChannel accept() Accepts a connection to this server-socket channel.","static ServerSocketChannel open() Creates an open and unbound server-socket channel.","abstract ServerSocket socket() Return the server-socket assigned this channel, which does not declare any public methods that are not declared in ServerSocket.","final int validOps() Gets the valid operations of this channel.","[Expand] Inherited Methods","From class java.nio.channels.spi.AbstractSelectableChannel final Object blockingLock() Gets the object used for the synchronization of register and configureBlocking. final SelectableChannel configureBlocking(boolean blockingMode) Sets the blocking mode of this channel. synchronized final void implCloseChannel() Implements the channel closing behavior. abstract void implCloseSelectableChannel() Implements the closing function of the SelectableChannel. abstract void implConfigureBlocking(boolean blocking) Implements the configuration of blocking/non-blocking mode. final boolean isBlocking() Indicates whether this channel is in blocking mode. synchronized final boolean isRegistered() Indicates whether this channel is registered with one or more selectors. synchronized final SelectionKey keyFor(Selector selector) Gets this channel's selection key for the specified selector. final SelectorProvider provider() Returns the selector provider that has created this channel. final SelectionKey register(Selector selector, int interestSet, Object attachment) Registers this channel with the specified selector for the specified interest set.","final Object blockingLock() Gets the object used for the synchronization of register and configureBlocking.","final SelectableChannel configureBlocking(boolean blockingMode) Sets the blocking mode of this channel.","synchronized final void implCloseChannel() Implements the channel closing behavior.","abstract void implCloseSelectableChannel() Implements the closing function of the SelectableChannel.","abstract void implConfigureBlocking(boolean blocking) Implements the configuration of blocking/non-blocking mode.","final boolean isBlocking() Indicates whether this channel is in blocking mode.","synchronized final boolean isRegistered() Indicates whether this channel is registered with one or more selectors.","synchronized final SelectionKey keyFor(Selector selector) Gets this channel's selection key for the specified selector.","final SelectorProvider provider() Returns the selector provider that has created this channel.","final SelectionKey register(Selector selector, int interestSet, Object attachment) Registers this channel with the specified selector for the specified interest set.","From class java.nio.channels.SelectableChannel abstract Object blockingLock() Gets the blocking lock which synchronizes the configureBlocking and register methods. abstract SelectableChannel configureBlocking(boolean block) Sets the blocking mode of this channel. abstract boolean isBlocking() Indicates whether this channel is in blocking mode. abstract boolean isRegistered() Indicates whether this channel is registered with at least one selector. abstract SelectionKey keyFor(Selector sel) Gets this channel's selection key for the specified selector. abstract SelectorProvider provider() Gets the provider of this channel. final SelectionKey register(Selector selector, int operations) Registers this channel with the specified selector for the specified interest set. abstract SelectionKey register(Selector sel, int ops, Object att) Registers this channel with the specified selector for the specified interest set and an object to attach. abstract int validOps() Gets the set of valid operations of this channel.","abstract Object blockingLock() Gets the blocking lock which synchronizes the configureBlocking and register methods.","abstract SelectableChannel configureBlocking(boolean block) Sets the blocking mode of this channel.","abstract boolean isBlocking() Indicates whether this channel is in blocking mode.","abstract boolean isRegistered() Indicates whether this channel is registered with at least one selector.","abstract SelectionKey keyFor(Selector sel) Gets this channel's selection key for the specified selector.","abstract SelectorProvider provider() Gets the provider of this channel.","final SelectionKey register(Selector selector, int operations) Registers this channel with the specified selector for the specified interest set.","abstract SelectionKey register(Selector sel, int ops, Object att) Registers this channel with the specified selector for the specified interest set and an object to attach.","abstract int validOps() Gets the set of valid operations of this channel.","From class java.nio.channels.spi.AbstractInterruptibleChannel final void begin() Indicates the beginning of a code section that includes an I/O operation that is potentially blocking. final void close() Closes an open channel. final void end(boolean success) Indicates the end of a code section that has been started with begin() and that includes a potentially blocking I/O operation. abstract void implCloseChannel() Implements the channel closing behavior. synchronized final boolean isOpen() Returns true if this channel is open.","final void begin() Indicates the beginning of a code section that includes an I/O operation that is potentially blocking.","final void close() Closes an open channel.","final void end(boolean success) Indicates the end of a code section that has been started with begin() and that includes a potentially blocking I/O operation.","abstract void implCloseChannel() Implements the channel closing behavior.","synchronized final boolean isOpen() Returns true if this channel is open.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.io.Closeable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.nio.channels.Channel abstract void close() Closes an open channel. abstract boolean isOpen() Returns true if this channel is open.","abstract void close() Closes an open channel.","abstract boolean isOpen() Returns true if this channel is open.","From interface java.nio.channels.InterruptibleChannel abstract void close() Closes the channel.","abstract void close() Closes the channel."],"package":"java.nio.channels","constants":[],"class":"ServerSocketChannel","constructors":[],"fields":[]}