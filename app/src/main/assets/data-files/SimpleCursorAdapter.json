{"methods":["void bindView(View view, Context context, Cursor cursor) Binds all of the field names passed into the \"to\" parameter of the constructor with their corresponding cursor columns as specified in the \"from\" parameter.","void changeCursorAndColumns(Cursor c, String[] from, int[] to) Change the cursor and change the column-to-view mappings at the same time.","CharSequence convertToString(Cursor cursor) Returns a CharSequence representation of the specified Cursor as defined by the current CursorToStringConverter.","SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter() Returns the converter used to convert the filtering Cursor into a String.","int getStringConversionColumn() Return the index of the column used to get a String representation of the Cursor.","SimpleCursorAdapter.ViewBinder getViewBinder() Returns the SimpleCursorAdapter.ViewBinder used to bind data to views.","void setCursorToStringConverter(SimpleCursorAdapter.CursorToStringConverter cursorToStringConverter) Sets the converter used to convert the filtering Cursor into a String.","void setStringConversionColumn(int stringConversionColumn) Defines the index of the column in the Cursor used to get a String representation of that Cursor.","void setViewBinder(SimpleCursorAdapter.ViewBinder viewBinder) Sets the binder used to bind data to views.","void setViewImage(ImageView v, String value) Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView.","void setViewText(TextView v, String text) Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView.","Cursor swapCursor(Cursor c) Swap in a new Cursor, returning the old Cursor.","[Expand] Inherited Methods","From class android.widget.ResourceCursorAdapter View newDropDownView(Context context, Cursor cursor, ViewGroup parent) Makes a new drop down view to hold the data pointed to by cursor. View newView(Context context, Cursor cursor, ViewGroup parent) Inflates view(s) from the specified XML file. void setDropDownViewResource(int dropDownLayout) Sets the layout resource of the drop down views. void setViewResource(int layout) Sets the layout resource of the item views.","View newDropDownView(Context context, Cursor cursor, ViewGroup parent) Makes a new drop down view to hold the data pointed to by cursor.","View newView(Context context, Cursor cursor, ViewGroup parent) Inflates view(s) from the specified XML file.","void setDropDownViewResource(int dropDownLayout) Sets the layout resource of the drop down views.","void setViewResource(int layout) Sets the layout resource of the item views.","From class android.widget.CursorAdapter abstract void bindView(View view, Context context, Cursor cursor) Bind an existing view to the data pointed to by cursor void changeCursor(Cursor cursor) Change the underlying cursor to a new cursor. CharSequence convertToString(Cursor cursor) Converts the cursor into a CharSequence. int getCount() Cursor getCursor() Returns the cursor. View getDropDownView(int position, View convertView, ViewGroup parent) Get a View that displays in the drop down popup the data at the specified position in the data set. Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern. FilterQueryProvider getFilterQueryProvider() Returns the query filter provider used for filtering. Object getItem(int position) long getItemId(int position) View getView(int position, View convertView, ViewGroup parent) boolean hasStableIds() Indicates whether the item ids are stable across changes to the underlying data. void init(Context context, Cursor c, boolean autoRequery) This method was deprecated in API level 11. Don't use this, use the normal constructor. This will be removed in the future. View newDropDownView(Context context, Cursor cursor, ViewGroup parent) Makes a new drop down view to hold the data pointed to by cursor. abstract View newView(Context context, Cursor cursor, ViewGroup parent) Makes a new view to hold the data pointed to by cursor. void onContentChanged() Called when the ContentObserver on the cursor receives a change notification. Cursor runQueryOnBackgroundThread(CharSequence constraint) Runs a query with the specified constraint. void setFilterQueryProvider(FilterQueryProvider filterQueryProvider) Sets the query filter provider used to filter the current Cursor. Cursor swapCursor(Cursor newCursor) Swap in a new Cursor, returning the old Cursor.","abstract void bindView(View view, Context context, Cursor cursor) Bind an existing view to the data pointed to by cursor","void changeCursor(Cursor cursor) Change the underlying cursor to a new cursor.","CharSequence convertToString(Cursor cursor) Converts the cursor into a CharSequence.","int getCount()","Cursor getCursor() Returns the cursor.","View getDropDownView(int position, View convertView, ViewGroup parent) Get a View that displays in the drop down popup the data at the specified position in the data set.","Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern.","FilterQueryProvider getFilterQueryProvider() Returns the query filter provider used for filtering.","Object getItem(int position)","long getItemId(int position)","View getView(int position, View convertView, ViewGroup parent)","boolean hasStableIds() Indicates whether the item ids are stable across changes to the underlying data.","void init(Context context, Cursor c, boolean autoRequery) This method was deprecated in API level 11. Don't use this, use the normal constructor. This will be removed in the future.","View newDropDownView(Context context, Cursor cursor, ViewGroup parent) Makes a new drop down view to hold the data pointed to by cursor.","abstract View newView(Context context, Cursor cursor, ViewGroup parent) Makes a new view to hold the data pointed to by cursor.","void onContentChanged() Called when the ContentObserver on the cursor receives a change notification.","Cursor runQueryOnBackgroundThread(CharSequence constraint) Runs a query with the specified constraint.","void setFilterQueryProvider(FilterQueryProvider filterQueryProvider) Sets the query filter provider used to filter the current Cursor.","Cursor swapCursor(Cursor newCursor) Swap in a new Cursor, returning the old Cursor.","From class android.widget.BaseAdapter boolean areAllItemsEnabled() Indicates whether all the items in this adapter are enabled. View getDropDownView(int position, View convertView, ViewGroup parent) Get a View that displays in the drop down popup the data at the specified position in the data set. int getItemViewType(int position) Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item. int getViewTypeCount() Returns the number of types of Views that will be created by getView(int, View, ViewGroup). boolean hasStableIds() Indicates whether the item ids are stable across changes to the underlying data. boolean isEmpty() boolean isEnabled(int position) Returns true if the item at the specified position is not a separator. void notifyDataSetChanged() Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself. void notifyDataSetInvalidated() Notifies the attached observers that the underlying data is no longer valid or available. void registerDataSetObserver(DataSetObserver observer) Register an observer that is called when changes happen to the data used by this adapter. void unregisterDataSetObserver(DataSetObserver observer) Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).","boolean areAllItemsEnabled() Indicates whether all the items in this adapter are enabled.","View getDropDownView(int position, View convertView, ViewGroup parent) Get a View that displays in the drop down popup the data at the specified position in the data set.","int getItemViewType(int position) Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.","int getViewTypeCount() Returns the number of types of Views that will be created by getView(int, View, ViewGroup).","boolean hasStableIds() Indicates whether the item ids are stable across changes to the underlying data.","boolean isEmpty()","boolean isEnabled(int position) Returns true if the item at the specified position is not a separator.","void notifyDataSetChanged() Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.","void notifyDataSetInvalidated() Notifies the attached observers that the underlying data is no longer valid or available.","void registerDataSetObserver(DataSetObserver observer) Register an observer that is called when changes happen to the data used by this adapter.","void unregisterDataSetObserver(DataSetObserver observer) Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.widget.Adapter abstract int getCount() How many items are in the data set represented by this Adapter. abstract Object getItem(int position) Get the data item associated with the specified position in the data set. abstract long getItemId(int position) Get the row id associated with the specified position in the list. abstract int getItemViewType(int position) Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item. abstract View getView(int position, View convertView, ViewGroup parent) Get a View that displays the data at the specified position in the data set. abstract int getViewTypeCount() Returns the number of types of Views that will be created by getView(int, View, ViewGroup). abstract boolean hasStableIds() Indicates whether the item ids are stable across changes to the underlying data. abstract boolean isEmpty() abstract void registerDataSetObserver(DataSetObserver observer) Register an observer that is called when changes happen to the data used by this adapter. abstract void unregisterDataSetObserver(DataSetObserver observer) Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).","abstract int getCount() How many items are in the data set represented by this Adapter.","abstract Object getItem(int position) Get the data item associated with the specified position in the data set.","abstract long getItemId(int position) Get the row id associated with the specified position in the list.","abstract int getItemViewType(int position) Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.","abstract View getView(int position, View convertView, ViewGroup parent) Get a View that displays the data at the specified position in the data set.","abstract int getViewTypeCount() Returns the number of types of Views that will be created by getView(int, View, ViewGroup).","abstract boolean hasStableIds() Indicates whether the item ids are stable across changes to the underlying data.","abstract boolean isEmpty()","abstract void registerDataSetObserver(DataSetObserver observer) Register an observer that is called when changes happen to the data used by this adapter.","abstract void unregisterDataSetObserver(DataSetObserver observer) Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).","From interface android.widget.Filterable abstract Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern.","abstract Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern.","From interface android.widget.ListAdapter abstract boolean areAllItemsEnabled() Indicates whether all the items in this adapter are enabled. abstract boolean isEnabled(int position) Returns true if the item at the specified position is not a separator.","abstract boolean areAllItemsEnabled() Indicates whether all the items in this adapter are enabled.","abstract boolean isEnabled(int position) Returns true if the item at the specified position is not a separator.","From interface android.widget.SpinnerAdapter abstract View getDropDownView(int position, View convertView, ViewGroup parent) Get a View that displays in the drop down popup the data at the specified position in the data set.","abstract View getDropDownView(int position, View convertView, ViewGroup parent) Get a View that displays in the drop down popup the data at the specified position in the data set."],"package":"android.widget","constants":["[Expand] Inherited Constants","From class android.widget.CursorAdapter int FLAG_AUTO_REQUERY This constant was deprecated in API level 11. This option is discouraged, as it results in Cursor queries being performed on the application's UI thread and thus can cause poor responsiveness or even Application Not Responding errors. As an alternative, use LoaderManager with a CursorLoader. int FLAG_REGISTER_CONTENT_OBSERVER If set the adapter will register a content observer on the cursor and will call onContentChanged() when a notification comes in.","int FLAG_AUTO_REQUERY This constant was deprecated in API level 11. This option is discouraged, as it results in Cursor queries being performed on the application's UI thread and thus can cause poor responsiveness or even Application Not Responding errors. As an alternative, use LoaderManager with a CursorLoader.","int FLAG_REGISTER_CONTENT_OBSERVER If set the adapter will register a content observer on the cursor and will call onContentChanged() when a notification comes in.","From interface android.widget.Adapter int IGNORE_ITEM_VIEW_TYPE An item view type that causes the AdapterView to ignore the item view. int NO_SELECTION","int IGNORE_ITEM_VIEW_TYPE An item view type that causes the AdapterView to ignore the item view.","int NO_SELECTION"],"class":"SimpleCursorAdapter","constructors":[],"fields":[]}