{"methods":["SimpleCursorTreeAdapter.ViewBinder getViewBinder() Returns the SimpleCursorTreeAdapter.ViewBinder used to bind data to views.","void setViewBinder(SimpleCursorTreeAdapter.ViewBinder viewBinder) Sets the binder used to bind data to views.","void setViewText(TextView v, String text) Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView.","void bindChildView(View view, Context context, Cursor cursor, boolean isLastChild) Bind an existing view to the child data pointed to by cursor","void bindGroupView(View view, Context context, Cursor cursor, boolean isExpanded) Bind an existing view to the group data pointed to by cursor.","void setViewImage(ImageView v, String value) Called by bindView() to set the image for an ImageView.","[Expand] Inherited Methods","From class android.widget.ResourceCursorTreeAdapter View newChildView(Context context, Cursor cursor, boolean isLastChild, ViewGroup parent) Makes a new child view to hold the data pointed to by cursor. View newGroupView(Context context, Cursor cursor, boolean isExpanded, ViewGroup parent) Makes a new group view to hold the group data pointed to by cursor.","View newChildView(Context context, Cursor cursor, boolean isLastChild, ViewGroup parent) Makes a new child view to hold the data pointed to by cursor.","View newGroupView(Context context, Cursor cursor, boolean isExpanded, ViewGroup parent) Makes a new group view to hold the group data pointed to by cursor.","From class android.widget.CursorTreeAdapter abstract void bindChildView(View view, Context context, Cursor cursor, boolean isLastChild) Bind an existing view to the child data pointed to by cursor abstract void bindGroupView(View view, Context context, Cursor cursor, boolean isExpanded) Bind an existing view to the group data pointed to by cursor. void changeCursor(Cursor cursor) String convertToString(Cursor cursor) Cursor getChild(int groupPosition, int childPosition) long getChildId(int groupPosition, int childPosition) View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) int getChildrenCount(int groupPosition) abstract Cursor getChildrenCursor(Cursor groupCursor) Gets the Cursor for the children at the given group. Cursor getCursor() Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern. FilterQueryProvider getFilterQueryProvider() Cursor getGroup(int groupPosition) int getGroupCount() long getGroupId(int groupPosition) View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) boolean hasStableIds() boolean isChildSelectable(int groupPosition, int childPosition) abstract View newChildView(Context context, Cursor cursor, boolean isLastChild, ViewGroup parent) Makes a new child view to hold the data pointed to by cursor. abstract View newGroupView(Context context, Cursor cursor, boolean isExpanded, ViewGroup parent) Makes a new group view to hold the group data pointed to by cursor. void notifyDataSetChanged(boolean releaseCursors) Notifies a data set change, but with the option of not releasing any cached cursors. void notifyDataSetChanged() void notifyDataSetInvalidated() void onGroupCollapsed(int groupPosition) Called when a group is collapsed. Cursor runQueryOnBackgroundThread(CharSequence constraint) void setChildrenCursor(int groupPosition, Cursor childrenCursor) Sets the children Cursor for a particular group. void setFilterQueryProvider(FilterQueryProvider filterQueryProvider) void setGroupCursor(Cursor cursor) Sets the group Cursor.","abstract void bindChildView(View view, Context context, Cursor cursor, boolean isLastChild) Bind an existing view to the child data pointed to by cursor","abstract void bindGroupView(View view, Context context, Cursor cursor, boolean isExpanded) Bind an existing view to the group data pointed to by cursor.","void changeCursor(Cursor cursor)","String convertToString(Cursor cursor)","Cursor getChild(int groupPosition, int childPosition)","long getChildId(int groupPosition, int childPosition)","View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)","int getChildrenCount(int groupPosition)","abstract Cursor getChildrenCursor(Cursor groupCursor) Gets the Cursor for the children at the given group.","Cursor getCursor()","Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern.","FilterQueryProvider getFilterQueryProvider()","Cursor getGroup(int groupPosition)","int getGroupCount()","long getGroupId(int groupPosition)","View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)","boolean hasStableIds()","boolean isChildSelectable(int groupPosition, int childPosition)","abstract View newChildView(Context context, Cursor cursor, boolean isLastChild, ViewGroup parent) Makes a new child view to hold the data pointed to by cursor.","abstract View newGroupView(Context context, Cursor cursor, boolean isExpanded, ViewGroup parent) Makes a new group view to hold the group data pointed to by cursor.","void notifyDataSetChanged(boolean releaseCursors) Notifies a data set change, but with the option of not releasing any cached cursors.","void notifyDataSetChanged()","void notifyDataSetInvalidated()","void onGroupCollapsed(int groupPosition) Called when a group is collapsed.","Cursor runQueryOnBackgroundThread(CharSequence constraint)","void setChildrenCursor(int groupPosition, Cursor childrenCursor) Sets the children Cursor for a particular group.","void setFilterQueryProvider(FilterQueryProvider filterQueryProvider)","void setGroupCursor(Cursor cursor) Sets the group Cursor.","From class android.widget.BaseExpandableListAdapter boolean areAllItemsEnabled() int getChildType(int groupPosition, int childPosition) Get the type of child View that will be created by getChildView(int, int, boolean, View, ViewGroup) for the specified child item. int getChildTypeCount() Returns the number of types of child Views that will be created by getChildView(int, int, boolean, View, ViewGroup) . long getCombinedChildId(long groupId, long childId) Override this method if you foresee a clash in IDs based on this scheme: Base implementation returns a long: bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 1. long getCombinedGroupId(long groupId) Override this method if you foresee a clash in IDs based on this scheme: Base implementation returns a long: bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 0. int getGroupType(int groupPosition) Get the type of group View that will be created by getGroupView(int, boolean, View, ViewGroup) . int getGroupTypeCount() Returns the number of types of group Views that will be created by getGroupView(int, boolean, View, ViewGroup) . boolean isEmpty() void notifyDataSetChanged() void notifyDataSetInvalidated() void onGroupCollapsed(int groupPosition) Called when a group is collapsed. void onGroupExpanded(int groupPosition) Called when a group is expanded. void registerDataSetObserver(DataSetObserver observer) void unregisterDataSetObserver(DataSetObserver observer)","boolean areAllItemsEnabled()","int getChildType(int groupPosition, int childPosition) Get the type of child View that will be created by getChildView(int, int, boolean, View, ViewGroup) for the specified child item.","int getChildTypeCount() Returns the number of types of child Views that will be created by getChildView(int, int, boolean, View, ViewGroup) .","long getCombinedChildId(long groupId, long childId) Override this method if you foresee a clash in IDs based on this scheme: Base implementation returns a long: bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 1.","long getCombinedGroupId(long groupId) Override this method if you foresee a clash in IDs based on this scheme: Base implementation returns a long: bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 0.","int getGroupType(int groupPosition) Get the type of group View that will be created by getGroupView(int, boolean, View, ViewGroup) .","int getGroupTypeCount() Returns the number of types of group Views that will be created by getGroupView(int, boolean, View, ViewGroup) .","boolean isEmpty()","void notifyDataSetChanged()","void notifyDataSetInvalidated()","void onGroupCollapsed(int groupPosition) Called when a group is collapsed.","void onGroupExpanded(int groupPosition) Called when a group is expanded.","void registerDataSetObserver(DataSetObserver observer)","void unregisterDataSetObserver(DataSetObserver observer)","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.widget.ExpandableListAdapter abstract boolean areAllItemsEnabled() abstract Object getChild(int groupPosition, int childPosition) Gets the data associated with the given child within the given group. abstract long getChildId(int groupPosition, int childPosition) Gets the ID for the given child within the given group. abstract View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) Gets a View that displays the data for the given child within the given group. abstract int getChildrenCount(int groupPosition) Gets the number of children in a specified group. abstract long getCombinedChildId(long groupId, long childId) Gets an ID for a child that is unique across any item (either group or child) that is in this list. abstract long getCombinedGroupId(long groupId) Gets an ID for a group that is unique across any item (either group or child) that is in this list. abstract Object getGroup(int groupPosition) Gets the data associated with the given group. abstract int getGroupCount() Gets the number of groups. abstract long getGroupId(int groupPosition) Gets the ID for the group at the given position. abstract View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) Gets a View that displays the given group. abstract boolean hasStableIds() Indicates whether the child and group IDs are stable across changes to the underlying data. abstract boolean isChildSelectable(int groupPosition, int childPosition) Whether the child at the specified position is selectable. abstract boolean isEmpty() abstract void onGroupCollapsed(int groupPosition) Called when a group is collapsed. abstract void onGroupExpanded(int groupPosition) Called when a group is expanded. abstract void registerDataSetObserver(DataSetObserver observer) abstract void unregisterDataSetObserver(DataSetObserver observer)","abstract boolean areAllItemsEnabled()","abstract Object getChild(int groupPosition, int childPosition) Gets the data associated with the given child within the given group.","abstract long getChildId(int groupPosition, int childPosition) Gets the ID for the given child within the given group.","abstract View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) Gets a View that displays the data for the given child within the given group.","abstract int getChildrenCount(int groupPosition) Gets the number of children in a specified group.","abstract long getCombinedChildId(long groupId, long childId) Gets an ID for a child that is unique across any item (either group or child) that is in this list.","abstract long getCombinedGroupId(long groupId) Gets an ID for a group that is unique across any item (either group or child) that is in this list.","abstract Object getGroup(int groupPosition) Gets the data associated with the given group.","abstract int getGroupCount() Gets the number of groups.","abstract long getGroupId(int groupPosition) Gets the ID for the group at the given position.","abstract View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) Gets a View that displays the given group.","abstract boolean hasStableIds() Indicates whether the child and group IDs are stable across changes to the underlying data.","abstract boolean isChildSelectable(int groupPosition, int childPosition) Whether the child at the specified position is selectable.","abstract boolean isEmpty()","abstract void onGroupCollapsed(int groupPosition) Called when a group is collapsed.","abstract void onGroupExpanded(int groupPosition) Called when a group is expanded.","abstract void registerDataSetObserver(DataSetObserver observer)","abstract void unregisterDataSetObserver(DataSetObserver observer)","From interface android.widget.Filterable abstract Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern.","abstract Filter getFilter() Returns a filter that can be used to constrain data with a filtering pattern.","From interface android.widget.HeterogeneousExpandableList abstract int getChildType(int groupPosition, int childPosition) Get the type of child View that will be created by getChildView(int, int, boolean, View, ViewGroup) for the specified child item. abstract int getChildTypeCount() Returns the number of types of child Views that will be created by getChildView(int, int, boolean, View, ViewGroup) . abstract int getGroupType(int groupPosition) Get the type of group View that will be created by getGroupView(int, boolean, View, ViewGroup) . abstract int getGroupTypeCount() Returns the number of types of group Views that will be created by getGroupView(int, boolean, View, ViewGroup) .","abstract int getChildType(int groupPosition, int childPosition) Get the type of child View that will be created by getChildView(int, int, boolean, View, ViewGroup) for the specified child item.","abstract int getChildTypeCount() Returns the number of types of child Views that will be created by getChildView(int, int, boolean, View, ViewGroup) .","abstract int getGroupType(int groupPosition) Get the type of group View that will be created by getGroupView(int, boolean, View, ViewGroup) .","abstract int getGroupTypeCount() Returns the number of types of group Views that will be created by getGroupView(int, boolean, View, ViewGroup) ."],"package":"android.widget","constants":[],"class":"SimpleCursorTreeAdapter","constructors":[],"fields":[]}