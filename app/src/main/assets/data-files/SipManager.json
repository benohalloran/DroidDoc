{"methods":["void close(String localProfileUri) Closes the specified profile to not make/receive calls.","SipSession createSipSession(SipProfile localProfile, SipSession.Listener listener) Creates a SipSession with the specified profile.","static String getCallId(Intent incomingCallIntent) Gets the call ID from the specified incoming call broadcast intent.","static String getOfferSessionDescription(Intent incomingCallIntent) Gets the offer session description from the specified incoming call broadcast intent.","SipSession getSessionFor(Intent incomingCallIntent) Gets the SipSession that handles the incoming call.","static boolean isApiSupported(Context context) Returns true if the SIP API is supported by the system.","static boolean isIncomingCallIntent(Intent intent) Checks if the intent is an incoming call broadcast intent.","boolean isOpened(String localProfileUri) Checks if the specified profile is opened in the SIP service for making and/or receiving calls.","boolean isRegistered(String localProfileUri) Checks if the SIP service has successfully registered the profile to the SIP provider (specified in the profile) for receiving calls.","static boolean isSipWifiOnly(Context context) Returns true if SIP is only available on WIFI.","static boolean isVoipSupported(Context context) Returns true if the system supports SIP-based VOIP API.","SipAudioCall makeAudioCall(String localProfileUri, String peerProfileUri, SipAudioCall.Listener listener, int timeout) Creates a SipAudioCall to make an audio call.","SipAudioCall makeAudioCall(SipProfile localProfile, SipProfile peerProfile, SipAudioCall.Listener listener, int timeout) Creates a SipAudioCall to make a call.","static SipManager newInstance(Context context) Creates a manager instance.","void open(SipProfile localProfile, PendingIntent incomingCallPendingIntent, SipRegistrationListener listener) Opens the profile for making calls and/or receiving generic SIP calls.","void open(SipProfile localProfile) Opens the profile for making generic SIP calls.","void register(SipProfile localProfile, int expiryTime, SipRegistrationListener listener) Manually registers the profile to the corresponding SIP provider for receiving calls.","void setRegistrationListener(String localProfileUri, SipRegistrationListener listener) Sets the listener to listen to registration events.","SipAudioCall takeAudioCall(Intent incomingCallIntent, SipAudioCall.Listener listener) Creates a SipAudioCall to take an incoming call.","void unregister(SipProfile localProfile, SipRegistrationListener listener) Manually unregisters the profile from the corresponding SIP provider for stop receiving further calls.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.net.sip","constants":["String EXTRA_CALL_ID Key to retrieve the call ID from an incoming call intent.","String EXTRA_OFFER_SD Key to retrieve the offered session description from an incoming call intent.","int INCOMING_CALL_RESULT_CODE The result code to be sent back with the incoming call PendingIntent."],"class":"SipManager","constructors":[],"fields":[]}