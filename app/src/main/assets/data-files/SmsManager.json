{"methods":["ArrayList<String> divideMessage(String text) Divide a message text into several fragments, none bigger than the maximum SMS message size.","void downloadMultimediaMessage(Context context, String locationUrl, Uri contentUri, Bundle configOverrides, PendingIntent downloadedIntent) Download an MMS message from carrier by a given location URL","Bundle getCarrierConfigValues() Get carrier-dependent configuration values.","static SmsManager getDefault() Get the default instance of the SmsManager","void sendDataMessage(String destinationAddress, String scAddress, short destinationPort, byte[] data, PendingIntent sentIntent, PendingIntent deliveryIntent) Send a data based SMS to a specific application port.","void sendMultimediaMessage(Context context, Uri contentUri, String locationUrl, Bundle configOverrides, PendingIntent sentIntent) Send an MMS message","void sendMultipartTextMessage(String destinationAddress, String scAddress, ArrayList<String> parts, ArrayList<PendingIntent> sentIntents, ArrayList<PendingIntent> deliveryIntents) Send a multi-part text based SMS.","void sendTextMessage(String destinationAddress, String scAddress, String text, PendingIntent sentIntent, PendingIntent deliveryIntent) Send a text based SMS.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.telephony","constants":["String EXTRA_MMS_DATA","String MMS_CONFIG_ALIAS_ENABLED Whether alias is enabled (boolean type)","String MMS_CONFIG_ALIAS_MAX_CHARS Max alias character count (int type)","String MMS_CONFIG_ALIAS_MIN_CHARS Min alias character count (int type)","String MMS_CONFIG_ALLOW_ATTACH_AUDIO Whether audio is allowed to be attached for MMS messages (boolean type)","String MMS_CONFIG_APPEND_TRANSACTION_ID Whether to append transaction id to MMS WAP Push M-Notification.ind's content location URI when constructing the download URL of a new MMS (boolean type)","String MMS_CONFIG_EMAIL_GATEWAY_NUMBER Email gateway number (String type)","String MMS_CONFIG_GROUP_MMS_ENABLED Whether group MMS is enabled for the current carrier (boolean type)","String MMS_CONFIG_HTTP_PARAMS A list of HTTP headers to add to MMS HTTP request, separated by \"|\" (String type)","String MMS_CONFIG_HTTP_SOCKET_TIMEOUT MMS HTTP socket timeout in milliseconds (int type)","String MMS_CONFIG_MAX_IMAGE_HEIGHT Max MMS image height (int type)","String MMS_CONFIG_MAX_IMAGE_WIDTH Max MMS image width (int type)","String MMS_CONFIG_MAX_MESSAGE_SIZE Max MMS message size in bytes (int type)","String MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE Max message text size (int type)","String MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED Whether MMS delivery report is enabled (boolean type)","String MMS_CONFIG_MMS_ENABLED Whether MMS is enabled for the current carrier (boolean type)","String MMS_CONFIG_MMS_READ_REPORT_ENABLED Whether MMS read report is enabled (boolean type)","String MMS_CONFIG_MULTIPART_SMS_ENABLED Whether multipart SMS is enabled (boolean type)","String MMS_CONFIG_NAI_SUFFIX The suffix to append to the NAI header value for MMS HTTP request (String type)","String MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED If this is enabled, M-NotifyResp.ind should be sent to the WAP Push content location instead of the default MMSC (boolean type)","String MMS_CONFIG_RECIPIENT_LIMIT Limit of recipients of MMS messages (int type)","String MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES Whether multipart SMS should be sent as separate messages","String MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED Whether SMS delivery report is enabled (boolean type)","String MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD Some carriers require SMS to be converted into MMS when text length reaches this threshold (int type)","String MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD When the number of parts of a multipart SMS reaches this threshold, it should be converted into an MMS (int type)","String MMS_CONFIG_SUBJECT_MAX_LENGTH Max message subject length (int type)","String MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION Whether content-disposition field should be expected in an MMS PDU (boolean type)","String MMS_CONFIG_UA_PROF_TAG_NAME The name of the UA Prof URL HTTP header for MMS HTTP request (String type)","String MMS_CONFIG_UA_PROF_URL The UA Profile URL header value for MMS HTTP request (String type)","String MMS_CONFIG_USER_AGENT The User-Agent header value for MMS HTTP request (String type)","int MMS_ERROR_CONFIGURATION_ERROR","int MMS_ERROR_HTTP_FAILURE","int MMS_ERROR_INVALID_APN","int MMS_ERROR_IO_ERROR","int MMS_ERROR_RETRY","int MMS_ERROR_UNABLE_CONNECT_MMS","int MMS_ERROR_UNSPECIFIED","int RESULT_ERROR_GENERIC_FAILURE Generic failure cause","int RESULT_ERROR_NO_SERVICE Failed because service is currently unavailable","int RESULT_ERROR_NULL_PDU Failed because no pdu provided","int RESULT_ERROR_RADIO_OFF Failed because radio was explicitly turned off","int STATUS_ON_ICC_FREE Free space (TS 51.011 10.5.3 / 3GPP2 C.S0023 3.4.27).","int STATUS_ON_ICC_READ Received and read (TS 51.011 10.5.3 / 3GPP2 C.S0023 3.4.27).","int STATUS_ON_ICC_SENT Stored and sent (TS 51.011 10.5.3 / 3GPP2 C.S0023 3.4.27).","int STATUS_ON_ICC_UNREAD Received and unread (TS 51.011 10.5.3 / 3GPP2 C.S0023 3.4.27).","int STATUS_ON_ICC_UNSENT Stored and unsent (TS 51.011 10.5.3 / 3GPP2 C.S0023 3.4.27)."],"class":"SmsManager","constructors":[],"fields":[]}