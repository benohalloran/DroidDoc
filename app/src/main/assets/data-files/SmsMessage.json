{"methods":["static int[] calculateLength(CharSequence msgBody, boolean use7bitOnly) Calculates the number of SMS's required to encode the message body and the number of characters remaining until the next message.","static int[] calculateLength(String messageBody, boolean use7bitOnly) Calculates the number of SMS's required to encode the message body and the number of characters remaining until the next message, given the current encoding.","static SmsMessage createFromPdu(byte[] pdu) Create an SmsMessage from a raw PDU.","String getDisplayMessageBody() Returns the message body, or email message body if this message was from an email gateway.","String getDisplayOriginatingAddress() Returns the originating address, or email from address if this message was from an email gateway.","String getEmailBody()","String getEmailFrom()","int getIndexOnIcc() Returns the record index of the message on the ICC (1-based index).","int getIndexOnSim() This method was deprecated in API level 4. Use getIndexOnIcc instead.","String getMessageBody() Returns the message body as a String, if it exists and is text based.","SmsMessage.MessageClass getMessageClass() Returns the class of this message.","String getOriginatingAddress() Returns the originating address (sender) of this SMS message in String form or null if unavailable","byte[] getPdu() Returns the raw PDU for the message.","int getProtocolIdentifier() Get protocol identifier.","String getPseudoSubject() Unofficial convention of a subject line enclosed in parens empty string if not present","String getServiceCenterAddress() Returns the address of the SMS service center that relayed this message or null if there is none.","int getStatus() GSM: For an SMS-STATUS-REPORT message, this returns the status field from the status report.","int getStatusOnIcc() Returns the status of the message on the ICC (read, unread, sent, unsent).","int getStatusOnSim() This method was deprecated in API level 4. Use getStatusOnIcc instead.","static SmsMessage.SubmitPdu getSubmitPdu(String scAddress, String destinationAddress, short destinationPort, byte[] data, boolean statusReportRequested) Get an SMS-SUBMIT PDU for a data message to a destination address & port.","static SmsMessage.SubmitPdu getSubmitPdu(String scAddress, String destinationAddress, String message, boolean statusReportRequested) Get an SMS-SUBMIT PDU for a destination address and a message.","static int getTPLayerLengthForPDU(String pdu) Get the TP-Layer-Length for the given SMS-SUBMIT PDU Basically, the length in bytes (not hex chars) less the SMSC header FIXME: This method is only used by a CTS test case that isn't run on CDMA devices.","long getTimestampMillis() Returns the service centre timestamp in currentTimeMillis() format","byte[] getUserData() returns the user data section minus the user data header if one was present.","boolean isCphsMwiMessage() Returns true for CPHS MWI toggle message.","boolean isEmail() Returns true if message is an email.","boolean isMWIClearMessage() returns true if this message is a CPHS voicemail / message waiting indicator (MWI) clear message","boolean isMWISetMessage() returns true if this message is a CPHS voicemail / message waiting indicator (MWI) set message","boolean isMwiDontStore() returns true if this message is a \"Message Waiting Indication Group: Discard Message\" notification and should not be stored.","boolean isReplace() See TS 23.040 9.2.3.9 returns true if this is a \"replace short message\" SMS","boolean isReplyPathPresent() Returns true iff the TP-Reply-Path bit is set in this message.","boolean isStatusReportMessage() Return true iff the message is a SMS-STATUS-REPORT message.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.telephony","constants":["int ENCODING_16BIT","int ENCODING_7BIT","int ENCODING_8BIT","int ENCODING_UNKNOWN User data text encoding code unit size","int MAX_USER_DATA_BYTES The maximum number of payload bytes per message","int MAX_USER_DATA_BYTES_WITH_HEADER The maximum number of payload bytes per message if a user data header is present.","int MAX_USER_DATA_SEPTETS The maximum number of payload septets per message","int MAX_USER_DATA_SEPTETS_WITH_HEADER The maximum number of payload septets per message if a user data header is present."],"class":"SmsMessage","constructors":[],"fields":[]}