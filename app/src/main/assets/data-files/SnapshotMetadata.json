{"methods":["abstract float getCoverImageAspectRatio() Retrieves the aspect ratio of the cover image for this snapshot, if any.","abstract Uri getCoverImageUri() Retrieves an image URI that can be used to load the snapshot's cover image.","abstract String getDescription() Retrieves the description of this snapshot.","abstract void getDescription(CharArrayBuffer dataOut) Loads the snapshot description into the given CharArrayBuffer.","abstract Game getGame() Retrieves the game associated with this snapshot.","abstract long getLastModifiedTimestamp() Retrieves the last time this snapshot was modified, in millis since epoch.","abstract Player getOwner() Retrieves the player that owns this snapshot.","abstract long getPlayedTime() Retrieves the played time of this snapshot in milliseconds.","abstract String getUniqueName() Retrieves the unique identifier of this snapshot.","[Expand] Inherited Methods","From interface android.os.Parcelable abstract int describeContents() abstract void writeToParcel(Parcel arg0, int arg1)","abstract int describeContents()","abstract void writeToParcel(Parcel arg0, int arg1)","From interface com.google.android.gms.common.data.Freezable abstract T freeze() Freeze a volatile representation into an immutable representation. abstract boolean isDataValid() Check to see if this object is valid for use.","abstract T freeze() Freeze a volatile representation into an immutable representation.","abstract boolean isDataValid() Check to see if this object is valid for use."],"package":"com.google.android.gms.games.snapshot","constants":["long PLAYED_TIME_UNKNOWN Constant indicating that the played time of a snapshot is unknown.","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR int PARCELABLE_WRITE_RETURN_VALUE","int CONTENTS_FILE_DESCRIPTOR","int PARCELABLE_WRITE_RETURN_VALUE"],"class":"SnapshotMetadata","constructors":[],"fields":[]}