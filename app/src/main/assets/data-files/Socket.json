{"methods":["void bind(SocketAddress localAddr) Binds this socket to the given local host address and port specified by the SocketAddress localAddr.","synchronized void close() Closes the socket.","void connect(SocketAddress remoteAddr, int timeout) Connects this socket to the given remote host address and port specified by the SocketAddress remoteAddr with the specified timeout.","void connect(SocketAddress remoteAddr) Connects this socket to the given remote host address and port specified by the SocketAddress remoteAddr.","SocketChannel getChannel() Returns this socket's SocketChannel, if one exists.","InetAddress getInetAddress() Returns the IP address of the target host this socket is connected to, or null if this socket is not yet connected.","InputStream getInputStream() Returns an input stream to read data from this socket.","boolean getKeepAlive() Returns this socket's SO_KEEPALIVE setting.","InetAddress getLocalAddress() Returns the local IP address this socket is bound to, or an address for which isAnyLocalAddress() returns true if the socket is closed or unbound.","int getLocalPort() Returns the local port this socket is bound to, or -1 if the socket is unbound.","SocketAddress getLocalSocketAddress() Returns the local address and port of this socket as a SocketAddress or null if the socket has never been bound.","boolean getOOBInline() Returns this socket's SO_OOBINLINE setting.","OutputStream getOutputStream() Returns an output stream to write data into this socket.","int getPort() Returns the port number of the target host this socket is connected to, or 0 if this socket is not yet connected.","synchronized int getReceiveBufferSize() Returns this socket's receive buffer size.","SocketAddress getRemoteSocketAddress() Returns the remote address and port of this socket as a SocketAddress or null if the socket is not connected.","boolean getReuseAddress() Returns this socket's SO_REUSEADDR setting.","synchronized int getSendBufferSize() Returns this socket's send buffer size.","int getSoLinger() Returns this socket's linger timeout in seconds, or -1 for no linger (i.e.","synchronized int getSoTimeout() Returns this socket's receive timeout.","boolean getTcpNoDelay() Returns this socket's SocketOptions#TCP_NODELAY setting.","int getTrafficClass() Returns this socket's setting.","boolean isBound() Returns whether this socket is bound to a local address and port.","boolean isClosed() Returns whether this socket is closed.","boolean isConnected() Returns whether this socket is connected to a remote host.","boolean isInputShutdown() Returns whether the incoming channel of the socket has already been closed.","boolean isOutputShutdown() Returns whether the outgoing channel of the socket has already been closed.","void sendUrgentData(int value) Sends the given single byte data which is represented by the lowest octet of value as \"TCP urgent data\".","void setKeepAlive(boolean keepAlive) Sets this socket's SO_KEEPALIVE option.","void setOOBInline(boolean oobinline) Sets this socket's SO_OOBINLINE option.","void setPerformancePreferences(int connectionTime, int latency, int bandwidth) Sets performance preferences for connectionTime, latency and bandwidth.","synchronized void setReceiveBufferSize(int size) Sets this socket's receive buffer size.","void setReuseAddress(boolean reuse) Sets this socket's SO_REUSEADDR option.","synchronized void setSendBufferSize(int size) Sets this socket's send buffer size.","void setSoLinger(boolean on, int timeout) Sets this socket's linger timeout in seconds.","synchronized void setSoTimeout(int timeout) Sets this socket's read timeout in milliseconds.","synchronized static void setSocketImplFactory(SocketImplFactory fac) Sets the internal factory for creating socket implementations.","void setTcpNoDelay(boolean on) Sets this socket's TCP_NODELAY option.","void setTrafficClass(int value) Sets this socket's IP_TOS value for every packet sent by this socket.","void shutdownInput() Closes the input stream of this socket.","void shutdownOutput() Closes the output stream of this socket.","String toString() Returns a String containing a concise, human-readable description of the socket.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.io.Closeable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds."],"package":"java.net","constants":[],"class":"Socket","constructors":[],"fields":[]}