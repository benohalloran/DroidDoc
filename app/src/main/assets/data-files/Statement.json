{"methods":["abstract void addBatch(String sql) Adds a specified SQL command to the list of commands for this Statement.","abstract void cancel() Cancels this statement's execution if both the database and the JDBC driver support aborting an SQL statement in flight.","abstract void clearBatch() Clears the current list of SQL commands for this statement.","abstract void clearWarnings() Clears all SQLWarnings from this statement.","abstract void close() Releases this statement's database and JDBC driver resources.","abstract boolean execute(String sql) Executes a supplied SQL statement.","abstract boolean execute(String sql, int autoGeneratedKeys) Executes a supplied SQL statement.","abstract boolean execute(String sql, String[] columnNames) Executes the supplied SQL statement.","abstract boolean execute(String sql, int[] columnIndexes) Executes the supplied SQL statement.","abstract int[] executeBatch() Submits a batch of SQL commands to the database.","abstract ResultSet executeQuery(String sql) Executes a supplied SQL statement.","abstract int executeUpdate(String sql, int autoGeneratedKeys) Executes the supplied SQL statement.","abstract int executeUpdate(String sql, String[] columnNames) Executes the supplied SQL statement.","abstract int executeUpdate(String sql) Executes the supplied SQL statement.","abstract int executeUpdate(String sql, int[] columnIndexes) Executes the supplied SQL statement.","abstract Connection getConnection() Gets the Connection object which created this statement.","abstract int getFetchDirection() Gets the default direction for fetching rows for ResultSets generated from this statement.","abstract int getFetchSize() Gets the default number of rows for a fetch for the ResultSet objects returned from this statement.","abstract ResultSet getGeneratedKeys() Returns auto generated keys created by executing this statement.","abstract int getMaxFieldSize() Gets the maximum number of bytes which can be returned as values from character and binary type columns in a ResultSet derived from this statement.","abstract int getMaxRows() Gets the maximum number of rows that a ResultSet can contain when produced from this statement.","abstract boolean getMoreResults(int current) Moves to this statement's next result.","abstract boolean getMoreResults() Moves to this statement's next result.","abstract int getQueryTimeout() Gets the timeout value for the statement's execution time.","abstract ResultSet getResultSet() Gets the current result.","abstract int getResultSetConcurrency() Gets the concurrency setting for ResultSet objects generated by this statement.","abstract int getResultSetHoldability() Gets the cursor hold setting for ResultSet objects generated by this statement.","abstract int getResultSetType() Gets the ResultSet type setting for ResultSets derived from this statement.","abstract int getUpdateCount() Gets an update count for the current result if it is not a ResultSet.","abstract SQLWarning getWarnings() Retrieves the first SQLWarning reported by calls on this statement.","abstract boolean isClosed() Returns true if this statement has been closed, false otherwise.","abstract boolean isPoolable() Returns true if this statement is poolable, false otherwise.","abstract void setCursorName(String name) Sets the SQL cursor name.","abstract void setEscapeProcessing(boolean enable) Sets Escape Processing mode.","abstract void setFetchDirection(int direction) Sets the fetch direction - a hint to the JDBC driver about the direction of processing of rows in ResultSets created by this statement.","abstract void setFetchSize(int rows) Sets the fetch size.","abstract void setMaxFieldSize(int max) Sets the maximum number of bytes for ResultSet columns that contain character or binary values.","abstract void setMaxRows(int max) Sets the maximum number of rows that any ResultSet can contain.","abstract void setPoolable(boolean poolable) Hints whether this statement should be pooled.","abstract void setQueryTimeout(int seconds) Sets the timeout, in seconds, for queries - how long the driver will allow for completion of a statement execution.","[Expand] Inherited Methods","From interface java.lang.AutoCloseable abstract void close() Closes the object and release any system resources it holds.","abstract void close() Closes the object and release any system resources it holds.","From interface java.sql.Wrapper abstract boolean isWrapperFor(Class<?> iface) If the caller is a wrapper of the class or implements the given interface, the methods return false and vice versa. abstract <T> T unwrap(Class<T> iface) Returns an object that implements the given interface.","abstract boolean isWrapperFor(Class<?> iface) If the caller is a wrapper of the class or implements the given interface, the methods return false and vice versa.","abstract <T> T unwrap(Class<T> iface) Returns an object that implements the given interface."],"package":"java.sql","constants":["int CLOSE_ALL_RESULTS Passing this constant to getMoreResults() implies that all ResultSet objects previously kept open should be closed.","int CLOSE_CURRENT_RESULT Passing this constant to getMoreResults() implies that the current ResultSet object should be closed.","int EXECUTE_FAILED Indicates that an error was encountered during execution of a batch statement.","int KEEP_CURRENT_RESULT Passing this constant to getMoreResults implies that the current ResultSet object should not be closed.","int NO_GENERATED_KEYS Indicates that generated keys should not be accessible for retrieval.","int RETURN_GENERATED_KEYS Indicates that generated keys should be accessible for retrieval.","int SUCCESS_NO_INFO Indicates that a batch statement was executed with a successful result, but a count of the number of rows it affected is unavailable."],"class":"Statement","constructors":[],"fields":[]}