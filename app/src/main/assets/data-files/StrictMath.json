{"methods":["static double IEEEremainder(double x, double y) Returns the remainder of dividing x by y using the IEEE 754 rules.","static double abs(double d) Returns the absolute value of the argument.","static long abs(long l) Returns the absolute value of the argument.","static float abs(float f) Returns the absolute value of the argument.","static int abs(int i) Returns the absolute value of the argument.","static double acos(double d) Returns the closest double approximation of the arc cosine of the argument within the range [0..pi].","static double asin(double d) Returns the closest double approximation of the arc sine of the argument within the range [-pi/2..pi/2].","static double atan(double d) Returns the closest double approximation of the arc tangent of the argument within the range [-pi/2..pi/2].","static double atan2(double y, double x) Returns the closest double approximation of the arc tangent of y/x within the range [-pi..pi].","static double cbrt(double d) Returns the closest double approximation of the cube root of the argument.","static double ceil(double d) Returns the double conversion of the most negative (closest to negative infinity) integer value greater than or equal to the argument.","static double copySign(double magnitude, double sign) Returns a double with the given magnitude and the sign of sign.","static float copySign(float magnitude, float sign) Returns a float with the given magnitude and the sign of sign.","static double cos(double d) Returns the closest double approximation of the cosine of the argument.","static double cosh(double d) Returns the closest double approximation of the hyperbolic cosine of the argument.","static double exp(double d) Returns the closest double approximation of the raising \"e\" to the power of the argument.","static double expm1(double d) Returns the closest double approximation of e d- 1.","static double floor(double d) Returns the double conversion of the most positive (closest to positive infinity) integer less than or equal to the argument.","static int getExponent(float f) Returns the exponent of float f.","static int getExponent(double d) Returns the exponent of double d.","static double hypot(double x, double y) Returns sqrt(x2+ y2).","static double log(double d) Returns the closest double approximation of the natural logarithm of the argument.","static double log10(double d) Returns the closest double approximation of the base 10 logarithm of the argument.","static double log1p(double d) Returns the closest double approximation of the natural logarithm of the sum of the argument and 1.","static long max(long l1, long l2) Returns the most positive (closest to positive infinity) of the two arguments.","static int max(int i1, int i2) Returns the most positive (closest to positive infinity) of the two arguments.","static double max(double d1, double d2) Returns the most positive (closest to positive infinity) of the two arguments.","static float max(float f1, float f2) Returns the most positive (closest to positive infinity) of the two arguments.","static int min(int i1, int i2) Returns the most negative (closest to negative infinity) of the two arguments.","static long min(long l1, long l2) Returns the most negative (closest to negative infinity) of the two arguments.","static double min(double d1, double d2) Returns the most negative (closest to negative infinity) of the two arguments.","static float min(float f1, float f2) Returns the most negative (closest to negative infinity) of the two arguments.","static float nextAfter(float start, double direction) Returns the next float after start in the given direction.","static double nextAfter(double start, double direction) Returns the next double after start in the given direction.","static double nextUp(double d) Returns the next double larger than d.","static float nextUp(float f) Returns the next float larger than f.","static double pow(double x, double y) Returns the closest double approximation of the result of raising x to the power of y.","static double random() Returns a pseudo-random number between 0.0 (inclusive) and 1.0 (exclusive).","static double rint(double d) Returns the double conversion of the result of rounding the argument to an integer.","static long round(double d) Returns the result of rounding the argument to an integer.","static int round(float f) Returns the result of rounding the argument to an integer.","static double scalb(double d, int scaleFactor) Returns d * 2^scaleFactor.","static float scalb(float d, int scaleFactor) Returns d * 2^scaleFactor.","static double signum(double d) Returns the signum function of the argument.","static float signum(float f) Returns the signum function of the argument.","static double sin(double d) Returns the closest double approximation of the sine of the argument.","static double sinh(double d) Returns the closest double approximation of the hyperbolic sine of the argument.","static double sqrt(double d) Returns the closest double approximation of the square root of the argument.","static double tan(double d) Returns the closest double approximation of the tangent of the argument.","static double tanh(double d) Returns the closest double approximation of the hyperbolic tangent of the argument.","static double toDegrees(double angrad) Returns the measure in degrees of the supplied radian angle.","static double toRadians(double angdeg) Returns the measure in radians of the supplied degree angle.","static float ulp(float f) Returns the argument's ulp (unit in the last place).","static double ulp(double d) Returns the argument's ulp (unit in the last place).","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.lang","constants":["double E The double value closest to e, the base of the natural logarithm.","double PI The double value closest to pi, the ratio of a circle's circumference to its diameter."],"class":"StrictMath","constructors":[],"fields":[]}