{"methods":["synchronized StringBuffer append(char[] chars, int start, int length) Adds the specified sequence of characters to the end of this buffer.","StringBuffer append(double d) Adds the string representation of the specified double to the end of this StringBuffer.","synchronized StringBuffer append(char ch) Adds the specified character to the end of this buffer.","StringBuffer append(long l) Adds the string representation of the specified long to the end of this StringBuffer.","StringBuffer append(boolean b) Adds the string representation of the specified boolean to the end of this StringBuffer.","StringBuffer append(float f) Adds the string representation of the specified float to the end of this StringBuffer.","synchronized StringBuffer append(char[] chars) Adds the character array to the end of this buffer.","StringBuffer append(int i) Adds the string representation of the specified integer to the end of this StringBuffer.","synchronized StringBuffer append(String string) Adds the specified string to the end of this buffer.","synchronized StringBuffer append(CharSequence s, int start, int end) Appends the specified subsequence of the CharSequence to this buffer.","synchronized StringBuffer append(StringBuffer sb) Adds the specified StringBuffer to the end of this buffer.","synchronized StringBuffer append(Object obj) Adds the string representation of the specified object to the end of this StringBuffer.","synchronized StringBuffer append(CharSequence s) Appends the specified CharSequence to this buffer.","StringBuffer appendCodePoint(int codePoint) Appends the string representation of the specified Unicode code point to the end of this buffer.","int capacity() Returns the number of characters that can be held without growing.","synchronized char charAt(int index) Returns the character at index.","synchronized int codePointAt(int index) Retrieves the Unicode code point value at the index.","synchronized int codePointBefore(int index) Retrieves the Unicode code point value that precedes the index.","synchronized int codePointCount(int beginIndex, int endIndex) Calculates the number of Unicode code points between start and end.","synchronized StringBuffer delete(int start, int end) Deletes a range of characters.","synchronized StringBuffer deleteCharAt(int location) Deletes the character at the specified offset.","synchronized void ensureCapacity(int min) Ensures that this object has a minimum capacity available before requiring the internal buffer to be enlarged.","synchronized void getChars(int start, int end, char[] buffer, int idx) Copies the requested sequence of characters to the char[] passed starting at idx.","synchronized int indexOf(String subString, int start) Searches for the index of the specified character.","int indexOf(String string) Searches for the first index of the specified character.","synchronized StringBuffer insert(int index, CharSequence s, int start, int end) Inserts the specified subsequence into this buffer at the specified index.","StringBuffer insert(int index, Object obj) Inserts the string representation of the specified object into this buffer at the specified offset.","StringBuffer insert(int index, float f) Inserts the string representation of the specified float into this buffer at the specified offset.","synchronized StringBuffer insert(int index, char ch) Inserts the character into this buffer at the specified offset.","StringBuffer insert(int index, int i) Inserts the string representation of the specified integer into this buffer at the specified offset.","synchronized StringBuffer insert(int index, char[] chars) Inserts the character array into this buffer at the specified offset.","StringBuffer insert(int index, double d) Inserts the string representation of the specified into this buffer double at the specified offset.","synchronized StringBuffer insert(int index, CharSequence s) Inserts the specified CharSequence into this buffer at the specified index.","synchronized StringBuffer insert(int index, char[] chars, int start, int length) Inserts the specified subsequence of characters into this buffer at the specified index.","synchronized StringBuffer insert(int index, String string) Inserts the string into this buffer at the specified offset.","StringBuffer insert(int index, long l) Inserts the string representation of the specified long into this buffer at the specified offset.","StringBuffer insert(int index, boolean b) Inserts the string representation of the specified boolean into this buffer at the specified offset.","synchronized int lastIndexOf(String subString, int start) Searches for the index of the specified character.","int lastIndexOf(String string) Searches for the last index of the specified character.","int length() The current length.","synchronized int offsetByCodePoints(int index, int codePointOffset) Returns the index that is offset codePointOffset code points from index.","synchronized StringBuffer replace(int start, int end, String string) Replaces the characters in the specified range with the contents of the specified string.","synchronized StringBuffer reverse() Reverses the order of characters in this buffer.","synchronized void setCharAt(int index, char ch) Sets the character at the index.","synchronized void setLength(int length) Sets the current length to a new value.","synchronized CharSequence subSequence(int start, int end) Returns a CharSequence of the subsequence from the start index to the end index.","synchronized String substring(int start) Returns the String value of the subsequence from the start index to the current end.","synchronized String substring(int start, int end) Returns the String value of the subsequence from the start index to the end index.","synchronized String toString() Returns the current String representation.","synchronized void trimToSize() Trims off any extra capacity beyond the current length.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Appendable abstract Appendable append(CharSequence csq) Appends the character sequence csq. abstract Appendable append(CharSequence csq, int start, int end) Appends a subsequence of csq. abstract Appendable append(char c) Appends the specified character.","abstract Appendable append(CharSequence csq) Appends the character sequence csq.","abstract Appendable append(CharSequence csq, int start, int end) Appends a subsequence of csq.","abstract Appendable append(char c) Appends the specified character.","From interface java.lang.CharSequence abstract char charAt(int index) Returns the character at index. abstract int length() Returns the number of characters in this sequence. abstract CharSequence subSequence(int start, int end) Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence. abstract String toString() Returns a string with the same characters in the same order as in this sequence.","abstract char charAt(int index) Returns the character at index.","abstract int length() Returns the number of characters in this sequence.","abstract CharSequence subSequence(int start, int end) Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence.","abstract String toString() Returns a string with the same characters in the same order as in this sequence."],"package":"java.lang","constants":[],"class":"StringBuffer","constructors":[],"fields":[]}