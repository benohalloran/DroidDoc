{"methods":["StringBuilder append(char[] str, int offset, int len) Appends the string representation of the specified subset of the char[].","StringBuilder append(double d) Appends the string representation of the specified double value.","StringBuilder append(char c) Appends the string representation of the specified char value.","StringBuilder append(boolean b) Appends the string representation of the specified boolean value.","StringBuilder append(long l) Appends the string representation of the specified long value.","StringBuilder append(float f) Appends the string representation of the specified float value.","StringBuilder append(char[] chars) Appends the string representation of the specified char[].","StringBuilder append(int i) Appends the string representation of the specified int value.","StringBuilder append(String str) Appends the contents of the specified string.","StringBuilder append(CharSequence csq, int start, int end) Appends the string representation of the specified subsequence of the CharSequence.","StringBuilder append(StringBuffer sb) Appends the contents of the specified StringBuffer.","StringBuilder append(Object obj) Appends the string representation of the specified Object.","StringBuilder append(CharSequence csq) Appends the string representation of the specified CharSequence.","StringBuilder appendCodePoint(int codePoint) Appends the encoded Unicode code point.","int capacity() Returns the number of characters that can be held without growing.","char charAt(int index) Returns the character at index.","int codePointAt(int index) Retrieves the Unicode code point value at the index.","int codePointBefore(int index) Retrieves the Unicode code point value that precedes the index.","int codePointCount(int start, int end) Calculates the number of Unicode code points between start and end.","StringBuilder delete(int start, int end) Deletes a sequence of characters specified by start and end.","StringBuilder deleteCharAt(int index) Deletes the character at the specified index.","void ensureCapacity(int min) Ensures that this object has a minimum capacity available before requiring the internal buffer to be enlarged.","void getChars(int start, int end, char[] dst, int dstStart) Copies the requested sequence of characters into dst passed starting at dst.","int indexOf(String subString, int start) Searches for the index of the specified character.","int indexOf(String string) Searches for the first index of the specified character.","StringBuilder insert(int offset, CharSequence s, int start, int end) Inserts the string representation of the specified subsequence of the CharSequence at the specified offset.","StringBuilder insert(int offset, Object obj) Inserts the string representation of the specified Object at the specified offset.","StringBuilder insert(int offset, float f) Inserts the string representation of the specified float value at the specified offset.","StringBuilder insert(int offset, char c) Inserts the string representation of the specified char value at the specified offset.","StringBuilder insert(int offset, int i) Inserts the string representation of the specified int value at the specified offset.","StringBuilder insert(int offset, char[] ch) Inserts the string representation of the specified char[] at the specified offset.","StringBuilder insert(int offset, double d) Inserts the string representation of the specified double value at the specified offset.","StringBuilder insert(int offset, CharSequence s) Inserts the string representation of the specified CharSequence at the specified offset.","StringBuilder insert(int offset, char[] str, int strOffset, int strLen) Inserts the string representation of the specified subsequence of the char[] at the specified offset.","StringBuilder insert(int offset, String str) Inserts the specified string at the specified offset.","StringBuilder insert(int offset, long l) Inserts the string representation of the specified long value at the specified offset.","StringBuilder insert(int offset, boolean b) Inserts the string representation of the specified boolean value at the specified offset.","int lastIndexOf(String subString, int start) Searches for the index of the specified character.","int lastIndexOf(String string) Searches for the last index of the specified character.","int length() The current length.","int offsetByCodePoints(int index, int codePointOffset) Returns the index that is offset codePointOffset code points from index.","StringBuilder replace(int start, int end, String string) Replaces the specified subsequence in this builder with the specified string.","StringBuilder reverse() Reverses the order of characters in this builder.","void setCharAt(int index, char ch) Sets the character at the index.","void setLength(int length) Sets the current length to a new value.","CharSequence subSequence(int start, int end) Returns a CharSequence of the subsequence from the start index to the end index.","String substring(int start) Returns the String value of the subsequence from the start index to the current end.","String substring(int start, int end) Returns the String value of the subsequence from the start index to the end index.","String toString() Returns the contents of this builder.","void trimToSize() Trims off any extra capacity beyond the current length.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Appendable abstract Appendable append(CharSequence csq) Appends the character sequence csq. abstract Appendable append(CharSequence csq, int start, int end) Appends a subsequence of csq. abstract Appendable append(char c) Appends the specified character.","abstract Appendable append(CharSequence csq) Appends the character sequence csq.","abstract Appendable append(CharSequence csq, int start, int end) Appends a subsequence of csq.","abstract Appendable append(char c) Appends the specified character.","From interface java.lang.CharSequence abstract char charAt(int index) Returns the character at index. abstract int length() Returns the number of characters in this sequence. abstract CharSequence subSequence(int start, int end) Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence. abstract String toString() Returns a string with the same characters in the same order as in this sequence.","abstract char charAt(int index) Returns the character at index.","abstract int length() Returns the number of characters in this sequence.","abstract CharSequence subSequence(int start, int end) Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence.","abstract String toString() Returns a string with the same characters in the same order as in this sequence."],"package":"java.lang","constants":[],"class":"StringBuilder","constructors":[],"fields":[]}