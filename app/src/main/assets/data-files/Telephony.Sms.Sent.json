{"methods":["[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.provider","constants":["String DEFAULT_SORT_ORDER The default sort order for this table.","[Expand] Inherited Constants","From interface android.provider.BaseColumns String _COUNT The count of rows in a directory. String _ID The unique ID for a row.","String _COUNT The count of rows in a directory.","String _ID The unique ID for a row.","From interface android.provider.Telephony.TextBasedSmsColumns String ADDRESS The address of the other party. String BODY The body of the message. String CREATOR The identity of the sender of a sent message. String DATE The date the message was received. String DATE_SENT The date the message was sent. String ERROR_CODE Error code associated with sending or receiving this message Type: INTEGER String LOCKED Is the message locked? Type: INTEGER (boolean) int MESSAGE_TYPE_ALL Message type: all messages. int MESSAGE_TYPE_DRAFT Message type: drafts. int MESSAGE_TYPE_FAILED Message type: failed outgoing message. int MESSAGE_TYPE_INBOX Message type: inbox. int MESSAGE_TYPE_OUTBOX Message type: outbox. int MESSAGE_TYPE_QUEUED Message type: queued to send later. int MESSAGE_TYPE_SENT Message type: sent messages. String PERSON The ID of the sender of the conversation, if present. String PROTOCOL The protocol identifier code. String READ Has the message been read? Type: INTEGER (boolean) String REPLY_PATH_PRESENT Is the TP-Reply-Path flag set? Type: BOOLEAN String SEEN Has the message been seen by the user? The \"seen\" flag determines whether we need to show a notification. String SERVICE_CENTER The service center (SC) through which to send the message, if present. String STATUS TP-Status value for the message, or -1 if no status has been received. int STATUS_COMPLETE TP-Status: complete. int STATUS_FAILED TP-Status: failed. int STATUS_NONE TP-Status: no status received. int STATUS_PENDING TP-Status: pending. String SUBJECT The subject of the message, if present. String THREAD_ID The thread ID of the message. String TYPE The type of message.","String ADDRESS The address of the other party.","String BODY The body of the message.","String CREATOR The identity of the sender of a sent message.","String DATE The date the message was received.","String DATE_SENT The date the message was sent.","String ERROR_CODE Error code associated with sending or receiving this message Type: INTEGER","String LOCKED Is the message locked? Type: INTEGER (boolean)","int MESSAGE_TYPE_ALL Message type: all messages.","int MESSAGE_TYPE_DRAFT Message type: drafts.","int MESSAGE_TYPE_FAILED Message type: failed outgoing message.","int MESSAGE_TYPE_INBOX Message type: inbox.","int MESSAGE_TYPE_OUTBOX Message type: outbox.","int MESSAGE_TYPE_QUEUED Message type: queued to send later.","int MESSAGE_TYPE_SENT Message type: sent messages.","String PERSON The ID of the sender of the conversation, if present.","String PROTOCOL The protocol identifier code.","String READ Has the message been read? Type: INTEGER (boolean)","String REPLY_PATH_PRESENT Is the TP-Reply-Path flag set? Type: BOOLEAN","String SEEN Has the message been seen by the user? The \"seen\" flag determines whether we need to show a notification.","String SERVICE_CENTER The service center (SC) through which to send the message, if present.","String STATUS TP-Status value for the message, or -1 if no status has been received.","int STATUS_COMPLETE TP-Status: complete.","int STATUS_FAILED TP-Status: failed.","int STATUS_NONE TP-Status: no status received.","int STATUS_PENDING TP-Status: pending.","String SUBJECT The subject of the message, if present.","String THREAD_ID The thread ID of the message.","String TYPE The type of message."],"class":"Telephony.Sms.Sent","constructors":[],"fields":["public static final Uri CONTENT_URI The content:// style URL for this table."]}