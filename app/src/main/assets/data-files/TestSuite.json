{"methods":["void addTest(Test test) Adds a test to the suite.","void addTestSuite(Class<? extends TestCase> testClass) Adds the tests from the given class to the suite","int countTestCases() Counts the number of test cases that will be run by this test.","static Test createTest(Class<?> theClass, String name) ...as the moon sets over the early morning Merlin, Oregon mountains, our intrepid adventurers type...","String getName() Returns the name of the suite.","static Constructor<?> getTestConstructor(Class<?> theClass) Gets a constructor which takes a single String as its argument or a no arg constructor.","void run(TestResult result) Runs the tests and collects their result in a TestResult.","void runTest(Test test, TestResult result)","void setName(String name) Sets the name of the suite.","Test testAt(int index) Returns the test at the given index","int testCount() Returns the number of tests in this suite","Enumeration<Test> tests() Returns the tests as an enumeration","String toString() Returns a string containing a concise, human-readable description of this object.","static Test warning(String message) Returns a test which will fail and log a warning message.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface junit.framework.Test abstract int countTestCases() Counts the number of test cases that will be run by this test. abstract void run(TestResult result) Runs a test and collects its result in a TestResult instance.","abstract int countTestCases() Counts the number of test cases that will be run by this test.","abstract void run(TestResult result) Runs a test and collects its result in a TestResult instance."],"package":"junit.framework","constants":[],"class":"TestSuite","constructors":[],"fields":[]}