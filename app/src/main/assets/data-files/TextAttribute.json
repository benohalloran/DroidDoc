{"methods":["[Expand] Inherited Methods","From class java.text.AttributedCharacterIterator.Attribute final boolean equals(Object object) Compares this attribute with the specified object. String getName() Returns the name of this attribute. final int hashCode() Calculates the hash code for objects of type Attribute. Object readResolve() Resolves a deserialized instance to the correct constant attribute. String toString() Returns the name of the class followed by a \"(\", the name of the attribute, and a \")\".","final boolean equals(Object object) Compares this attribute with the specified object.","String getName() Returns the name of this attribute.","final int hashCode() Calculates the hash code for objects of type Attribute.","Object readResolve() Resolves a deserialized instance to the correct constant attribute.","String toString() Returns the name of the class followed by a \"(\", the name of the attribute, and a \")\".","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.awt.font","constants":[],"class":"TextAttribute","constructors":[],"fields":["public static final TextAttribute BACKGROUND The BACKGROUND text attribute.","public static final TextAttribute BIDI_EMBEDDING The BIDI_EMBEDDING text attribute key.","public static final TextAttribute CHAR_REPLACEMENT The CHAR_REPLACEMENT text attribute key.","public static final TextAttribute FAMILY The FAMILY text attribute key.","public static final TextAttribute FONT The FONT text attribute key.","public static final TextAttribute FOREGROUND The FOREGROUND text attribute key.","public static final TextAttribute INPUT_METHOD_HIGHLIGHT The INPUT_METHOD_HIGHLIGHT text attribute key.","public static final TextAttribute INPUT_METHOD_UNDERLINE The INPUT_METHOD_UNDERLINE text attribute key.","public static final TextAttribute JUSTIFICATION The JUSTIFICATION text attribute key.","public static final Float JUSTIFICATION_FULL The Constant JUSTIFICATION_indicates the full requested width.","public static final Float JUSTIFICATION_NONE The Constant JUSTIFICATION_NONE indicates that line is not allowed for justification.","public static final TextAttribute KERNING The KERNING text attribute key.","public static final Integer KERNING_ON","public static final TextAttribute LIGATURES The LIGATURES text attribute key.","public static final Integer LIGATURES_ON","public static final TextAttribute NUMERIC_SHAPING The NUMERIC_SHAPING text attribute.","public static final TextAttribute POSTURE The POSTURE text attribute.","public static final Float POSTURE_OBLIQUE The Constant POSTURE_OBLIQUE indicates italic posture.","public static final Float POSTURE_REGULAR The Constant POSTURE_REGULAR indicates regular posture.","public static final TextAttribute RUN_DIRECTION The RUN_DIRECTION text attribute.","public static final Boolean RUN_DIRECTION_LTR The Constant RUN_DIRECTION_LTR indicates left-to-right run direction.","public static final Boolean RUN_DIRECTION_RTL The Constant RUN_DIRECTION_RTL indicates right-to-left run direction.","public static final TextAttribute SIZE The SIZE text attribute.","public static final TextAttribute STRIKETHROUGH The STRIKETHROUGH text attribute.","public static final Boolean STRIKETHROUGH_ON The Constant STRIKETHROUGH_ON indicates a single strikethrough.","public static final TextAttribute SUPERSCRIPT The SUPERSCRIPT text attribute.","public static final Integer SUPERSCRIPT_SUB The Constant SUPERSCRIPT_SUB indicates a standard subscript.","public static final Integer SUPERSCRIPT_SUPER The Constant SUPERSCRIPT_SUPER indicates a standard superscript.","public static final TextAttribute SWAP_COLORS The SWAP_COLORS text attribute.","public static final Boolean SWAP_COLORS_ON The Constant SWAP_COLORS_ON indicates a swap of foreground and background.","public static final TextAttribute TRACKING The TRACKING text attribute key.","public static final Float TRACKING_LOOSE","public static final Float TRACKING_TIGHT","public static final TextAttribute TRANSFORM The TRANSFORM text attribute.","public static final TextAttribute UNDERLINE The Constant UNDERLINE text attribute.","public static final Integer UNDERLINE_LOW_DASHED The Constant UNDERLINE_LOW_DASHED indicates single pixel dashed low underline.","public static final Integer UNDERLINE_LOW_DOTTED The Constant UNDERLINE_LOW_DOTTED indicates a single pixel dotted low underline.","public static final Integer UNDERLINE_LOW_GRAY The Constant UNDERLINE_LOW_GRAY indicates double pixel gray low underline.","public static final Integer UNDERLINE_LOW_ONE_PIXEL The Constant UNDERLINE_LOW_ONE_PIXEL indicates a single pixel solid low underline.","public static final Integer UNDERLINE_LOW_TWO_PIXEL The Constant UNDERLINE_LOW_TWO_PIXEL indicates a double pixel solid low underline.","public static final Integer UNDERLINE_ON The Constant UNDERLINE_ON indicates a standard underline at the roman baseline for roman text.","public static final TextAttribute WEIGHT The WEIGHT text attribute.","public static final Float WEIGHT_BOLD The Constant WEIGHT_BOLD indicates the standard bold weight.","public static final Float WEIGHT_DEMIBOLD The Constant WEIGHT_DEMIBOLD indicates a lighter weight than BOLD.","public static final Float WEIGHT_DEMILIGHT The Constant WEIGHT_DEMILIGHT indicates an intermediate weight between LIGHT and STANDARD.","public static final Float WEIGHT_EXTRABOLD The Constant WEIGHT_EXTRABOLD indicates an extra heavy weight.","public static final Float WEIGHT_EXTRA_LIGHT The Constant WEIGHT_EXTRA_LIGHT indicates the lightest predefined weight.","public static final Float WEIGHT_HEAVY The Constant WEIGHT_HEAVY indicates a heavier weight than BOLD.","public static final Float WEIGHT_LIGHT The Constant WEIGHT_LIGHT indicates the standard light weight.","public static final Float WEIGHT_MEDIUM The Constant WEIGHT_MEDIUM indicates average weight between the REGULAR and BOLD.","public static final Float WEIGHT_REGULAR The Constant WEIGHT_REGULAR indicates the standart weight.","public static final Float WEIGHT_SEMIBOLD The Constant WEIGHT_SEMIBOLD indicates a semi weight of REGULAR.","public static final Float WEIGHT_ULTRABOLD The Constant WEIGHT_ULTRABOLD indicates the heaviest predefined weight.","public static final TextAttribute WIDTH The WIDTH text attribute.","public static final Float WIDTH_CONDENSED The Constant WIDTH_CONDENSED indicates the most condensed predefined width.","public static final Float WIDTH_EXTENDED The Constant WIDTH_EXTENDED indicates extended width.","public static final Float WIDTH_REGULAR The Constant WIDTH_REGULAR indicates the standard width.","public static final Float WIDTH_SEMI_CONDENSED The Constant WIDTH_SEMI_CONDENSED indicates a semi condensed width.","public static final Float WIDTH_SEMI_EXTENDED The Constant WIDTH_SEMI_EXTENDED indicates semi extended width."]}