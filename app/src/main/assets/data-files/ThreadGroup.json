{"methods":["int activeCount() Returns the number of running Threads which are children of this thread group, directly or indirectly.","int activeGroupCount() Returns the number of ThreadGroups which are children of this group, directly or indirectly.","boolean allowThreadSuspension(boolean b) This method was deprecated in API level 1. Required deprecated method suspend().","final void checkAccess() Does nothing.","final void destroy() Destroys this thread group and recursively all its subgroups.","int enumerate(Thread[] threads) Iterates over all active threads in this group (and its sub-groups) and stores the threads in the given array.","int enumerate(ThreadGroup[] groups, boolean recurse) Iterates over all thread groups in this group (and, optionally, its sub-groups) and stores the groups in the given array.","int enumerate(Thread[] threads, boolean recurse) Iterates over all active threads in this group (and, optionally, its sub-groups) and stores the threads in the given array.","int enumerate(ThreadGroup[] groups) Iterates over all thread groups in this group (and its sub-groups) and and stores the groups in the given array.","final int getMaxPriority() Returns the maximum allowed priority for a Thread in this thread group.","final String getName() Returns the name of this thread group.","final ThreadGroup getParent() Returns this thread group's parent ThreadGroup.","final void interrupt() Interrupts every Thread in this group and recursively in all its subgroups.","final boolean isDaemon() Checks whether this thread group is a daemon ThreadGroup.","synchronized boolean isDestroyed() Checks whether this thread group has already been destroyed.","void list() Outputs to System.out a text representation of the hierarchy of Threads and ThreadGroups in this thread group (and recursively).","final boolean parentOf(ThreadGroup g) Checks whether this thread group is a direct or indirect parent group of a given ThreadGroup.","final void resume() This method was deprecated in API level 1. Requires deprecated method Thread.resume().","final void setDaemon(boolean isDaemon) Sets whether this is a daemon ThreadGroup or not.","final void setMaxPriority(int newMax) Configures the maximum allowed priority for a Thread in this group and recursively in all its subgroups.","final void stop() This method was deprecated in API level 1. Requires deprecated method Thread.stop().","final void suspend() This method was deprecated in API level 1. Requires deprecated method Thread.suspend().","String toString() Returns a string containing a concise, human-readable description of this object.","void uncaughtException(Thread t, Throwable e) Handles uncaught exceptions.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Thread.UncaughtExceptionHandler abstract void uncaughtException(Thread thread, Throwable ex) The thread is being terminated by an uncaught exception.","abstract void uncaughtException(Thread thread, Throwable ex) The thread is being terminated by an uncaught exception."],"package":"java.lang","constants":[],"class":"ThreadGroup","constructors":[],"fields":[]}