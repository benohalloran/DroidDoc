{"methods":["Object clone() Returns a new time zone with the same ID, raw offset, and daylight savings time rules as this time zone.","synchronized static String[] getAvailableIDs() Returns the system's installed time zone IDs.","synchronized static String[] getAvailableIDs(int offsetMillis) Returns the IDs of the time zones whose offset from UTC is offsetMillis.","int getDSTSavings() Returns the latest daylight savings in milliseconds for this time zone, relative to this time zone's regular UTC offset (as returned by getRawOffset()).","synchronized static TimeZone getDefault() Returns the user's preferred time zone.","final String getDisplayName(Locale locale) Equivalent to getDisplayName(false, TimeZone.LONG, locale).","String getDisplayName(boolean daylightTime, int style, Locale locale) Returns the short or long name of this time zone with either standard or daylight time, as written in locale.","final String getDisplayName() Equivalent to getDisplayName(false, TimeZone.LONG, Locale.getDefault()).","final String getDisplayName(boolean daylightTime, int style) Equivalent to getDisplayName(daylightTime, style, Locale.getDefault()).","String getID() Returns the ID of this TimeZone, such as America/Los_Angeles, GMT-08:00 or UTC.","abstract int getOffset(int era, int year, int month, int day, int dayOfWeek, int timeOfDayMillis) Returns this time zone's offset in milliseconds from UTC at the specified date and time.","int getOffset(long time) Returns the offset in milliseconds from UTC for this time zone at time.","abstract int getRawOffset() Returns the offset in milliseconds from UTC of this time zone's standard time.","synchronized static TimeZone getTimeZone(String id) Returns a TimeZone corresponding to the given id, or GMT for unknown ids.","boolean hasSameRules(TimeZone timeZone) Returns true if timeZone has the same rules as this time zone.","abstract boolean inDaylightTime(Date time) Returns true if time is in a daylight savings time period for this time zone.","synchronized static void setDefault(TimeZone timeZone) Overrides the default time zone for the current process only.","void setID(String id) Sets the ID of this TimeZone.","abstract void setRawOffset(int offsetMillis) Sets the offset in milliseconds from UTC of this time zone's standard time.","abstract boolean useDaylightTime() Returns true if this time zone has a future transition to or from daylight savings time.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"java.util","constants":["int LONG The long display name style, such as Pacific Daylight Time.","int SHORT The short display name style, such as PDT."],"class":"TimeZone","constructors":[],"fields":[]}