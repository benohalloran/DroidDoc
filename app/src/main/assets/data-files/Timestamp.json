{"methods":["boolean after(Timestamp theTimestamp) Returns true if this timestamp object is later than the supplied timestamp, otherwise returns false.","boolean before(Timestamp theTimestamp) Returns true if this Timestamp object is earlier than the supplied timestamp, otherwise returns false.","int compareTo(Date theObject) Compares this Timestamp object with a supplied Timestamp object.","int compareTo(Timestamp theTimestamp) Compares this Timestamp object with a supplied Timestamp object.","boolean equals(Timestamp theTimestamp) Tests to see if this timestamp is equal to a supplied timestamp.","boolean equals(Object theObject) Tests to see if this timestamp is equal to a supplied object.","int getNanos() Gets this Timestamp's nanosecond value","long getTime() Returns the time represented by this Timestamp object, as a long value containing the number of milliseconds since the Epoch (January 1 1970, 00:00:00.000 GMT).","void setNanos(int n) Sets the nanosecond value for this Timestamp.","void setTime(long theTime) Sets the time represented by this Timestamp object to the supplied time, defined as the number of milliseconds since the Epoch (January 1 1970, 00:00:00.000 GMT).","String toString() Returns the timestamp formatted as a String in the JDBC Timestamp Escape format, which is \"yyyy-MM-dd HH:mm:ss.nnnnnnnnn\".","static Timestamp valueOf(String s) Creates a Timestamp object with a time value equal to the time specified by a supplied String holding the time in JDBC timestamp escape format, which is \"yyyy-MM-dd HH:mm:ss.nnnnnnnnn\"","[Expand] Inherited Methods","From class java.util.Date static long UTC(int year, int month, int day, int hour, int minute, int second) This method was deprecated in API level 1. Use code like this instead: Calendar cal = new GregorianCalendar(TimeZone.getTimeZone(\"GMT\")); cal.set(year + 1900, month, day, hour, minute, second); cal.getTime().getTime(); boolean after(Date date) Returns if this Date is after the specified Date. boolean before(Date date) Returns if this Date is before the specified Date. Object clone() Returns a new Date with the same millisecond value as this Date. int compareTo(Date date) Compare the receiver to the specified Date to determine the relative ordering. boolean equals(Object object) Compares the specified object to this Date and returns if they are equal. int getDate() This method was deprecated in API level 1. Use Calendar.get(Calendar.DATE) instead. int getDay() This method was deprecated in API level 1. Use Calendar.get(Calendar.DAY_OF_WEEK) instead. int getHours() This method was deprecated in API level 1. Use Calendar.get(Calendar.HOUR_OF_DAY) instead. int getMinutes() This method was deprecated in API level 1. Use Calendar.get(Calendar.MINUTE) instead. int getMonth() This method was deprecated in API level 1. Use Calendar.get(Calendar.MONTH) instead. int getSeconds() This method was deprecated in API level 1. Use Calendar.get(Calendar.SECOND) instead. long getTime() Returns this Date as a millisecond value. int getTimezoneOffset() This method was deprecated in API level 1. Use (Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / 60000 instead. int getYear() This method was deprecated in API level 1. Use Calendar.get(Calendar.YEAR) - 1900 instead. int hashCode() Returns an integer hash code for the receiver. static long parse(String string) This method was deprecated in API level 1. Use DateFormat instead. void setDate(int day) This method was deprecated in API level 1. Use Calendar.set(Calendar.DATE, day) instead. void setHours(int hour) This method was deprecated in API level 1. Use Calendar.set(Calendar.HOUR_OF_DAY, hour) instead. void setMinutes(int minute) This method was deprecated in API level 1. Use Calendar.set(Calendar.MINUTE, minute) instead. void setMonth(int month) This method was deprecated in API level 1. Use Calendar.set(Calendar.MONTH, month) instead. void setSeconds(int second) This method was deprecated in API level 1. Use Calendar.set(Calendar.SECOND, second) instead. void setTime(long milliseconds) Sets this Date to the specified millisecond value. void setYear(int year) This method was deprecated in API level 1. Use Calendar.set(Calendar.YEAR, year + 1900) instead. String toGMTString() This method was deprecated in API level 1. Use DateFormat instead. String toLocaleString() This method was deprecated in API level 1. Use DateFormat instead. String toString() Returns a string representation of this Date.","static long UTC(int year, int month, int day, int hour, int minute, int second) This method was deprecated in API level 1. Use code like this instead: Calendar cal = new GregorianCalendar(TimeZone.getTimeZone(\"GMT\")); cal.set(year + 1900, month, day, hour, minute, second); cal.getTime().getTime();","boolean after(Date date) Returns if this Date is after the specified Date.","boolean before(Date date) Returns if this Date is before the specified Date.","Object clone() Returns a new Date with the same millisecond value as this Date.","int compareTo(Date date) Compare the receiver to the specified Date to determine the relative ordering.","boolean equals(Object object) Compares the specified object to this Date and returns if they are equal.","int getDate() This method was deprecated in API level 1. Use Calendar.get(Calendar.DATE) instead.","int getDay() This method was deprecated in API level 1. Use Calendar.get(Calendar.DAY_OF_WEEK) instead.","int getHours() This method was deprecated in API level 1. Use Calendar.get(Calendar.HOUR_OF_DAY) instead.","int getMinutes() This method was deprecated in API level 1. Use Calendar.get(Calendar.MINUTE) instead.","int getMonth() This method was deprecated in API level 1. Use Calendar.get(Calendar.MONTH) instead.","int getSeconds() This method was deprecated in API level 1. Use Calendar.get(Calendar.SECOND) instead.","long getTime() Returns this Date as a millisecond value.","int getTimezoneOffset() This method was deprecated in API level 1. Use (Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / 60000 instead.","int getYear() This method was deprecated in API level 1. Use Calendar.get(Calendar.YEAR) - 1900 instead.","int hashCode() Returns an integer hash code for the receiver.","static long parse(String string) This method was deprecated in API level 1. Use DateFormat instead.","void setDate(int day) This method was deprecated in API level 1. Use Calendar.set(Calendar.DATE, day) instead.","void setHours(int hour) This method was deprecated in API level 1. Use Calendar.set(Calendar.HOUR_OF_DAY, hour) instead.","void setMinutes(int minute) This method was deprecated in API level 1. Use Calendar.set(Calendar.MINUTE, minute) instead.","void setMonth(int month) This method was deprecated in API level 1. Use Calendar.set(Calendar.MONTH, month) instead.","void setSeconds(int second) This method was deprecated in API level 1. Use Calendar.set(Calendar.SECOND, second) instead.","void setTime(long milliseconds) Sets this Date to the specified millisecond value.","void setYear(int year) This method was deprecated in API level 1. Use Calendar.set(Calendar.YEAR, year + 1900) instead.","String toGMTString() This method was deprecated in API level 1. Use DateFormat instead.","String toLocaleString() This method was deprecated in API level 1. Use DateFormat instead.","String toString() Returns a string representation of this Date.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.lang.Comparable abstract int compareTo(T another) Compares this object to the specified object to determine their relative order.","abstract int compareTo(T another) Compares this object to the specified object to determine their relative order."],"package":"java.sql","constants":[],"class":"Timestamp","constructors":[],"fields":[]}