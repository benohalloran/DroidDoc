{"methods":["int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","PersistableBundle getArgs() Returns a bundle of the arguments set.","int getSpanTypeId() Return a special type identifier for this span class.","String getType() Returns the type.","void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface android.os.Parcelable abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation. abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","abstract int describeContents() Describe the kinds of special objects contained in this Parcelable's marshalled representation.","abstract void writeToParcel(Parcel dest, int flags) Flatten this object in to a Parcel.","From interface android.text.ParcelableSpan abstract int getSpanTypeId() Return a special type identifier for this span class.","abstract int getSpanTypeId() Return a special type identifier for this span class."],"package":"android.text.style","constants":["String ANIMACY_ANIMATE","String ANIMACY_INANIMATE","String ARG_ANIMACY String argument supplying animacy information.","String ARG_CASE String argument supplying case information.","String ARG_COUNTRY_CODE Argument used to specify the country code of a telephone number.","String ARG_CURRENCY Argument used to specify the currency.","String ARG_DAY Argument used to specify the day of the month of a date.","String ARG_DENOMINATOR Argument used to specify the denominator of a fraction.","String ARG_DIGITS Argument used to specify a string of digits.","String ARG_DOMAIN Argument used to specify the domain part of a URI.","String ARG_EXTENSION Argument used to specify the extension part of a telephone number.","String ARG_FRACTIONAL_PART Argument used to specify the fractional part of a decimal.","String ARG_FRAGMENT_ID Argument used to specify the fragment id of a URI.","String ARG_GENDER String argument supplying gender information.","String ARG_HOURS Argument used to specify the hours of a time.","String ARG_INTEGER_PART Argument used to specify the integer part of a decimal or fraction.","String ARG_MINUTES Argument used to specify the minutes of a time.","String ARG_MONTH Argument used to specify the month of a date.","String ARG_MULTIPLICITY String argument supplying multiplicity information.","String ARG_NUMBER Argument used to specify a whole number.","String ARG_NUMBER_PARTS Argument used to specify the main number part of a telephone number.","String ARG_NUMERATOR Argument used to specify the numerator of a fraction.","String ARG_PASSWORD Argument used to specify the password part of a URI.","String ARG_PATH Argument used to specify the path part of a URI.","String ARG_PORT Argument used to specify the port number of a URI.","String ARG_PROTOCOL Argument used to specify the protocol of a URI.","String ARG_QUANTITY Argument used to choose the suffix (thousand, million, etc) that is used to pronounce large amounts of money.","String ARG_QUERY_STRING Argument used to specify the query string of a URI.","String ARG_TEXT String supplying the text to be synthesized.","String ARG_UNIT Argument used to specify the unit of a measure.","String ARG_USERNAME Argument used to specify the username part of a URI.","String ARG_VERBATIM Argument used to specify a string where the characters are read verbatim, except whitespace.","String ARG_WEEKDAY Argument used to specify the weekday of a date.","String ARG_YEAR Argument used to specify the year of a date.","String CASE_ABLATIVE","String CASE_ACCUSATIVE","String CASE_DATIVE","String CASE_GENITIVE","String CASE_INSTRUMENTAL","String CASE_LOCATIVE","String CASE_NOMINATIVE","String CASE_VOCATIVE","String GENDER_FEMALE","String GENDER_MALE","String GENDER_NEUTRAL","int MONTH_APRIL","int MONTH_AUGUST","int MONTH_DECEMBER","int MONTH_FEBRUARY","int MONTH_JANUARY","int MONTH_JULY","int MONTH_JUNE","int MONTH_MARCH","int MONTH_MAY","int MONTH_NOVEMBER","int MONTH_OCTOBER","int MONTH_SEPTEMBER","String MULTIPLICITY_DUAL","String MULTIPLICITY_PLURAL","String MULTIPLICITY_SINGLE","String TYPE_CARDINAL The text associated with this span is a cardinal.","String TYPE_DATE The text associated with this span is a date.","String TYPE_DECIMAL The text associated with this span is a decimal number.","String TYPE_DIGITS The text associated with this span is a series of digits that have to be read sequentially.","String TYPE_ELECTRONIC The text associated with this span is a URI (can be used for URLs and email addresses).","String TYPE_FRACTION The text associated with this span is a fractional number.","String TYPE_MEASURE The text associated with this span is a measure, consisting of a number and a unit.","String TYPE_MONEY The text associated with this span is an amount of money.","String TYPE_ORDINAL The text associated with this span is an ordinal.","String TYPE_TELEPHONE The text associated with this span is a telephone number.","String TYPE_TEXT This span type can be used to add morphosyntactic features to the text it spans over, or synthesize a something else than the spanned text.","String TYPE_TIME The text associated with this span is a time, consisting of a number of hours and minutes, specified with ARG_HOURS and ARG_MINUTES.","String TYPE_VERBATIM The text associated with this span is a series of characters that have to be read verbatim.","int WEEKDAY_FRIDAY","int WEEKDAY_MONDAY","int WEEKDAY_SATURDAY","int WEEKDAY_SUNDAY","int WEEKDAY_THURSDAY","int WEEKDAY_TUESDAY","int WEEKDAY_WEDNESDAY","[Expand] Inherited Constants","From interface android.os.Parcelable int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled. int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\".","int CONTENTS_FILE_DESCRIPTOR Bit masks for use with describeContents(): each bit represents a kind of object considered to have potential special significance when marshalled.","int PARCELABLE_WRITE_RETURN_VALUE Flag for use with writeToParcel(Parcel, int): the object being written is a return value, that is the result of a function such as \"Parcelable someFunction()\", \"void someFunction(out Parcelable)\", or \"void someFunction(inout Parcelable)\"."],"class":"TtsSpan","constructors":[],"fields":[]}