{"methods":["abstract PendingResult<TurnBasedMultiplayer.InitiateMatchResult> acceptInvitation(GoogleApiClient apiClient, String invitationId) Accept an invitation for a turn-based match.","abstract PendingResult<TurnBasedMultiplayer.CancelMatchResult> cancelMatch(GoogleApiClient apiClient, String matchId) Cancels a turn-based match.","abstract PendingResult<TurnBasedMultiplayer.InitiateMatchResult> createMatch(GoogleApiClient apiClient, TurnBasedMatchConfig config) Create a new turn-based match for the current game.","abstract void declineInvitation(GoogleApiClient apiClient, String invitationId) Decline an invitation for a turn-based match.","abstract void dismissInvitation(GoogleApiClient apiClient, String invitationId) Dismiss an invitation to a turn-based match.","abstract void dismissMatch(GoogleApiClient apiClient, String matchId) Delete a match from the server and local storage.","abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> finishMatch(GoogleApiClient apiClient, String matchId, byte[] matchData, ParticipantResult... results) Mark a match as finished.","abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> finishMatch(GoogleApiClient apiClient, String matchId, byte[] matchData, List<ParticipantResult> results) Mark a match as finished.","abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> finishMatch(GoogleApiClient apiClient, String matchId) Indicate that a participant is finished with a match.","abstract Intent getInboxIntent(GoogleApiClient apiClient) Returns an intent that will let the user see and manage any outstanding invitations and matches.","abstract int getMaxMatchDataSize(GoogleApiClient apiClient) Gets the maximum data size per match in bytes.","abstract Intent getSelectOpponentsIntent(GoogleApiClient apiClient, int minPlayers, int maxPlayers, boolean allowAutomatch) Returns an intent that will let the user select opponents to send an invitation to for a turn based multiplayer match.","abstract Intent getSelectOpponentsIntent(GoogleApiClient apiClient, int minPlayers, int maxPlayers) Returns an intent that will let the user select opponents to send an invitation to for a turn based multiplayer match.","abstract PendingResult<TurnBasedMultiplayer.LeaveMatchResult> leaveMatch(GoogleApiClient apiClient, String matchId) Leave the specified match when it is not the current player's turn.","abstract PendingResult<TurnBasedMultiplayer.LeaveMatchResult> leaveMatchDuringTurn(GoogleApiClient apiClient, String matchId, String pendingParticipantId) Leave the specified match during the current player's turn.","abstract PendingResult<TurnBasedMultiplayer.LoadMatchResult> loadMatch(GoogleApiClient apiClient, String matchId) Load a specified turn-based match.","abstract PendingResult<TurnBasedMultiplayer.LoadMatchesResult> loadMatchesByStatus(GoogleApiClient apiClient, int invitationSortOrder, int[] matchTurnStatuses) Asynchronously load turn-based matches for the current game.","abstract PendingResult<TurnBasedMultiplayer.LoadMatchesResult> loadMatchesByStatus(GoogleApiClient apiClient, int[] matchTurnStatuses) Asynchronously load turn-based matches for the current game.","abstract void registerMatchUpdateListener(GoogleApiClient apiClient, OnTurnBasedMatchUpdateReceivedListener listener) Register a listener to intercept incoming match updates for the currently signed-in user.","abstract PendingResult<TurnBasedMultiplayer.InitiateMatchResult> rematch(GoogleApiClient apiClient, String matchId) Create a rematch of a previously completed turn-based match.","abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> takeTurn(GoogleApiClient apiClient, String matchId, byte[] matchData, String pendingParticipantId) Update a match with new turn data.","abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> takeTurn(GoogleApiClient apiClient, String matchId, byte[] matchData, String pendingParticipantId, List<ParticipantResult> results) Update a match with new turn data.","abstract PendingResult<TurnBasedMultiplayer.UpdateMatchResult> takeTurn(GoogleApiClient apiClient, String matchId, byte[] matchData, String pendingParticipantId, ParticipantResult... results) Update a match with new turn data.","abstract void unregisterMatchUpdateListener(GoogleApiClient apiClient) Unregisters this client's match update listener, if any."],"package":"com.google.android.gms.games.multiplayer.turnbased","constants":[],"class":"TurnBasedMultiplayer","constructors":[],"fields":[]}