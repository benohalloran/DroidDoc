{"methods":["boolean getBoolean(int index, boolean defValue) Retrieve the boolean value for the attribute at index.","int getChangingConfigurations() Return a mask of the configuration parameters for which the values in this typed array may change.","int getColor(int index, int defValue) Retrieve the color value for the attribute at index.","ColorStateList getColorStateList(int index) Retrieve the ColorStateList for the attribute at index.","float getDimension(int index, float defValue) Retrieve a dimensional unit attribute at index.","int getDimensionPixelOffset(int index, int defValue) Retrieve a dimensional unit attribute at index for use as an offset in raw pixels.","int getDimensionPixelSize(int index, int defValue) Retrieve a dimensional unit attribute at index for use as a size in raw pixels.","Drawable getDrawable(int index) Retrieve the Drawable for the attribute at index.","float getFloat(int index, float defValue) Retrieve the float value for the attribute at index.","float getFraction(int index, int base, int pbase, float defValue) Retrieve a fractional unit attribute at index.","int getIndex(int at) Return an index in the array that has data.","int getIndexCount() Return the number of indices in the array that actually have data.","int getInt(int index, int defValue) Retrieve the integer value for the attribute at index.","int getInteger(int index, int defValue) Retrieve the integer value for the attribute at index.","int getLayoutDimension(int index, String name) Special version of getDimensionPixelSize(int, int) for retrieving ViewGroup's layout_width and layout_height attributes.","int getLayoutDimension(int index, int defValue) Special version of getDimensionPixelSize(int, int) for retrieving ViewGroup's layout_width and layout_height attributes.","String getNonResourceString(int index) Retrieve the string value for the attribute at index, but only if that string comes from an immediate value in an XML file.","String getPositionDescription() Returns a message about the parser state suitable for printing error messages.","int getResourceId(int index, int defValue) Retrieve the resource identifier for the attribute at index.","Resources getResources() Return the Resources object this array was loaded from.","String getString(int index) Retrieve the string value for the attribute at index.","CharSequence getText(int index) Retrieve the styled string value for the attribute at index.","CharSequence[] getTextArray(int index) Retrieve the CharSequence[] for the attribute at index.","int getType(int index) Returns the type of attribute at the specified index.","boolean getValue(int index, TypedValue outValue) Retrieve the raw TypedValue for the attribute at index.","boolean hasValue(int index) Determines whether there is an attribute at index.","int length() Return the number of values in this array.","TypedValue peekValue(int index) Retrieve the raw TypedValue for the attribute at index and return a temporary object holding its data.","void recycle() Recycle the TypedArray, to be re-used by a later caller.","String toString() Returns a string containing a concise, human-readable description of this object.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.content.res","constants":[],"class":"TypedArray","constructors":[],"fields":[]}