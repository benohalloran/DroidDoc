{"methods":["[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.hardware.usb","constants":["int USB_CLASS_APP_SPEC Application specific USB class.","int USB_CLASS_AUDIO USB class for audio devices.","int USB_CLASS_CDC_DATA USB class for CDC devices (communications device class).","int USB_CLASS_COMM USB class for communication devices.","int USB_CLASS_CONTENT_SEC USB class for content security devices.","int USB_CLASS_CSCID USB class for content smart card devices.","int USB_CLASS_HID USB class for human interface devices (for example, mice and keyboards).","int USB_CLASS_HUB USB class for USB hubs.","int USB_CLASS_MASS_STORAGE USB class for mass storage devices.","int USB_CLASS_MISC USB class for wireless miscellaneous devices.","int USB_CLASS_PER_INTERFACE USB class indicating that the class is determined on a per-interface basis.","int USB_CLASS_PHYSICA USB class for physical devices.","int USB_CLASS_PRINTER USB class for printers.","int USB_CLASS_STILL_IMAGE USB class for still image devices (digital cameras).","int USB_CLASS_VENDOR_SPEC Vendor specific USB class.","int USB_CLASS_VIDEO USB class for video devices.","int USB_CLASS_WIRELESS_CONTROLLER USB class for wireless controller devices.","int USB_DIR_IN Used to signify direction of data for a UsbEndpoint is IN (device to host)","int USB_DIR_OUT Used to signify direction of data for a UsbEndpoint is OUT (host to device)","int USB_ENDPOINT_DIR_MASK Bitmask used for extracting the UsbEndpoint direction from its address field.","int USB_ENDPOINT_NUMBER_MASK Bitmask used for extracting the UsbEndpoint number its address field.","int USB_ENDPOINT_XFERTYPE_MASK Bitmask used for extracting the UsbEndpoint type from its address field.","int USB_ENDPOINT_XFER_BULK Bulk endpoint type","int USB_ENDPOINT_XFER_CONTROL Control endpoint type (endpoint zero)","int USB_ENDPOINT_XFER_INT Interrupt endpoint type","int USB_ENDPOINT_XFER_ISOC Isochronous endpoint type (currently not supported)","int USB_INTERFACE_SUBCLASS_BOOT Boot subclass for HID devices.","int USB_SUBCLASS_VENDOR_SPEC Vendor specific USB subclass.","int USB_TYPE_CLASS Used to specify that an endpoint zero control request is a class specific request.","int USB_TYPE_MASK Bitmask used for encoding the request type for a control request on endpoint zero.","int USB_TYPE_RESERVED Reserved endpoint zero control request type (currently unused).","int USB_TYPE_STANDARD Used to specify that an endpoint zero control request is a standard request.","int USB_TYPE_VENDOR Used to specify that an endpoint zero control request is a vendor specific request."],"class":"UsbConstants","constructors":[],"fields":[]}