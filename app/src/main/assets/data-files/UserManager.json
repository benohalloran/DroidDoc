{"methods":["Bundle getApplicationRestrictions(String packageName) Returns a Bundle containing any saved application restrictions for this user, for the given package name.","long getSerialNumberForUser(UserHandle user) Return the serial number for a user.","int getUserCount() Return the number of users currently created on the device.","UserHandle getUserForSerialNumber(long serialNumber) Return the user associated with a serial number previously returned by getSerialNumberForUser(UserHandle).","String getUserName() Returns the user name of the user making this call.","List<UserHandle> getUserProfiles() Returns a list of UserHandles for profiles associated with the user that the calling process is running on, including the user itself.","Bundle getUserRestrictions() Returns the user-wide restrictions imposed on this user.","Bundle getUserRestrictions(UserHandle userHandle) Returns the user-wide restrictions imposed on the user specified by userHandle.","boolean hasUserRestriction(String restrictionKey) Returns whether the current user has been disallowed from performing certain actions or setting certain settings.","boolean isUserAGoat() Used to determine whether the user making this call is subject to teleportations.","boolean isUserRunning(UserHandle user) Return whether the given user is actively running.","boolean isUserRunningOrStopping(UserHandle user) Return whether the given user is actively running or stopping.","boolean setRestrictionsChallenge(String newPin) Sets a new challenge PIN for restrictions.","void setUserRestriction(String key, boolean value) This method was deprecated in API level 21. use addUserRestriction(android.content.ComponentName, String) or clearUserRestriction(android.content.ComponentName, String) instead.","void setUserRestrictions(Bundle restrictions) This method was deprecated in API level 21. use addUserRestriction(android.content.ComponentName, String) or clearUserRestriction(android.content.ComponentName, String) instead.","void setUserRestrictions(Bundle restrictions, UserHandle userHandle) This method was deprecated in API level 21. use addUserRestriction(android.content.ComponentName, String) or clearUserRestriction(android.content.ComponentName, String) instead.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.os","constants":["String DISALLOW_ADD_USER Specifies if a user is disallowed from adding new users and profiles.","String DISALLOW_ADJUST_VOLUME Specifies if a user is disallowed from adjusting the master volume.","String DISALLOW_APPS_CONTROL Specifies if a user is disallowed from modifying applications in Settings or launchers.","String DISALLOW_CONFIG_BLUETOOTH Specifies if a user is disallowed from configuring bluetooth.","String DISALLOW_CONFIG_CELL_BROADCASTS Specifies if a user is disallowed from configuring cell broadcasts.","String DISALLOW_CONFIG_CREDENTIALS Specifies if a user is disallowed from configuring user credentials.","String DISALLOW_CONFIG_MOBILE_NETWORKS Specifies if a user is disallowed from configuring mobile networks.","String DISALLOW_CONFIG_TETHERING Specifies if a user is disallowed from configuring Tethering & portable hotspots.","String DISALLOW_CONFIG_VPN Specifies if a user is disallowed from configuring VPN.","String DISALLOW_CONFIG_WIFI Specifies if a user is disallowed from changing Wi-Fi access points.","String DISALLOW_CREATE_WINDOWS Specifies that windows besides app windows should not be created.","String DISALLOW_CROSS_PROFILE_COPY_PASTE Specifies if what is copied in the clipboard of this profile can be pasted in related profiles.","String DISALLOW_DEBUGGING_FEATURES Specifies if a user is disallowed from enabling or accessing debugging features.","String DISALLOW_FACTORY_RESET Specifies if a user is disallowed from factory resetting from Settings.","String DISALLOW_INSTALL_APPS Specifies if a user is disallowed from installing applications.","String DISALLOW_INSTALL_UNKNOWN_SOURCES Specifies if a user is disallowed from enabling the \"Unknown Sources\" setting, that allows installation of apps from unknown sources.","String DISALLOW_MODIFY_ACCOUNTS Specifies if a user is disallowed from adding and removing accounts.","String DISALLOW_MOUNT_PHYSICAL_MEDIA Specifies if a user is disallowed from mounting physical external media.","String DISALLOW_OUTGOING_CALLS Specifies that the user is not allowed to make outgoing phone calls.","String DISALLOW_REMOVE_USER Specifies if a user is disallowed from removing itself and other users.","String DISALLOW_SHARE_LOCATION Specifies if a user is disallowed from toggling location sharing.","String DISALLOW_SMS Specifies that the user is not allowed to send or receive SMS messages.","String DISALLOW_UNINSTALL_APPS Specifies if a user is disallowed from uninstalling applications.","String DISALLOW_UNMUTE_MICROPHONE Specifies if a user is disallowed from adjusting microphone volume.","String DISALLOW_USB_FILE_TRANSFER Specifies if a user is disallowed from transferring files over USB.","String ENSURE_VERIFY_APPS Specifies if a user is disallowed from disabling application verification."],"class":"UserManager","constructors":[],"fields":[]}