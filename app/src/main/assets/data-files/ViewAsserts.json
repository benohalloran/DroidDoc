{"methods":["static void assertBaselineAligned(View first, View second) Assert that two views are aligned on their baseline, that is that their baselines are on the same y location.","static void assertBottomAligned(View first, View second) Assert that two views are bottom aligned, that is that their bottom edges are on the same y location.","static void assertBottomAligned(View first, View second, int margin) Assert that two views are bottom aligned, that is that their bottom edges are on the same y location, with respect to the specified margin.","static void assertGroupContains(ViewGroup parent, View child) Assert that the specified group contains a specific child once and only once.","static void assertGroupIntegrity(ViewGroup parent) Assert the specified group's integrity.","static void assertGroupNotContains(ViewGroup parent, View child) Assert that the specified group does not contain a specific child.","static void assertHasScreenCoordinates(View origin, View view, int x, int y) Assert that a view has a particular x and y position on the visible screen.","static void assertHorizontalCenterAligned(View reference, View test) Assert that the test view is horizontally center aligned with respect to the reference view.","static void assertLeftAligned(View first, View second) Assert that two views are left aligned, that is that their left edges are on the same x location.","static void assertLeftAligned(View first, View second, int margin) Assert that two views are left aligned, that is that their left edges are on the same x location, with respect to the specified margin.","static void assertOffScreenAbove(View origin, View view) Assert that view is above the visible screen.","static void assertOffScreenBelow(View origin, View view) Assert that view is below the visible screen.","static void assertOnScreen(View origin, View view) Assert that view is on the screen.","static void assertRightAligned(View first, View second) Assert that two views are right aligned, that is that their right edges are on the same x location.","static void assertRightAligned(View first, View second, int margin) Assert that two views are right aligned, that is that their right edges are on the same x location, with respect to the specified margin.","static void assertTopAligned(View first, View second) Assert that two views are top aligned, that is that their top edges are on the same y location.","static void assertTopAligned(View first, View second, int margin) Assert that two views are top aligned, that is that their top edges are on the same y location, with respect to the specified margin.","static void assertVerticalCenterAligned(View reference, View test) Assert that the test view is vertically center aligned with respect to the reference view.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.test","constants":[],"class":"ViewAsserts","constructors":[],"fields":[]}