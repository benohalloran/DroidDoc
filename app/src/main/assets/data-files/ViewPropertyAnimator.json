{"methods":["ViewPropertyAnimator alpha(float value) This method will cause the View's alpha property to be animated to the specified value.","ViewPropertyAnimator alphaBy(float value) This method will cause the View's alpha property to be animated by the specified value.","void cancel() Cancels all property animations that are currently running or pending.","long getDuration() Returns the current duration of property animations.","TimeInterpolator getInterpolator() Returns the timing interpolator that this animation uses.","long getStartDelay() Returns the current startDelay of property animations.","ViewPropertyAnimator rotation(float value) This method will cause the View's rotation property to be animated to the specified value.","ViewPropertyAnimator rotationBy(float value) This method will cause the View's rotation property to be animated by the specified value.","ViewPropertyAnimator rotationX(float value) This method will cause the View's rotationX property to be animated to the specified value.","ViewPropertyAnimator rotationXBy(float value) This method will cause the View's rotationX property to be animated by the specified value.","ViewPropertyAnimator rotationY(float value) This method will cause the View's rotationY property to be animated to the specified value.","ViewPropertyAnimator rotationYBy(float value) This method will cause the View's rotationY property to be animated by the specified value.","ViewPropertyAnimator scaleX(float value) This method will cause the View's scaleX property to be animated to the specified value.","ViewPropertyAnimator scaleXBy(float value) This method will cause the View's scaleX property to be animated by the specified value.","ViewPropertyAnimator scaleY(float value) This method will cause the View's scaleY property to be animated to the specified value.","ViewPropertyAnimator scaleYBy(float value) This method will cause the View's scaleY property to be animated by the specified value.","ViewPropertyAnimator setDuration(long duration) Sets the duration for the underlying animator that animates the requested properties.","ViewPropertyAnimator setInterpolator(TimeInterpolator interpolator) Sets the interpolator for the underlying animator that animates the requested properties.","ViewPropertyAnimator setListener(Animator.AnimatorListener listener) Sets a listener for events in the underlying Animators that run the property animations.","ViewPropertyAnimator setStartDelay(long startDelay) Sets the startDelay for the underlying animator that animates the requested properties.","ViewPropertyAnimator setUpdateListener(ValueAnimator.AnimatorUpdateListener listener) Sets a listener for update events in the underlying ValueAnimator that runs the property animations.","void start() Starts the currently pending property animations immediately.","ViewPropertyAnimator translationX(float value) This method will cause the View's translationX property to be animated to the specified value.","ViewPropertyAnimator translationXBy(float value) This method will cause the View's translationX property to be animated by the specified value.","ViewPropertyAnimator translationY(float value) This method will cause the View's translationY property to be animated to the specified value.","ViewPropertyAnimator translationYBy(float value) This method will cause the View's translationY property to be animated by the specified value.","ViewPropertyAnimator translationZ(float value) This method will cause the View's translationZ property to be animated to the specified value.","ViewPropertyAnimator translationZBy(float value) This method will cause the View's translationZ property to be animated by the specified value.","ViewPropertyAnimator withEndAction(Runnable runnable) Specifies an action to take place when the next animation ends.","ViewPropertyAnimator withLayer() The View associated with this ViewPropertyAnimator will have its layer type set to LAYER_TYPE_HARDWARE for the duration of the next animation.","ViewPropertyAnimator withStartAction(Runnable runnable) Specifies an action to take place when the next animation runs.","ViewPropertyAnimator x(float value) This method will cause the View's x property to be animated to the specified value.","ViewPropertyAnimator xBy(float value) This method will cause the View's x property to be animated by the specified value.","ViewPropertyAnimator y(float value) This method will cause the View's y property to be animated to the specified value.","ViewPropertyAnimator yBy(float value) This method will cause the View's y property to be animated by the specified value.","ViewPropertyAnimator z(float value) This method will cause the View's z property to be animated to the specified value.","ViewPropertyAnimator zBy(float value) This method will cause the View's z property to be animated by the specified value.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.view","constants":[],"class":"ViewPropertyAnimator","constructors":[],"fields":[]}