{"methods":["void clear() Remove any currently set wallpaper, reverting to the system's built-in wallpaper.","void clearWallpaperOffsets(IBinder windowToken) Clear the offsets previously associated with this window through setWallpaperOffsets(IBinder, float, float).","void forgetLoadedWallpaper() Remove all internal references to the last loaded wallpaper.","Drawable getBuiltInDrawable() Returns a drawable for the system built-in static wallpaper .","Drawable getBuiltInDrawable(int outWidth, int outHeight, boolean scaleToFit, float horizontalAlignment, float verticalAlignment) Returns a drawable for the system built-in static wallpaper.","Intent getCropAndSetWallpaperIntent(Uri imageUri) Gets an Intent that will launch an activity that crops the given image and sets the device's wallpaper.","int getDesiredMinimumHeight() Returns the desired minimum height for the wallpaper.","int getDesiredMinimumWidth() Returns the desired minimum width for the wallpaper.","Drawable getDrawable() Retrieve the current system wallpaper; if no wallpaper is set, the system built-in static wallpaper is returned.","Drawable getFastDrawable() Like getDrawable(), but the returned Drawable has a number of limitations to reduce its overhead as much as possible.","static WallpaperManager getInstance(Context context) Retrieve a WallpaperManager associated with the given Context.","WallpaperInfo getWallpaperInfo() If the current wallpaper is a live wallpaper component, return the information about that wallpaper.","boolean hasResourceWallpaper(int resid) Return whether any users are currently set to use the wallpaper with the given resource ID.","Drawable peekDrawable() Retrieve the current system wallpaper; if there is no wallpaper set, a null pointer is returned.","Drawable peekFastDrawable() Like getFastDrawable(), but if there is no wallpaper set, a null pointer is returned.","void sendWallpaperCommand(IBinder windowToken, String action, int x, int y, int z, Bundle extras) Send an arbitrary command to the current active wallpaper.","void setBitmap(Bitmap bitmap) Change the current system wallpaper to a bitmap.","void setResource(int resid) Change the current system wallpaper to the bitmap in the given resource.","void setStream(InputStream data) Change the current system wallpaper to a specific byte stream.","void setWallpaperOffsetSteps(float xStep, float yStep) For applications that use multiple virtual screens showing a wallpaper, specify the step size between virtual screens.","void setWallpaperOffsets(IBinder windowToken, float xOffset, float yOffset) Set the position of the current wallpaper within any larger space, when that wallpaper is visible behind the given window.","void suggestDesiredDimensions(int minimumWidth, int minimumHeight) For use only by the current home application, to specify the size of wallpaper it would like to use.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.app","constants":["String ACTION_CHANGE_LIVE_WALLPAPER Directly launch live wallpaper preview, allowing the user to immediately confirm to switch to a specific live wallpaper.","String ACTION_CROP_AND_SET_WALLPAPER Activity Action: Show settings for choosing wallpaper.","String ACTION_LIVE_WALLPAPER_CHOOSER Launch an activity for the user to pick the current global live wallpaper.","String COMMAND_DROP Command for sendWallpaperCommand(IBinder, String, int, int, int, Bundle): reported by the wallpaper host when the user drops an object into an area of the host.","String COMMAND_SECONDARY_TAP Command for sendWallpaperCommand(IBinder, String, int, int, int, Bundle): reported by the wallpaper host when the user releases a secondary pointer on an empty area (not performing an action in the host).","String COMMAND_TAP Command for sendWallpaperCommand(IBinder, String, int, int, int, Bundle): reported by the wallpaper host when the user taps on an empty area (not performing an action in the host).","String EXTRA_LIVE_WALLPAPER_COMPONENT Extra in ACTION_CHANGE_LIVE_WALLPAPER that specifies the ComponentName of a live wallpaper that should be shown as a preview, for the user to confirm.","String WALLPAPER_PREVIEW_META_DATA Manifest entry for activities that respond to ACTION_SET_WALLPAPER which allows them to provide a custom large icon associated with this action."],"class":"WallpaperManager","constructors":[],"fields":[]}