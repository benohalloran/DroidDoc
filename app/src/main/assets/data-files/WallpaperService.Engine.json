{"methods":["int getDesiredMinimumHeight() Convenience for WallpaperManager.getDesiredMinimumHeight(), returning the height that the system would like this wallpaper to run in.","int getDesiredMinimumWidth() Convenience for WallpaperManager.getDesiredMinimumWidth(), returning the width that the system would like this wallpaper to run in.","SurfaceHolder getSurfaceHolder() Provides access to the surface in which this wallpaper is drawn.","boolean isPreview() Returns true if this engine is running in preview mode -- that is, it is being shown to the user before they select it as the actual wallpaper.","boolean isVisible() Return whether the wallpaper is currently visible to the user, this is the last value supplied to onVisibilityChanged(boolean).","void onApplyWindowInsets(WindowInsets insets) Called with the current insets that are in effect for the wallpaper.","Bundle onCommand(String action, int x, int y, int z, Bundle extras, boolean resultRequested) Process a command that was sent to the wallpaper with sendWallpaperCommand(IBinder, String, int, int, int, Bundle).","void onCreate(SurfaceHolder surfaceHolder) Called once to initialize the engine.","void onDesiredSizeChanged(int desiredWidth, int desiredHeight) Called when an application has changed the desired virtual size of the wallpaper.","void onDestroy() Called right before the engine is going away.","void onOffsetsChanged(float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset, int yPixelOffset) Called to inform you of the wallpaper's offsets changing within its contain, corresponding to the container's call to WallpaperManager.setWallpaperOffsets().","void onSurfaceChanged(SurfaceHolder holder, int format, int width, int height) Convenience for SurfaceHolder.Callback.surfaceChanged().","void onSurfaceCreated(SurfaceHolder holder) Convenience for SurfaceHolder.Callback.surfaceCreated().","void onSurfaceDestroyed(SurfaceHolder holder) Convenience for SurfaceHolder.Callback.surfaceDestroyed().","void onSurfaceRedrawNeeded(SurfaceHolder holder) Convenience for SurfaceHolder.Callback.surfaceRedrawNeeded().","void onTouchEvent(MotionEvent event) Called as the user performs touch-screen interaction with the window that is currently showing this wallpaper.","void onVisibilityChanged(boolean visible) Called to inform you of the wallpaper becoming visible or hidden.","void setOffsetNotificationsEnabled(boolean enabled) Control whether this wallpaper will receive notifications when the wallpaper has been scrolled.","void setTouchEventsEnabled(boolean enabled) Control whether this wallpaper will receive raw touch events from the window manager as the user interacts with the window that is currently displaying the wallpaper.","void dump(String prefix, FileDescriptor fd, PrintWriter out, String[] args)","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.service.wallpaper","constants":[],"class":"WallpaperService.Engine","constructors":[],"fields":[]}