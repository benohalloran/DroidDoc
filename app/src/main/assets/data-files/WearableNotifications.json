{"methods":["static WearableNotifications.Action getAction(Notification notif, int actionIndex) Get a WearableNotifications.Action wrapper for the notification at actionIndex in the actions array.","static int getActionCount(Notification notif) Get the number of actions present on this notification.","static int getBigActionIcon(Notification notif) Get the big action icon to be displayed with this notification.","static CharSequence getBigActionSubtext(Notification notif) Get the big action icon subtext to be shown with a big action icon.","static RemoteInput[] getContentIntentRemoteInputs(Notification notif) Gets the RemoteInput objects associated with the content intent.","static Bundle getExtras(Notification notif) Gets the extras field from a notification in a backward-compatible manner.","static String getGroupKey(Notification notif) Get the key used to group this notification into a cluster or stack with other notifications.","static int getGroupOrder(Notification notif) Get the sort order of this notification within a group of notifications with the same group key set.","static boolean getHintHideIcon(Notification notif) Get a hint that this notification's icon should not be displayed.","static boolean getLocalOnly(Notification notif) Get whether or not this notification is only relevant to the current device.","static Notification[] getPages(Notification notif) Get the array of additional pages of content for displaying this notification.","static void setBigActionIcon(Notification notif, int icon) Add a big action display to this notification.","static void setBigActionIcon(Notification notif, int icon, CharSequence subtext) Add a big action display to this notification.","static void setContentIntentRemoteInputs(Notification notif, RemoteInput[] inputs) Sets RemoteInputs to be collected when the user triggers the contentIntent.","static void setGroup(Notification notif, String groupKey) Set this notification to be part of a group of notifications sharing the same key.","static void setGroup(Notification notif, String groupKey, int groupOrder) Set this notification to be part of a group of notifications sharing the same key.","static void setHintHideIcon(Notification notif, boolean hintHideIcon) Set a hint that this notification's icon should not be displayed.","static void setLocalOnly(Notification notif, boolean localOnly) Set whether or not this notification is only relevant to the current device.","static void setMinPriority(Notification notif) Set the priority of this notification to be minimum priority level (PRIORITY_MIN).","static void setPages(Notification notif, Notification[] pages) Set additional pages of content to display with this notification.","[Expand] Inherited Methods","From class java.lang.Object Object clone() boolean equals(Object arg0) void finalize() final Class<?> getClass() int hashCode() final void notify() final void notifyAll() String toString() final void wait() final void wait(long arg0, int arg1) final void wait(long arg0)","Object clone()","boolean equals(Object arg0)","void finalize()","final Class<?> getClass()","int hashCode()","final void notify()","final void notifyAll()","String toString()","final void wait()","final void wait(long arg0, int arg1)","final void wait(long arg0)"],"package":"android.preview.support.wearable.notifications","constants":["int GROUP_ORDER_DEFAULT Default value for the group sort order.","int GROUP_ORDER_SUMMARY Sentinel value provided to the groupOrder parameter of the setGroup(android.app.Notification, java.lang.String, int) method."],"class":"WearableNotifications","constructors":[],"fields":[]}