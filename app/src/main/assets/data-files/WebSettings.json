{"methods":["boolean enableSmoothTransition() This method was deprecated in API level 17. This method is now obsolete, and will become a no-op in future.","boolean getAllowContentAccess() Gets whether this WebView supports content URL access.","boolean getAllowFileAccess() Gets whether this WebView supports file access.","abstract boolean getAllowFileAccessFromFileURLs() Gets whether JavaScript running in the context of a file scheme URL can access content from other file scheme URLs.","abstract boolean getAllowUniversalAccessFromFileURLs() Gets whether JavaScript running in the context of a file scheme URL can access content from any origin.","synchronized boolean getBlockNetworkImage() Gets whether the WebView does not load image resources from the network.","synchronized boolean getBlockNetworkLoads() Gets whether the WebView does not load any resources from the network.","boolean getBuiltInZoomControls() Gets whether the zoom mechanisms built into WebView are being used.","int getCacheMode() Gets the current setting for overriding the cache mode.","synchronized String getCursiveFontFamily() Gets the cursive font family name.","synchronized boolean getDatabaseEnabled() Gets whether the database storage API is enabled.","synchronized String getDatabasePath() This method was deprecated in API level 19. Database paths are managed by the implementation this method is obsolete.","synchronized int getDefaultFixedFontSize() Gets the default fixed font size.","synchronized int getDefaultFontSize() Gets the default font size.","synchronized String getDefaultTextEncodingName() Gets the default text encoding name.","static String getDefaultUserAgent(Context context) Returns the default User-Agent used by a WebView.","WebSettings.ZoomDensity getDefaultZoom() This method was deprecated in API level 19. Will only return the default value.","boolean getDisplayZoomControls() Gets whether the WebView displays on-screen zoom controls when using the built-in zoom mechanisms.","synchronized boolean getDomStorageEnabled() Gets whether the DOM Storage APIs are enabled.","synchronized String getFantasyFontFamily() Gets the fantasy font family name.","synchronized String getFixedFontFamily() Gets the fixed font family name.","synchronized boolean getJavaScriptCanOpenWindowsAutomatically() Gets whether JavaScript can open windows automatically.","synchronized boolean getJavaScriptEnabled() Gets whether JavaScript is enabled.","synchronized WebSettings.LayoutAlgorithm getLayoutAlgorithm() Gets the current layout algorithm.","boolean getLightTouchEnabled() This method was deprecated in API level 18. This setting is obsolete.","boolean getLoadWithOverviewMode() Gets whether this WebView loads pages in overview mode.","synchronized boolean getLoadsImagesAutomatically() Gets whether the WebView loads image resources.","boolean getMediaPlaybackRequiresUserGesture() Gets whether the WebView requires a user gesture to play media.","synchronized int getMinimumFontSize() Gets the minimum font size.","synchronized int getMinimumLogicalFontSize() Gets the minimum logical font size.","abstract int getMixedContentMode() Gets the current behavior of the WebView with regard to loading insecure content from a secure origin.","synchronized WebSettings.PluginState getPluginState() This method was deprecated in API level 18. Plugins will not be supported in future, and should not be used.","synchronized String getSansSerifFontFamily() Gets the sans-serif font family name.","boolean getSaveFormData() Gets whether the WebView saves form data.","boolean getSavePassword() This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions.","synchronized String getSerifFontFamily() Gets the serif font family name.","synchronized String getStandardFontFamily() Gets the standard font family name.","synchronized WebSettings.TextSize getTextSize() This method was deprecated in API level 14. Use getTextZoom() instead.","synchronized int getTextZoom() Gets the text zoom of the page in percent.","synchronized boolean getUseWideViewPort() Gets whether the WebView supports the \"viewport\" HTML meta tag or will use a wide viewport.","synchronized String getUserAgentString() Gets the WebView's user-agent string.","void setAllowContentAccess(boolean allow) Enables or disables content URL access within WebView.","void setAllowFileAccess(boolean allow) Enables or disables file access within WebView.","abstract void setAllowFileAccessFromFileURLs(boolean flag) Sets whether JavaScript running in the context of a file scheme URL should be allowed to access content from other file scheme URLs.","abstract void setAllowUniversalAccessFromFileURLs(boolean flag) Sets whether JavaScript running in the context of a file scheme URL should be allowed to access content from any origin.","synchronized void setAppCacheEnabled(boolean flag) Sets whether the Application Caches API should be enabled.","synchronized void setAppCacheMaxSize(long appCacheMaxSize) This method was deprecated in API level 18. In future quota will be managed automatically.","synchronized void setAppCachePath(String appCachePath) Sets the path to the Application Caches files.","synchronized void setBlockNetworkImage(boolean flag) Sets whether the WebView should not load image resources from the network (resources accessed via http and https URI schemes).","synchronized void setBlockNetworkLoads(boolean flag) Sets whether the WebView should not load resources from the network.","void setBuiltInZoomControls(boolean enabled) Sets whether the WebView should use its built-in zoom mechanisms.","void setCacheMode(int mode) Overrides the way the cache is used.","synchronized void setCursiveFontFamily(String font) Sets the cursive font family name.","synchronized void setDatabaseEnabled(boolean flag) Sets whether the database storage API is enabled.","synchronized void setDatabasePath(String databasePath) This method was deprecated in API level 19. Database paths are managed by the implementation and calling this method will have no effect.","synchronized void setDefaultFixedFontSize(int size) Sets the default fixed font size.","synchronized void setDefaultFontSize(int size) Sets the default font size.","synchronized void setDefaultTextEncodingName(String encoding) Sets the default text encoding name to use when decoding html pages.","void setDefaultZoom(WebSettings.ZoomDensity zoom) This method was deprecated in API level 19. This method is no longer supported, see the function documentation for recommended alternatives.","void setDisplayZoomControls(boolean enabled) Sets whether the WebView should display on-screen zoom controls when using the built-in zoom mechanisms.","synchronized void setDomStorageEnabled(boolean flag) Sets whether the DOM storage API is enabled.","void setEnableSmoothTransition(boolean enable) This method was deprecated in API level 17. This method is now obsolete, and will become a no-op in future.","synchronized void setFantasyFontFamily(String font) Sets the fantasy font family name.","synchronized void setFixedFontFamily(String font) Sets the fixed font family name.","synchronized void setGeolocationDatabasePath(String databasePath) Sets the path where the Geolocation databases should be saved.","synchronized void setGeolocationEnabled(boolean flag) Sets whether Geolocation is enabled.","synchronized void setJavaScriptCanOpenWindowsAutomatically(boolean flag) Tells JavaScript to open windows automatically.","synchronized void setJavaScriptEnabled(boolean flag) Tells the WebView to enable JavaScript execution.","synchronized void setLayoutAlgorithm(WebSettings.LayoutAlgorithm l) Sets the underlying layout algorithm.","void setLightTouchEnabled(boolean enabled) This method was deprecated in API level 18. From JELLY_BEAN this setting is obsolete and has no effect.","void setLoadWithOverviewMode(boolean overview) Sets whether the WebView loads pages in overview mode, that is, zooms out the content to fit on screen by width.","synchronized void setLoadsImagesAutomatically(boolean flag) Sets whether the WebView should load image resources.","void setMediaPlaybackRequiresUserGesture(boolean require) Sets whether the WebView requires a user gesture to play media.","synchronized void setMinimumFontSize(int size) Sets the minimum font size.","synchronized void setMinimumLogicalFontSize(int size) Sets the minimum logical font size.","abstract void setMixedContentMode(int mode) Configures the WebView's behavior when a secure origin attempts to load a resource from an insecure origin.","void setNeedInitialFocus(boolean flag) Tells the WebView whether it needs to set a node to have focus when requestFocus(int, android.graphics.Rect) is called.","synchronized void setPluginState(WebSettings.PluginState state) This method was deprecated in API level 18. Plugins will not be supported in future, and should not be used.","synchronized void setRenderPriority(WebSettings.RenderPriority priority) This method was deprecated in API level 18. It is not recommended to adjust thread priorities, and this will not be supported in future versions.","synchronized void setSansSerifFontFamily(String font) Sets the sans-serif font family name.","void setSaveFormData(boolean save) Sets whether the WebView should save form data.","void setSavePassword(boolean save) This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions.","synchronized void setSerifFontFamily(String font) Sets the serif font family name.","synchronized void setStandardFontFamily(String font) Sets the standard font family name.","synchronized void setSupportMultipleWindows(boolean support) Sets whether the WebView whether supports multiple windows.","void setSupportZoom(boolean support) Sets whether the WebView should support zooming using its on-screen zoom controls and gestures.","synchronized void setTextSize(WebSettings.TextSize t) This method was deprecated in API level 14. Use setTextZoom(int) instead.","synchronized void setTextZoom(int textZoom) Sets the text zoom of the page in percent.","synchronized void setUseWideViewPort(boolean use) Sets whether the WebView should enable support for the \"viewport\" HTML meta tag or should use a wide viewport.","synchronized void setUserAgentString(String ua) Sets the WebView's user-agent string.","synchronized boolean supportMultipleWindows() Gets whether the WebView supports multiple windows.","boolean supportZoom() Gets whether the WebView supports zoom.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"android.webkit","constants":["int LOAD_CACHE_ELSE_NETWORK Use cached resources when they are available, even if they have expired.","int LOAD_CACHE_ONLY Don't use the network, load from the cache.","int LOAD_DEFAULT Default cache usage mode.","int LOAD_NORMAL This constant was deprecated in API level 17. This value is obsolete, as from API level HONEYCOMB and onwards it has the same effect as LOAD_DEFAULT.","int LOAD_NO_CACHE Don't use the cache, load from the network.","int MIXED_CONTENT_ALWAYS_ALLOW Used with setMixedContentMode(int) In this mode, the WebView will allow a secure origin to load content from any other origin, even if that origin is insecure.","int MIXED_CONTENT_COMPATIBILITY_MODE Used with setMixedContentMode(int) In this mode, the WebView will attempt to be compatible with the approach of a modern web browser with regard to mixed content.","int MIXED_CONTENT_NEVER_ALLOW Used with setMixedContentMode(int) In this mode, the WebView will not allow a secure origin to load content from an insecure origin."],"class":"WebSettings","constructors":[],"fields":[]}