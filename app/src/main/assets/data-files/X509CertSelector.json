{"methods":["void addPathToName(int type, byte[] name) Adds a \"pathToName\" to the respective criterion.","void addPathToName(int type, String name) Adds a \"pathToName\" to the respective criterion.","void addSubjectAlternativeName(int tag, String name) Adds a subject alternative name to the respective criterion.","void addSubjectAlternativeName(int tag, byte[] name) Adds a subject alternative name to the respective criterion.","Object clone() Clones this X509CertSelector instance.","byte[] getAuthorityKeyIdentifier() Returns the criterion for the AuthorityKeyIdentifier extension.","int getBasicConstraints() Returns the criterion for the basic constraints extension.","X509Certificate getCertificate() Returns the certificate that a matching certificate must be equal to.","Date getCertificateValid() Returns the criterion for the validity date of the certificate.","Set<String> getExtendedKeyUsage() Returns the criterion for the ExtendedKeyUsage extension.","X500Principal getIssuer() Returns the issuer that a certificate must match.","byte[] getIssuerAsBytes() Returns the issuer that a certificate must match.","String getIssuerAsString() Do not use, use getIssuer() or getIssuerAsBytes() instead.","boolean[] getKeyUsage() Returns the criterion for the KeyUsage extension.","boolean getMatchAllSubjectAltNames() Returns the flag for the matching behavior for subject alternative names.","byte[] getNameConstraints() Returns the criterion for the name constraints.","Collection<List<?>> getPathToNames() Returns the criterion for the pathToNames constraint.","Set<String> getPolicy() Returns the criterion for the policy constraint.","Date getPrivateKeyValid() Returns the criterion for the validity date of the private key.","BigInteger getSerialNumber() Returns the serial number that a certificate must match.","X500Principal getSubject() Returns the subject that a certificate must match.","Collection<List<?>> getSubjectAlternativeNames() Returns the criterion for subject alternative names.","byte[] getSubjectAsBytes() Returns the subject that a certificate must match.","String getSubjectAsString() Do not use, use getSubject() or getSubjectAsBytes() instead.","byte[] getSubjectKeyIdentifier() Returns the criterion for the SubjectKeyIdentifier extension.","PublicKey getSubjectPublicKey() Returns the criterion for the subject public key.","String getSubjectPublicKeyAlgID() Returns the criterion for the subject public key signature algorithm.","boolean match(Certificate certificate) Returns whether the specified certificate matches all the criteria collected in this instance.","void setAuthorityKeyIdentifier(byte[] authorityKeyIdentifier) Sets the criterion for the AuthorityKeyIdentifier extension.","void setBasicConstraints(int pathLen) Sets the criterion for the basic constraints extension.","void setCertificate(X509Certificate certificate) Sets the certificate that a matching certificate must be equal to.","void setCertificateValid(Date certificateValid) Sets the criterion for the validity date of the certificate.","void setExtendedKeyUsage(Set<String> keyUsage) Sets the criterion for the ExtendedKeyUsage extension.","void setIssuer(String issuerName) Do not use, use getIssuer() or getIssuerAsBytes() instead.","void setIssuer(X500Principal issuer) Sets the issuer that a certificate must match.","void setIssuer(byte[] issuerDN) Sets the issuer that a certificate must match.","void setKeyUsage(boolean[] keyUsage) Sets the criterion for the KeyUsage extension.","void setMatchAllSubjectAltNames(boolean matchAllNames) Sets the flag for the matching behavior for subject alternative names.","void setNameConstraints(byte[] bytes) Sets the criterion for the name constraints.","void setPathToNames(Collection<List<?>> names) Sets the criterion for the pathToNames constraint.","void setPolicy(Set<String> policies) Sets the criterion for the policy constraint.","void setPrivateKeyValid(Date privateKeyValid) Sets the criterion for the validity date of the private key.","void setSerialNumber(BigInteger serialNumber) Sets the serial number that a certificate must match.","void setSubject(X500Principal subject) Set the subject that a certificate must match.","void setSubject(String subjectDN) Do not use, use setSubject(byte[]) or setSubject(X500Principal) instead.","void setSubject(byte[] subjectDN) Sets the subject that a certificate must match.","void setSubjectAlternativeNames(Collection<List<?>> names) Sets the criterion for subject alternative names.","void setSubjectKeyIdentifier(byte[] subjectKeyIdentifier) Sets the criterion for the SubjectKeyIdentifier extension.","void setSubjectPublicKey(byte[] key) Sets the criterion for the subject public key.","void setSubjectPublicKey(PublicKey key) Sets the criterion for the subject public key.","void setSubjectPublicKeyAlgID(String oid) Sets the criterion for the subject public key signature algorithm.","String toString() Returns a string representation of this X509CertSelector instance.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface java.security.cert.CertSelector abstract Object clone() Clones this CertSelector instance. abstract boolean match(Certificate cert) Checks whether the defined criteria of this instance match the specified certificate.","abstract Object clone() Clones this CertSelector instance.","abstract boolean match(Certificate cert) Checks whether the defined criteria of this instance match the specified certificate."],"package":"java.security.cert","constants":[],"class":"X509CertSelector","constructors":[],"fields":[]}