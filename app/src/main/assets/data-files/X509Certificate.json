{"methods":["abstract void checkValidity() Checks whether the certificate is currently valid.","abstract void checkValidity(Date date) Checks whether the certificate is valid at the specified date.","final static X509Certificate getInstance(InputStream inStream) Creates a new X509Certificate and initializes it from the specified input stream.","final static X509Certificate getInstance(byte[] certData) Creates a new X509Certificate and initializes it from the specified byte array.","abstract Principal getIssuerDN() Returns the issuer (issuer distinguished name) as an implementation specific Principal object.","abstract Date getNotAfter() Returns the notAfter date of the validity period of the certificate.","abstract Date getNotBefore() Returns the notBefore date from the validity period of the certificate.","abstract BigInteger getSerialNumber() Returns the serialNumber of the certificate.","abstract String getSigAlgName() Returns the name of the algorithm for the certificate signature.","abstract String getSigAlgOID() Returns the OID of the signature algorithm from the certificate.","abstract byte[] getSigAlgParams() Returns the parameters of the signature algorithm in DER-encoded format.","abstract Principal getSubjectDN() Returns the subject (subject distinguished name) as an implementation specific Principal object.","abstract int getVersion() Returns the certificates version (version number).","[Expand] Inherited Methods","From class javax.security.cert.Certificate boolean equals(Object obj) Compares the argument to this Certificate. abstract byte[] getEncoded() Returns the encoded representation for this certificate. abstract PublicKey getPublicKey() Returns the public key corresponding to this certificate. int hashCode() Returns an integer hash code for the receiver. abstract String toString() Returns a string containing a concise, human-readable description of the receiver. abstract void verify(PublicKey key, String sigProvider) Verifies that this certificate was signed with the given public key. abstract void verify(PublicKey key) Verifies that this certificate was signed with the given public key.","boolean equals(Object obj) Compares the argument to this Certificate.","abstract byte[] getEncoded() Returns the encoded representation for this certificate.","abstract PublicKey getPublicKey() Returns the public key corresponding to this certificate.","int hashCode() Returns an integer hash code for the receiver.","abstract String toString() Returns a string containing a concise, human-readable description of the receiver.","abstract void verify(PublicKey key, String sigProvider) Verifies that this certificate was signed with the given public key.","abstract void verify(PublicKey key) Verifies that this certificate was signed with the given public key.","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires."],"package":"javax.security.cert","constants":[],"class":"X509Certificate","constructors":[],"fields":[]}