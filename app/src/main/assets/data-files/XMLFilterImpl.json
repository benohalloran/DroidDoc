{"methods":["void characters(char[] ch, int start, int length) Filter a character data event.","void endDocument() Filter an end document event.","void endElement(String uri, String localName, String qName) Filter an end element event.","void endPrefixMapping(String prefix) Filter an end Namespace prefix mapping event.","void error(SAXParseException e) Filter an error event.","void fatalError(SAXParseException e) Filter a fatal error event.","ContentHandler getContentHandler() Get the content event handler.","DTDHandler getDTDHandler() Get the current DTD event handler.","EntityResolver getEntityResolver() Get the current entity resolver.","ErrorHandler getErrorHandler() Get the current error event handler.","boolean getFeature(String name) Look up the value of a feature.","XMLReader getParent() Get the parent reader.","Object getProperty(String name) Look up the value of a property.","void ignorableWhitespace(char[] ch, int start, int length) Filter an ignorable whitespace event.","void notationDecl(String name, String publicId, String systemId) Filter a notation declaration event.","void parse(InputSource input) Parse a document.","void parse(String systemId) Parse a document.","void processingInstruction(String target, String data) Filter a processing instruction event.","InputSource resolveEntity(String publicId, String systemId) Filter an external entity resolution.","void setContentHandler(ContentHandler handler) Set the content event handler.","void setDTDHandler(DTDHandler handler) Set the DTD event handler.","void setDocumentLocator(Locator locator) Filter a new document locator event.","void setEntityResolver(EntityResolver resolver) Set the entity resolver.","void setErrorHandler(ErrorHandler handler) Set the error event handler.","void setFeature(String name, boolean value) Set the value of a feature.","void setParent(XMLReader parent) Set the parent reader.","void setProperty(String name, Object value) Set the value of a property.","void skippedEntity(String name) Filter a skipped entity event.","void startDocument() Filter a start document event.","void startElement(String uri, String localName, String qName, Attributes atts) Filter a start element event.","void startPrefixMapping(String prefix, String uri) Filter a start Namespace prefix mapping event.","void unparsedEntityDecl(String name, String publicId, String systemId, String notationName) Filter an unparsed entity declaration event.","void warning(SAXParseException e) Filter a warning event.","[Expand] Inherited Methods","From class java.lang.Object Object clone() Creates and returns a copy of this Object. boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal. void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable. final Class<?> getClass() Returns the unique instance of Class that represents this object's class. int hashCode() Returns an integer hash code for this object. final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up. String toString() Returns a string containing a concise, human-readable description of this object. final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object. final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires. final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","Object clone() Creates and returns a copy of this Object.","boolean equals(Object o) Compares this instance with the specified object and indicates if they are equal.","void finalize() Invoked when the garbage collector has detected that this instance is no longer reachable.","final Class<?> getClass() Returns the unique instance of Class that represents this object's class.","int hashCode() Returns an integer hash code for this object.","final void notify() Causes a thread which is waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","final void notifyAll() Causes all threads which are waiting on this object's monitor (by means of calling one of the wait() methods) to be woken up.","String toString() Returns a string containing a concise, human-readable description of this object.","final void wait() Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object.","final void wait(long millis, int nanos) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","final void wait(long millis) Causes the calling thread to wait until another thread calls the notify() or notifyAll() method of this object or until the specified timeout expires.","From interface org.xml.sax.ContentHandler abstract void characters(char[] ch, int start, int length) Receive notification of character data. abstract void endDocument() Receive notification of the end of a document. abstract void endElement(String uri, String localName, String qName) Receive notification of the end of an element. abstract void endPrefixMapping(String prefix) End the scope of a prefix-URI mapping. abstract void ignorableWhitespace(char[] ch, int start, int length) Receive notification of ignorable whitespace in element content. abstract void processingInstruction(String target, String data) Receive notification of a processing instruction. abstract void setDocumentLocator(Locator locator) Receive an object for locating the origin of SAX document events. abstract void skippedEntity(String name) Receive notification of a skipped entity. abstract void startDocument() Receive notification of the beginning of a document. abstract void startElement(String uri, String localName, String qName, Attributes atts) Receive notification of the beginning of an element. abstract void startPrefixMapping(String prefix, String uri) Begin the scope of a prefix-URI Namespace mapping.","abstract void characters(char[] ch, int start, int length) Receive notification of character data.","abstract void endDocument() Receive notification of the end of a document.","abstract void endElement(String uri, String localName, String qName) Receive notification of the end of an element.","abstract void endPrefixMapping(String prefix) End the scope of a prefix-URI mapping.","abstract void ignorableWhitespace(char[] ch, int start, int length) Receive notification of ignorable whitespace in element content.","abstract void processingInstruction(String target, String data) Receive notification of a processing instruction.","abstract void setDocumentLocator(Locator locator) Receive an object for locating the origin of SAX document events.","abstract void skippedEntity(String name) Receive notification of a skipped entity.","abstract void startDocument() Receive notification of the beginning of a document.","abstract void startElement(String uri, String localName, String qName, Attributes atts) Receive notification of the beginning of an element.","abstract void startPrefixMapping(String prefix, String uri) Begin the scope of a prefix-URI Namespace mapping.","From interface org.xml.sax.DTDHandler abstract void notationDecl(String name, String publicId, String systemId) Receive notification of a notation declaration event. abstract void unparsedEntityDecl(String name, String publicId, String systemId, String notationName) Receive notification of an unparsed entity declaration event.","abstract void notationDecl(String name, String publicId, String systemId) Receive notification of a notation declaration event.","abstract void unparsedEntityDecl(String name, String publicId, String systemId, String notationName) Receive notification of an unparsed entity declaration event.","From interface org.xml.sax.EntityResolver abstract InputSource resolveEntity(String publicId, String systemId) Allow the application to resolve external entities.","abstract InputSource resolveEntity(String publicId, String systemId) Allow the application to resolve external entities.","From interface org.xml.sax.ErrorHandler abstract void error(SAXParseException exception) Receive notification of a recoverable error. abstract void fatalError(SAXParseException exception) Receive notification of a non-recoverable error. abstract void warning(SAXParseException exception) Receive notification of a warning.","abstract void error(SAXParseException exception) Receive notification of a recoverable error.","abstract void fatalError(SAXParseException exception) Receive notification of a non-recoverable error.","abstract void warning(SAXParseException exception) Receive notification of a warning.","From interface org.xml.sax.XMLFilter abstract XMLReader getParent() Get the parent reader. abstract void setParent(XMLReader parent) Set the parent reader.","abstract XMLReader getParent() Get the parent reader.","abstract void setParent(XMLReader parent) Set the parent reader.","From interface org.xml.sax.XMLReader abstract ContentHandler getContentHandler() Return the current content handler. abstract DTDHandler getDTDHandler() Return the current DTD handler. abstract EntityResolver getEntityResolver() Return the current entity resolver. abstract ErrorHandler getErrorHandler() Return the current error handler. abstract boolean getFeature(String name) Look up the value of a feature flag. abstract Object getProperty(String name) Look up the value of a property. abstract void parse(String systemId) Parse an XML document from a system identifier (URI). abstract void parse(InputSource input) Parse an XML document. abstract void setContentHandler(ContentHandler handler) Allow an application to register a content event handler. abstract void setDTDHandler(DTDHandler handler) Allow an application to register a DTD event handler. abstract void setEntityResolver(EntityResolver resolver) Allow an application to register an entity resolver. abstract void setErrorHandler(ErrorHandler handler) Allow an application to register an error event handler. abstract void setFeature(String name, boolean value) Set the value of a feature flag. abstract void setProperty(String name, Object value) Set the value of a property.","abstract ContentHandler getContentHandler() Return the current content handler.","abstract DTDHandler getDTDHandler() Return the current DTD handler.","abstract EntityResolver getEntityResolver() Return the current entity resolver.","abstract ErrorHandler getErrorHandler() Return the current error handler.","abstract boolean getFeature(String name) Look up the value of a feature flag.","abstract Object getProperty(String name) Look up the value of a property.","abstract void parse(String systemId) Parse an XML document from a system identifier (URI).","abstract void parse(InputSource input) Parse an XML document.","abstract void setContentHandler(ContentHandler handler) Allow an application to register a content event handler.","abstract void setDTDHandler(DTDHandler handler) Allow an application to register a DTD event handler.","abstract void setEntityResolver(EntityResolver resolver) Allow an application to register an entity resolver.","abstract void setErrorHandler(ErrorHandler handler) Allow an application to register an error event handler.","abstract void setFeature(String name, boolean value) Set the value of a feature flag.","abstract void setProperty(String name, Object value) Set the value of a property."],"package":"org.xml.sax.helpers","constants":[],"class":"XMLFilterImpl","constructors":[],"fields":[]}